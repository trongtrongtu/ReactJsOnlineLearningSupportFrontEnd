{"ast":null,"code":"import _regeneratorRuntime from \"/home/trongtu/Desktop/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/trongtu/Desktop/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar IpAddress = 'localhost';\nvar apiGetAllProducts = 'http://' + IpAddress + ':3002/list_all_messages';\nvar apiInsertNewProduct = 'http://' + IpAddress + ':3002/insert_new_message';\nvar apiGetAllUsers = 'https://' + IpAddress + ':4443/api/sessions';\n\nfunction getProductsFromServer() {\n  return _getProductsFromServer.apply(this, arguments);\n}\n\nfunction _getProductsFromServer() {\n  _getProductsFromServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, responseJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(apiGetAllProducts);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            responseJson = _context.sent;\n            return _context.abrupt(\"return\", responseJson.data);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Error is : \".concat(_context.t0));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _getProductsFromServer.apply(this, arguments);\n}\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user_name, pass_word) {\n    var response, responseJson;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(!user_name || !pass_word)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 'empty');\n\n          case 5:\n            _context2.next = 7;\n            return fetch(\"http://\".concat(IpAddress, \":3001/login?username=\").concat(user_name, \"&password=\").concat(pass_word));\n\n          case 7:\n            response = _context2.sent;\n            _context2.next = 10;\n            return response.json();\n\n          case 10:\n            responseJson = _context2.sent;\n            sessionStorage.setItem(\"user\", responseJson.data[0].username);\n            return _context2.abrupt(\"return\", responseJson.result);\n\n          case 13:\n            _context2.next = 18;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(\"Error is : \".concat(_context2.t0));\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 15]]);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction getUsersFromServer() {\n  return _getUsersFromServer.apply(this, arguments);\n}\n\nfunction _getUsersFromServer() {\n  _getUsersFromServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response, responseJson;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch(apiGetAllUsers);\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return response.json();\n\n          case 6:\n            responseJson = _context3.sent;\n            return _context3.abrupt(\"return\", responseJson.data);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(\"Error is : \".concat(_context3.t0));\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n  return _getUsersFromServer.apply(this, arguments);\n}\n\nexport { getProductsFromServer };\nexport { login };\nexport { getUsersFromServer };","map":{"version":3,"sources":["/home/trongtu/Desktop/baitaplon_frontend/src/User/UserFunction.js"],"names":["IpAddress","apiGetAllProducts","apiInsertNewProduct","apiGetAllUsers","getProductsFromServer","fetch","response","json","responseJson","data","console","error","login","user_name","pass_word","sessionStorage","setItem","username","result","getUsersFromServer"],"mappings":";;AAAA,IAAMA,SAAS,GAAG,WAAlB;AACA,IAAMC,iBAAiB,GAAG,YAAYD,SAAZ,GAAwB,yBAAlD;AACA,IAAME,mBAAmB,GAAG,YAAYF,SAAZ,GAAwB,0BAApD;AACA,IAAMG,cAAc,GAAG,aAAaH,SAAb,GAAyB,oBAAhD;;SAEeI,qB;;;;;oFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEyBC,KAAK,CAACJ,iBAAD,CAF9B;;AAAA;AAEQK,YAAAA,QAFR;AAAA;AAAA,mBAG6BA,QAAQ,CAACC,IAAT,EAH7B;;AAAA;AAGQC,YAAAA,YAHR;AAAA,6CAIWA,YAAY,CAACC,IAJxB;;AAAA;AAAA;AAAA;AAMIC,YAAAA,OAAO,CAACC,KAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeC,K;;;;;oEAAf,kBAAqBC,SAArB,EAAgCC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEQ,CAACD,SAAD,IAAc,CAACC,SAFvB;AAAA;AAAA;AAAA;;AAAA,8CAGa,OAHb;;AAAA;AAAA;AAAA,mBAK2BT,KAAK,kBAAWL,SAAX,kCAA4Ca,SAA5C,uBAAkEC,SAAlE,EALhC;;AAAA;AAKUR,YAAAA,QALV;AAAA;AAAA,mBAM+BA,QAAQ,CAACC,IAAT,EAN/B;;AAAA;AAMUC,YAAAA,YANV;AAOMO,YAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA8BR,YAAY,CAACC,IAAb,CAAkB,CAAlB,EAAqBQ,QAAnD;AAPN,8CAQaT,YAAY,CAACU,MAR1B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWIR,YAAAA,OAAO,CAACC,KAAR;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAceQ,kB;;;;;iFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEyBd,KAAK,CAACF,cAAD,CAF9B;;AAAA;AAEQG,YAAAA,QAFR;AAAA;AAAA,mBAG6BA,QAAQ,CAACC,IAAT,EAH7B;;AAAA;AAGQC,YAAAA,YAHR;AAAA,8CAIWA,YAAY,CAACC,IAJxB;;AAAA;AAAA;AAAA;AAMIC,YAAAA,OAAO,CAACC,KAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA,SAASP,qBAAT;AACA,SAASQ,KAAT;AACA,SAASO,kBAAT","sourcesContent":["const IpAddress = 'localhost';\nconst apiGetAllProducts = 'http://' + IpAddress + ':3002/list_all_messages';\nconst apiInsertNewProduct = 'http://' + IpAddress + ':3002/insert_new_message';\nconst apiGetAllUsers = 'https://' + IpAddress + ':4443/api/sessions';\n\nasync function getProductsFromServer() {\n  try {\n    let response = await fetch(apiGetAllProducts);\n    let responseJson = await response.json();\n    return responseJson.data;\n  } catch (error) {\n    console.error(`Error is : ${error}`);\n  }\n}\nasync function login(user_name, pass_word) {\n  try {\n    if (!user_name || !pass_word) {\n      return 'empty';\n    } else {\n      let response = await fetch(`http://${IpAddress}:3001/login?username=${user_name}&password=${pass_word}`);\n      let responseJson = await response.json();\n      sessionStorage.setItem(\"user\",responseJson.data[0].username);\n      return responseJson.result;\n    }\n  } catch (error) {\n    console.error(`Error is : ${error}`);\n  }\n}\nasync function getUsersFromServer() {\n  try {\n    let response = await fetch(apiGetAllUsers);\n    let responseJson = await response.json();\n    return responseJson.data;\n  } catch (error) {\n    console.error(`Error is : ${error}`);\n  }\n}\nexport { getProductsFromServer };\nexport { login };\nexport { getUsersFromServer };"]},"metadata":{},"sourceType":"module"}