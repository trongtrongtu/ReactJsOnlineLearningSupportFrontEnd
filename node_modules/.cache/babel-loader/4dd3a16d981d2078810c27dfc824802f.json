{"ast":null,"code":"var defineProperty_IE8 = false;\n\nif (Object.defineProperty) {\n  try {\n    Object.defineProperty({}, \"x\", {});\n  } catch (e) {\n    defineProperty_IE8 = true;\n  }\n}\n\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function (oThis) {\n    if (typeof this !== 'function') {\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP = function fNOP() {},\n        fBound = function fBound() {\n      return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n    };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n    return fBound;\n  };\n}\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('inherits');\n\nvar packers = require('./packers');\n\nvar Mapper = require('./Mapper');\n\nvar BASE_TIMEOUT = 5000;\n\nfunction unifyResponseMethods(responseMethods) {\n  if (!responseMethods) return {};\n\n  for (var key in responseMethods) {\n    var value = responseMethods[key];\n    if (typeof value == 'string') responseMethods[key] = {\n      response: value\n    };\n  }\n\n  ;\n  return responseMethods;\n}\n\n;\n\nfunction unifyTransport(transport) {\n  if (!transport) return;\n  if (transport instanceof Function) return {\n    send: transport\n  };\n  if (transport.send instanceof Function) return transport;\n\n  if (transport.postMessage instanceof Function) {\n    transport.send = transport.postMessage;\n    return transport;\n  }\n\n  if (transport.write instanceof Function) {\n    transport.send = transport.write;\n    return transport;\n  }\n\n  if (transport.onmessage !== undefined) return;\n  if (transport.pause instanceof Function) return;\n  throw new SyntaxError(\"Transport is not a function nor a valid object\");\n}\n\n;\n\nfunction RpcNotification(method, params) {\n  if (defineProperty_IE8) {\n    this.method = method;\n    this.params = params;\n  } else {\n    Object.defineProperty(this, 'method', {\n      value: method,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'params', {\n      value: params,\n      enumerable: true\n    });\n  }\n}\n\n;\n\nfunction RpcBuilder(packer, options, transport, onRequest) {\n  var self = this;\n  if (!packer) throw new SyntaxError('Packer is not defined');\n  if (!packer.pack || !packer.unpack) throw new SyntaxError('Packer is invalid');\n  var responseMethods = unifyResponseMethods(packer.responseMethods);\n\n  if (options instanceof Function) {\n    if (transport != undefined) throw new SyntaxError(\"There can't be parameters after onRequest\");\n    onRequest = options;\n    transport = undefined;\n    options = undefined;\n  }\n\n  ;\n\n  if (options && options.send instanceof Function) {\n    if (transport && !(transport instanceof Function)) throw new SyntaxError(\"Only a function can be after transport\");\n    onRequest = transport;\n    transport = options;\n    options = undefined;\n  }\n\n  ;\n\n  if (transport instanceof Function) {\n    if (onRequest != undefined) throw new SyntaxError(\"There can't be parameters after onRequest\");\n    onRequest = transport;\n    transport = undefined;\n  }\n\n  ;\n  if (transport && transport.send instanceof Function) if (onRequest && !(onRequest instanceof Function)) throw new SyntaxError(\"Only a function can be after transport\");\n  options = options || {};\n  EventEmitter.call(this);\n  if (onRequest) this.on('request', onRequest);\n  if (defineProperty_IE8) this.peerID = options.peerID;else Object.defineProperty(this, 'peerID', {\n    value: options.peerID\n  });\n  var max_retries = options.max_retries || 0;\n\n  function transportMessage(event) {\n    self.decode(event.data || event);\n  }\n\n  ;\n\n  this.getTransport = function () {\n    return transport;\n  };\n\n  this.setTransport = function (value) {\n    if (transport) {\n      if (transport.removeEventListener) transport.removeEventListener('message', transportMessage);else if (transport.removeListener) transport.removeListener('data', transportMessage);\n    }\n\n    ;\n\n    if (value) {\n      if (value.addEventListener) value.addEventListener('message', transportMessage);else if (value.addListener) value.addListener('data', transportMessage);\n    }\n\n    ;\n    transport = unifyTransport(value);\n  };\n\n  if (!defineProperty_IE8) Object.defineProperty(this, 'transport', {\n    get: this.getTransport.bind(this),\n    set: this.setTransport.bind(this)\n  });\n  this.setTransport(transport);\n  var request_timeout = options.request_timeout || BASE_TIMEOUT;\n  var ping_request_timeout = options.ping_request_timeout || request_timeout;\n  var response_timeout = options.response_timeout || BASE_TIMEOUT;\n  var duplicates_timeout = options.duplicates_timeout || BASE_TIMEOUT;\n  var requestID = 0;\n  var requests = new Mapper();\n  var responses = new Mapper();\n  var processedResponses = new Mapper();\n  var message2Key = {};\n\n  function storeResponse(message, id, dest) {\n    var response = {\n      message: message,\n      timeout: setTimeout(function () {\n        responses.remove(id, dest);\n      }, response_timeout)\n    };\n    responses.set(response, id, dest);\n  }\n\n  ;\n\n  function storeProcessedResponse(ack, from) {\n    var timeout = setTimeout(function () {\n      processedResponses.remove(ack, from);\n    }, duplicates_timeout);\n    processedResponses.set(timeout, ack, from);\n  }\n\n  ;\n\n  function RpcRequest(method, params, id, from, transport) {\n    RpcNotification.call(this, method, params);\n\n    this.getTransport = function () {\n      return transport;\n    };\n\n    this.setTransport = function (value) {\n      transport = unifyTransport(value);\n    };\n\n    if (!defineProperty_IE8) Object.defineProperty(this, 'transport', {\n      get: this.getTransport.bind(this),\n      set: this.setTransport.bind(this)\n    });\n    var response = responses.get(id, from);\n\n    if (!(transport || self.getTransport())) {\n      if (defineProperty_IE8) this.duplicated = Boolean(response);else Object.defineProperty(this, 'duplicated', {\n        value: Boolean(response)\n      });\n    }\n\n    var responseMethod = responseMethods[method];\n    this.pack = packer.pack.bind(packer, this, id);\n\n    this.reply = function (error, result, transport) {\n      if (error instanceof Function || error && error.send instanceof Function) {\n        if (result != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n        transport = error;\n        result = null;\n        error = undefined;\n      } else if (result instanceof Function || result && result.send instanceof Function) {\n        if (transport != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n        transport = result;\n        result = null;\n      }\n\n      ;\n      transport = unifyTransport(transport);\n      if (response) clearTimeout(response.timeout);\n\n      if (from != undefined) {\n        if (error) error.dest = from;\n        if (result) result.dest = from;\n      }\n\n      ;\n      var message;\n\n      if (error || result != undefined) {\n        if (self.peerID != undefined) {\n          if (error) error.from = self.peerID;else result.from = self.peerID;\n        }\n\n        if (responseMethod) {\n          if (responseMethod.error == undefined && error) message = {\n            error: error\n          };else {\n            var method = error ? responseMethod.error : responseMethod.response;\n            message = {\n              method: method,\n              params: error || result\n            };\n          }\n        } else message = {\n          error: error,\n          result: result\n        };\n\n        message = packer.pack(message, id);\n      } else if (response) message = response.message;else message = packer.pack({\n        result: null\n      }, id);\n\n      storeResponse(message, id, from);\n      transport = transport || this.getTransport() || self.getTransport();\n      if (transport) return transport.send(message);\n      return message;\n    };\n  }\n\n  ;\n  inherits(RpcRequest, RpcNotification);\n\n  function cancel(message) {\n    var key = message2Key[message];\n    if (!key) return;\n    delete message2Key[message];\n    var request = requests.pop(key.id, key.dest);\n    if (!request) return;\n    clearTimeout(request.timeout);\n    storeProcessedResponse(key.id, key.dest);\n  }\n\n  ;\n\n  this.cancel = function (message) {\n    if (message) return cancel(message);\n\n    for (var message in message2Key) {\n      cancel(message);\n    }\n  };\n\n  this.close = function () {\n    var transport = this.getTransport();\n    if (transport && transport.close) transport.close(4003, \"Cancel request\");\n    this.cancel();\n    processedResponses.forEach(clearTimeout);\n    responses.forEach(function (response) {\n      clearTimeout(response.timeout);\n    });\n  };\n\n  this.encode = function (method, params, dest, transport, callback) {\n    if (params instanceof Function) {\n      if (dest != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n      callback = params;\n      transport = undefined;\n      dest = undefined;\n      params = undefined;\n    } else if (dest instanceof Function) {\n      if (transport != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n      callback = dest;\n      transport = undefined;\n      dest = undefined;\n    } else if (transport instanceof Function) {\n      if (callback != undefined) throw new SyntaxError(\"There can't be parameters after callback\");\n      callback = transport;\n      transport = undefined;\n    }\n\n    ;\n\n    if (self.peerID != undefined) {\n      params = params || {};\n      params.from = self.peerID;\n    }\n\n    ;\n\n    if (dest != undefined) {\n      params = params || {};\n      params.dest = dest;\n    }\n\n    ;\n    var message = {\n      method: method,\n      params: params\n    };\n\n    if (callback) {\n      var dispatchCallback = function dispatchCallback(error, result) {\n        self.cancel(message);\n        callback(error, result);\n      };\n\n      var sendRequest = function sendRequest(transport) {\n        var rt = method === 'ping' ? ping_request_timeout : request_timeout;\n        request.timeout = setTimeout(timeout, rt * Math.pow(2, retried++));\n        message2Key[message] = {\n          id: id,\n          dest: dest\n        };\n        requests.set(request, id, dest);\n        transport = transport || encode_transport || self.getTransport();\n        if (transport) return transport.send(message);\n        return message;\n      };\n\n      var retry = function retry(transport) {\n        transport = unifyTransport(transport);\n        console.warn(retried + ' retry for request message:', message);\n        var timeout = processedResponses.pop(id, dest);\n        clearTimeout(timeout);\n        return sendRequest(transport);\n      };\n\n      var timeout = function timeout() {\n        if (retried < max_retries) return retry(transport);\n        var error = new Error('Request has timed out');\n        error.request = message;\n        error.retry = retry;\n        dispatchCallback(error);\n      };\n\n      var id = requestID++;\n      var retried = 0;\n      message = packer.pack(message, id);\n      ;\n      var request = {\n        message: message,\n        callback: dispatchCallback,\n        responseMethods: responseMethods[method] || {}\n      };\n      var encode_transport = unifyTransport(transport);\n      ;\n      ;\n      ;\n      return sendRequest(transport);\n    }\n\n    ;\n    message = packer.pack(message);\n    transport = transport || this.getTransport();\n    if (transport) return transport.send(message);\n    return message;\n  };\n\n  this.decode = function (message, transport) {\n    if (!message) throw new TypeError(\"Message is not defined\");\n\n    try {\n      message = packer.unpack(message);\n    } catch (e) {\n      return console.debug(e, message);\n    }\n\n    ;\n    var id = message.id;\n    var ack = message.ack;\n    var method = message.method;\n    var params = message.params || {};\n    var from = params.from;\n    var dest = params.dest;\n    if (self.peerID != undefined && from == self.peerID) return;\n\n    if (id == undefined && ack == undefined) {\n      var notification = new RpcNotification(method, params);\n      if (self.emit('request', notification)) return;\n      return notification;\n    }\n\n    ;\n\n    function processRequest() {\n      transport = unifyTransport(transport) || self.getTransport();\n\n      if (transport) {\n        var response = responses.get(id, from);\n        if (response) return transport.send(response.message);\n      }\n\n      ;\n      var idAck = id != undefined ? id : ack;\n      var request = new RpcRequest(method, params, idAck, from, transport);\n      if (self.emit('request', request)) return;\n      return request;\n    }\n\n    ;\n\n    function processResponse(request, error, result) {\n      request.callback(error, result);\n    }\n\n    ;\n\n    function duplicatedResponse(timeout) {\n      console.warn(\"Response already processed\", message);\n      clearTimeout(timeout);\n      storeProcessedResponse(ack, from);\n    }\n\n    ;\n\n    if (method) {\n      if (dest == undefined || dest == self.peerID) {\n        var request = requests.get(ack, from);\n\n        if (request) {\n          var responseMethods = request.responseMethods;\n          if (method == responseMethods.error) return processResponse(request, params);\n          if (method == responseMethods.response) return processResponse(request, null, params);\n          return processRequest();\n        }\n\n        var processed = processedResponses.get(ack, from);\n        if (processed) return duplicatedResponse(processed);\n      }\n\n      return processRequest();\n    }\n\n    ;\n    var error = message.error;\n    var result = message.result;\n    if (error && error.dest && error.dest != self.peerID) return;\n    if (result && result.dest && result.dest != self.peerID) return;\n    var request = requests.get(ack, from);\n\n    if (!request) {\n      var processed = processedResponses.get(ack, from);\n      if (processed) return duplicatedResponse(processed);\n      return console.warn(\"No callback was defined for this message\", message);\n    }\n\n    ;\n    processResponse(request, error, result);\n  };\n}\n\n;\ninherits(RpcBuilder, EventEmitter);\nRpcBuilder.RpcNotification = RpcNotification;\nmodule.exports = RpcBuilder;\n\nvar clients = require('./clients');\n\nvar transports = require('./clients/transports');\n\nRpcBuilder.clients = clients;\nRpcBuilder.clients.transports = transports;\nRpcBuilder.packers = packers;","map":{"version":3,"sources":["../../../../src/OpenViduInternal/KurentoUtils/kurento-jsonrpc/index.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var defineProperty_IE8 = false;\nif (Object.defineProperty) {\n    try {\n        Object.defineProperty({}, \"x\", {});\n    }\n    catch (e) {\n        defineProperty_IE8 = true;\n    }\n}\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== 'function') {\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n        var aArgs = Array.prototype.slice.call(arguments, 1), fToBind = this, fNOP = function () { }, fBound = function () {\n            return fToBind.apply(this instanceof fNOP && oThis\n                ? this\n                : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n        return fBound;\n    };\n}\nvar EventEmitter = require('events').EventEmitter;\nvar inherits = require('inherits');\nvar packers = require('./packers');\nvar Mapper = require('./Mapper');\nvar BASE_TIMEOUT = 5000;\nfunction unifyResponseMethods(responseMethods) {\n    if (!responseMethods)\n        return {};\n    for (var key in responseMethods) {\n        var value = responseMethods[key];\n        if (typeof value == 'string')\n            responseMethods[key] =\n                {\n                    response: value\n                };\n    }\n    ;\n    return responseMethods;\n}\n;\nfunction unifyTransport(transport) {\n    if (!transport)\n        return;\n    if (transport instanceof Function)\n        return { send: transport };\n    if (transport.send instanceof Function)\n        return transport;\n    if (transport.postMessage instanceof Function) {\n        transport.send = transport.postMessage;\n        return transport;\n    }\n    if (transport.write instanceof Function) {\n        transport.send = transport.write;\n        return transport;\n    }\n    if (transport.onmessage !== undefined)\n        return;\n    if (transport.pause instanceof Function)\n        return;\n    throw new SyntaxError(\"Transport is not a function nor a valid object\");\n}\n;\nfunction RpcNotification(method, params) {\n    if (defineProperty_IE8) {\n        this.method = method;\n        this.params = params;\n    }\n    else {\n        Object.defineProperty(this, 'method', { value: method, enumerable: true });\n        Object.defineProperty(this, 'params', { value: params, enumerable: true });\n    }\n}\n;\nfunction RpcBuilder(packer, options, transport, onRequest) {\n    var self = this;\n    if (!packer)\n        throw new SyntaxError('Packer is not defined');\n    if (!packer.pack || !packer.unpack)\n        throw new SyntaxError('Packer is invalid');\n    var responseMethods = unifyResponseMethods(packer.responseMethods);\n    if (options instanceof Function) {\n        if (transport != undefined)\n            throw new SyntaxError(\"There can't be parameters after onRequest\");\n        onRequest = options;\n        transport = undefined;\n        options = undefined;\n    }\n    ;\n    if (options && options.send instanceof Function) {\n        if (transport && !(transport instanceof Function))\n            throw new SyntaxError(\"Only a function can be after transport\");\n        onRequest = transport;\n        transport = options;\n        options = undefined;\n    }\n    ;\n    if (transport instanceof Function) {\n        if (onRequest != undefined)\n            throw new SyntaxError(\"There can't be parameters after onRequest\");\n        onRequest = transport;\n        transport = undefined;\n    }\n    ;\n    if (transport && transport.send instanceof Function)\n        if (onRequest && !(onRequest instanceof Function))\n            throw new SyntaxError(\"Only a function can be after transport\");\n    options = options || {};\n    EventEmitter.call(this);\n    if (onRequest)\n        this.on('request', onRequest);\n    if (defineProperty_IE8)\n        this.peerID = options.peerID;\n    else\n        Object.defineProperty(this, 'peerID', { value: options.peerID });\n    var max_retries = options.max_retries || 0;\n    function transportMessage(event) {\n        self.decode(event.data || event);\n    }\n    ;\n    this.getTransport = function () {\n        return transport;\n    };\n    this.setTransport = function (value) {\n        if (transport) {\n            if (transport.removeEventListener)\n                transport.removeEventListener('message', transportMessage);\n            else if (transport.removeListener)\n                transport.removeListener('data', transportMessage);\n        }\n        ;\n        if (value) {\n            if (value.addEventListener)\n                value.addEventListener('message', transportMessage);\n            else if (value.addListener)\n                value.addListener('data', transportMessage);\n        }\n        ;\n        transport = unifyTransport(value);\n    };\n    if (!defineProperty_IE8)\n        Object.defineProperty(this, 'transport', {\n            get: this.getTransport.bind(this),\n            set: this.setTransport.bind(this)\n        });\n    this.setTransport(transport);\n    var request_timeout = options.request_timeout || BASE_TIMEOUT;\n    var ping_request_timeout = options.ping_request_timeout || request_timeout;\n    var response_timeout = options.response_timeout || BASE_TIMEOUT;\n    var duplicates_timeout = options.duplicates_timeout || BASE_TIMEOUT;\n    var requestID = 0;\n    var requests = new Mapper();\n    var responses = new Mapper();\n    var processedResponses = new Mapper();\n    var message2Key = {};\n    function storeResponse(message, id, dest) {\n        var response = {\n            message: message,\n            timeout: setTimeout(function () {\n                responses.remove(id, dest);\n            }, response_timeout)\n        };\n        responses.set(response, id, dest);\n    }\n    ;\n    function storeProcessedResponse(ack, from) {\n        var timeout = setTimeout(function () {\n            processedResponses.remove(ack, from);\n        }, duplicates_timeout);\n        processedResponses.set(timeout, ack, from);\n    }\n    ;\n    function RpcRequest(method, params, id, from, transport) {\n        RpcNotification.call(this, method, params);\n        this.getTransport = function () {\n            return transport;\n        };\n        this.setTransport = function (value) {\n            transport = unifyTransport(value);\n        };\n        if (!defineProperty_IE8)\n            Object.defineProperty(this, 'transport', {\n                get: this.getTransport.bind(this),\n                set: this.setTransport.bind(this)\n            });\n        var response = responses.get(id, from);\n        if (!(transport || self.getTransport())) {\n            if (defineProperty_IE8)\n                this.duplicated = Boolean(response);\n            else\n                Object.defineProperty(this, 'duplicated', {\n                    value: Boolean(response)\n                });\n        }\n        var responseMethod = responseMethods[method];\n        this.pack = packer.pack.bind(packer, this, id);\n        this.reply = function (error, result, transport) {\n            if (error instanceof Function || error && error.send instanceof Function) {\n                if (result != undefined)\n                    throw new SyntaxError(\"There can't be parameters after callback\");\n                transport = error;\n                result = null;\n                error = undefined;\n            }\n            else if (result instanceof Function\n                || result && result.send instanceof Function) {\n                if (transport != undefined)\n                    throw new SyntaxError(\"There can't be parameters after callback\");\n                transport = result;\n                result = null;\n            }\n            ;\n            transport = unifyTransport(transport);\n            if (response)\n                clearTimeout(response.timeout);\n            if (from != undefined) {\n                if (error)\n                    error.dest = from;\n                if (result)\n                    result.dest = from;\n            }\n            ;\n            var message;\n            if (error || result != undefined) {\n                if (self.peerID != undefined) {\n                    if (error)\n                        error.from = self.peerID;\n                    else\n                        result.from = self.peerID;\n                }\n                if (responseMethod) {\n                    if (responseMethod.error == undefined && error)\n                        message =\n                            {\n                                error: error\n                            };\n                    else {\n                        var method = error\n                            ? responseMethod.error\n                            : responseMethod.response;\n                        message =\n                            {\n                                method: method,\n                                params: error || result\n                            };\n                    }\n                }\n                else\n                    message =\n                        {\n                            error: error,\n                            result: result\n                        };\n                message = packer.pack(message, id);\n            }\n            else if (response)\n                message = response.message;\n            else\n                message = packer.pack({ result: null }, id);\n            storeResponse(message, id, from);\n            transport = transport || this.getTransport() || self.getTransport();\n            if (transport)\n                return transport.send(message);\n            return message;\n        };\n    }\n    ;\n    inherits(RpcRequest, RpcNotification);\n    function cancel(message) {\n        var key = message2Key[message];\n        if (!key)\n            return;\n        delete message2Key[message];\n        var request = requests.pop(key.id, key.dest);\n        if (!request)\n            return;\n        clearTimeout(request.timeout);\n        storeProcessedResponse(key.id, key.dest);\n    }\n    ;\n    this.cancel = function (message) {\n        if (message)\n            return cancel(message);\n        for (var message in message2Key)\n            cancel(message);\n    };\n    this.close = function () {\n        var transport = this.getTransport();\n        if (transport && transport.close)\n            transport.close(4003, \"Cancel request\");\n        this.cancel();\n        processedResponses.forEach(clearTimeout);\n        responses.forEach(function (response) {\n            clearTimeout(response.timeout);\n        });\n    };\n    this.encode = function (method, params, dest, transport, callback) {\n        if (params instanceof Function) {\n            if (dest != undefined)\n                throw new SyntaxError(\"There can't be parameters after callback\");\n            callback = params;\n            transport = undefined;\n            dest = undefined;\n            params = undefined;\n        }\n        else if (dest instanceof Function) {\n            if (transport != undefined)\n                throw new SyntaxError(\"There can't be parameters after callback\");\n            callback = dest;\n            transport = undefined;\n            dest = undefined;\n        }\n        else if (transport instanceof Function) {\n            if (callback != undefined)\n                throw new SyntaxError(\"There can't be parameters after callback\");\n            callback = transport;\n            transport = undefined;\n        }\n        ;\n        if (self.peerID != undefined) {\n            params = params || {};\n            params.from = self.peerID;\n        }\n        ;\n        if (dest != undefined) {\n            params = params || {};\n            params.dest = dest;\n        }\n        ;\n        var message = {\n            method: method,\n            params: params\n        };\n        if (callback) {\n            var id = requestID++;\n            var retried = 0;\n            message = packer.pack(message, id);\n            function dispatchCallback(error, result) {\n                self.cancel(message);\n                callback(error, result);\n            }\n            ;\n            var request = {\n                message: message,\n                callback: dispatchCallback,\n                responseMethods: responseMethods[method] || {}\n            };\n            var encode_transport = unifyTransport(transport);\n            function sendRequest(transport) {\n                var rt = (method === 'ping' ? ping_request_timeout : request_timeout);\n                request.timeout = setTimeout(timeout, rt * Math.pow(2, retried++));\n                message2Key[message] = { id: id, dest: dest };\n                requests.set(request, id, dest);\n                transport = transport || encode_transport || self.getTransport();\n                if (transport)\n                    return transport.send(message);\n                return message;\n            }\n            ;\n            function retry(transport) {\n                transport = unifyTransport(transport);\n                console.warn(retried + ' retry for request message:', message);\n                var timeout = processedResponses.pop(id, dest);\n                clearTimeout(timeout);\n                return sendRequest(transport);\n            }\n            ;\n            function timeout() {\n                if (retried < max_retries)\n                    return retry(transport);\n                var error = new Error('Request has timed out');\n                error.request = message;\n                error.retry = retry;\n                dispatchCallback(error);\n            }\n            ;\n            return sendRequest(transport);\n        }\n        ;\n        message = packer.pack(message);\n        transport = transport || this.getTransport();\n        if (transport)\n            return transport.send(message);\n        return message;\n    };\n    this.decode = function (message, transport) {\n        if (!message)\n            throw new TypeError(\"Message is not defined\");\n        try {\n            message = packer.unpack(message);\n        }\n        catch (e) {\n            return console.debug(e, message);\n        }\n        ;\n        var id = message.id;\n        var ack = message.ack;\n        var method = message.method;\n        var params = message.params || {};\n        var from = params.from;\n        var dest = params.dest;\n        if (self.peerID != undefined && from == self.peerID)\n            return;\n        if (id == undefined && ack == undefined) {\n            var notification = new RpcNotification(method, params);\n            if (self.emit('request', notification))\n                return;\n            return notification;\n        }\n        ;\n        function processRequest() {\n            transport = unifyTransport(transport) || self.getTransport();\n            if (transport) {\n                var response = responses.get(id, from);\n                if (response)\n                    return transport.send(response.message);\n            }\n            ;\n            var idAck = (id != undefined) ? id : ack;\n            var request = new RpcRequest(method, params, idAck, from, transport);\n            if (self.emit('request', request))\n                return;\n            return request;\n        }\n        ;\n        function processResponse(request, error, result) {\n            request.callback(error, result);\n        }\n        ;\n        function duplicatedResponse(timeout) {\n            console.warn(\"Response already processed\", message);\n            clearTimeout(timeout);\n            storeProcessedResponse(ack, from);\n        }\n        ;\n        if (method) {\n            if (dest == undefined || dest == self.peerID) {\n                var request = requests.get(ack, from);\n                if (request) {\n                    var responseMethods = request.responseMethods;\n                    if (method == responseMethods.error)\n                        return processResponse(request, params);\n                    if (method == responseMethods.response)\n                        return processResponse(request, null, params);\n                    return processRequest();\n                }\n                var processed = processedResponses.get(ack, from);\n                if (processed)\n                    return duplicatedResponse(processed);\n            }\n            return processRequest();\n        }\n        ;\n        var error = message.error;\n        var result = message.result;\n        if (error && error.dest && error.dest != self.peerID)\n            return;\n        if (result && result.dest && result.dest != self.peerID)\n            return;\n        var request = requests.get(ack, from);\n        if (!request) {\n            var processed = processedResponses.get(ack, from);\n            if (processed)\n                return duplicatedResponse(processed);\n            return console.warn(\"No callback was defined for this message\", message);\n        }\n        ;\n        processResponse(request, error, result);\n    };\n}\n;\ninherits(RpcBuilder, EventEmitter);\nRpcBuilder.RpcNotification = RpcNotification;\nmodule.exports = RpcBuilder;\nvar clients = require('./clients');\nvar transports = require('./clients/transports');\nRpcBuilder.clients = clients;\nRpcBuilder.clients.transports = transports;\nRpcBuilder.packers = packers;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}