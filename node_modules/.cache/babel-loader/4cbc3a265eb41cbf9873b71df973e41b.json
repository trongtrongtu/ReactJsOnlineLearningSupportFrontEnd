{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar freeice = require(\"freeice\");\n\nvar uuid = require(\"uuid\");\n\nvar platform = require(\"platform\");\n\nvar WebRtcPeer =\n/** @class */\nfunction () {\n  function WebRtcPeer(configuration) {\n    var _this = this;\n\n    this.configuration = configuration;\n    this.remoteCandidatesQueue = [];\n    this.localCandidatesQueue = [];\n    this.iceCandidateList = [];\n    this.candidategatheringdone = false;\n    this.configuration.iceServers = !!this.configuration.iceServers && this.configuration.iceServers.length > 0 ? this.configuration.iceServers : freeice();\n    this.pc = new RTCPeerConnection({\n      iceServers: this.configuration.iceServers\n    });\n    this.id = !!configuration.id ? configuration.id : uuid.v4();\n\n    this.pc.onicecandidate = function (event) {\n      if (!!event.candidate) {\n        var candidate = event.candidate;\n\n        if (candidate) {\n          _this.localCandidatesQueue.push({\n            candidate: candidate.candidate\n          });\n\n          _this.candidategatheringdone = false;\n\n          _this.configuration.onicecandidate(event.candidate);\n        } else if (!_this.candidategatheringdone) {\n          _this.candidategatheringdone = true;\n        }\n      }\n    };\n\n    this.pc.onsignalingstatechange = function () {\n      if (_this.pc.signalingState === 'stable') {\n        while (_this.iceCandidateList.length > 0) {\n          _this.pc.addIceCandidate(_this.iceCandidateList.shift());\n        }\n      }\n    };\n\n    this.start();\n  }\n  /**\n   * This function creates the RTCPeerConnection object taking into account the\n   * properties received in the constructor. It starts the SDP negotiation\n   * process: generates the SDP offer and invokes the onsdpoffer callback. This\n   * callback is expected to send the SDP offer, in order to obtain an SDP\n   * answer from another peer.\n   */\n\n\n  WebRtcPeer.prototype.start = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this.pc.signalingState === 'closed') {\n        reject('The peer connection object is in \"closed\" state. This is most likely due to an invocation of the dispose method before accepting in the dialogue');\n      }\n\n      if (!!_this.configuration.mediaStream) {\n        for (var _i = 0, _a = _this.configuration.mediaStream.getTracks(); _i < _a.length; _i++) {\n          var track = _a[_i];\n\n          _this.pc.addTrack(track, _this.configuration.mediaStream);\n        }\n\n        resolve();\n      }\n    });\n  };\n  /**\n   * This method frees the resources used by WebRtcPeer\n   */\n\n\n  WebRtcPeer.prototype.dispose = function () {\n    console.debug('Disposing WebRtcPeer');\n\n    if (this.pc) {\n      if (this.pc.signalingState === 'closed') {\n        return;\n      }\n\n      this.pc.close();\n      this.remoteCandidatesQueue = [];\n      this.localCandidatesQueue = [];\n    }\n  };\n  /**\n   * Function that creates an offer, sets it as local description and returns the offer param\n   * to send to OpenVidu Server (will be the remote description of other peer)\n   */\n\n\n  WebRtcPeer.prototype.generateOffer = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var offerAudio,\n          offerVideo = true; // Constraints must have both blocks\n\n      if (!!_this.configuration.mediaConstraints) {\n        offerAudio = typeof _this.configuration.mediaConstraints.audio === 'boolean' ? _this.configuration.mediaConstraints.audio : true;\n        offerVideo = typeof _this.configuration.mediaConstraints.video === 'boolean' ? _this.configuration.mediaConstraints.video : true;\n      }\n\n      var constraints = {\n        offerToReceiveAudio: _this.configuration.mode !== 'sendonly' && offerAudio,\n        offerToReceiveVideo: _this.configuration.mode !== 'sendonly' && offerVideo\n      };\n      console.debug('RTCPeerConnection constraints: ' + JSON.stringify(constraints));\n\n      if (platform.name === 'Safari' && platform.ua.indexOf('Safari') !== -1) {\n        // Safari (excluding Ionic), at least on iOS just seems to support unified plan, whereas in other browsers is not yet ready and considered experimental\n        if (offerAudio) {\n          _this.pc.addTransceiver('audio', {\n            direction: _this.configuration.mode\n          });\n        }\n\n        if (offerVideo) {\n          _this.pc.addTransceiver('video', {\n            direction: _this.configuration.mode\n          });\n        }\n\n        _this.pc.createOffer().then(function (offer) {\n          console.debug('Created SDP offer');\n          return _this.pc.setLocalDescription(offer);\n        }).then(function () {\n          var localDescription = _this.pc.localDescription;\n\n          if (!!localDescription) {\n            console.debug('Local description set', localDescription.sdp);\n            resolve(localDescription.sdp);\n          } else {\n            reject('Local description is not defined');\n          }\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      } else {\n        // Rest of platforms\n        _this.pc.createOffer(constraints).then(function (offer) {\n          console.debug('Created SDP offer');\n          return _this.pc.setLocalDescription(offer);\n        }).then(function () {\n          var localDescription = _this.pc.localDescription;\n\n          if (!!localDescription) {\n            console.debug('Local description set', localDescription.sdp);\n            resolve(localDescription.sdp);\n          } else {\n            reject('Local description is not defined');\n          }\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      }\n    });\n  };\n  /**\n   * Function invoked when a SDP answer is received. Final step in SDP negotiation, the peer\n   * just needs to set the answer as its remote description\n   */\n\n\n  WebRtcPeer.prototype.processAnswer = function (sdpAnswer, needsTimeoutOnProcessAnswer) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var answer = {\n        type: 'answer',\n        sdp: sdpAnswer\n      };\n      console.debug('SDP answer received, setting remote description');\n\n      if (_this.pc.signalingState === 'closed') {\n        reject('RTCPeerConnection is closed');\n      }\n\n      if (platform['isIonicIos']) {\n        // Ionic iOS platform\n        if (needsTimeoutOnProcessAnswer) {\n          // 400 ms have not elapsed yet since first remote stream triggered Stream#initWebRtcPeerReceive\n          setTimeout(function () {\n            console.info('setRemoteDescription run after timeout for Ionic iOS device');\n\n            _this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(function () {\n              return resolve();\n            })[\"catch\"](function (error) {\n              return reject(error);\n            });\n          }, 250);\n        } else {\n          // 400 ms have elapsed\n          _this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(function () {\n            return resolve();\n          })[\"catch\"](function (error) {\n            return reject(error);\n          });\n        }\n      } else {\n        // Rest of platforms\n        _this.pc.setRemoteDescription(answer).then(function () {\n          return resolve();\n        })[\"catch\"](function (error) {\n          return reject(error);\n        });\n      }\n    });\n  };\n  /**\n   * Callback function invoked when an ICE candidate is received\n   */\n\n\n  WebRtcPeer.prototype.addIceCandidate = function (iceCandidate) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      console.debug('Remote ICE candidate received', iceCandidate);\n\n      _this.remoteCandidatesQueue.push(iceCandidate);\n\n      switch (_this.pc.signalingState) {\n        case 'closed':\n          reject(new Error('PeerConnection object is closed'));\n          break;\n\n        case 'stable':\n          if (!!_this.pc.remoteDescription) {\n            _this.pc.addIceCandidate(iceCandidate).then(function () {\n              return resolve();\n            })[\"catch\"](function (error) {\n              return reject(error);\n            });\n          } else {\n            _this.iceCandidateList.push(iceCandidate);\n\n            resolve();\n          }\n\n          break;\n\n        default:\n          _this.iceCandidateList.push(iceCandidate);\n\n          resolve();\n      }\n    });\n  };\n\n  WebRtcPeer.prototype.addIceConnectionStateChangeListener = function (otherId) {\n    var _this = this;\n\n    this.pc.oniceconnectionstatechange = function () {\n      var iceConnectionState = _this.pc.iceConnectionState;\n\n      switch (iceConnectionState) {\n        case 'disconnected':\n          // Possible network disconnection\n          console.warn('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"disconnected\". Possible network disconnection');\n          break;\n\n        case 'failed':\n          console.error('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') to \"failed\"');\n          break;\n\n        case 'closed':\n          console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"closed\"');\n          break;\n\n        case 'new':\n          console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"new\"');\n          break;\n\n        case 'checking':\n          console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"checking\"');\n          break;\n\n        case 'connected':\n          console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"connected\"');\n          break;\n\n        case 'completed':\n          console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"completed\"');\n          break;\n      }\n    };\n  };\n\n  return WebRtcPeer;\n}();\n\nexports.WebRtcPeer = WebRtcPeer;\n\nvar WebRtcPeerRecvonly =\n/** @class */\nfunction (_super) {\n  __extends(WebRtcPeerRecvonly, _super);\n\n  function WebRtcPeerRecvonly(configuration) {\n    var _this = this;\n\n    configuration.mode = 'recvonly';\n    _this = _super.call(this, configuration) || this;\n    return _this;\n  }\n\n  return WebRtcPeerRecvonly;\n}(WebRtcPeer);\n\nexports.WebRtcPeerRecvonly = WebRtcPeerRecvonly;\n\nvar WebRtcPeerSendonly =\n/** @class */\nfunction (_super) {\n  __extends(WebRtcPeerSendonly, _super);\n\n  function WebRtcPeerSendonly(configuration) {\n    var _this = this;\n\n    configuration.mode = 'sendonly';\n    _this = _super.call(this, configuration) || this;\n    return _this;\n  }\n\n  return WebRtcPeerSendonly;\n}(WebRtcPeer);\n\nexports.WebRtcPeerSendonly = WebRtcPeerSendonly;\n\nvar WebRtcPeerSendrecv =\n/** @class */\nfunction (_super) {\n  __extends(WebRtcPeerSendrecv, _super);\n\n  function WebRtcPeerSendrecv(configuration) {\n    var _this = this;\n\n    configuration.mode = 'sendrecv';\n    _this = _super.call(this, configuration) || this;\n    return _this;\n  }\n\n  return WebRtcPeerSendrecv;\n}(WebRtcPeer);\n\nexports.WebRtcPeerSendrecv = WebRtcPeerSendrecv;","map":{"version":3,"sources":["../../../src/OpenViduInternal/WebRtcPeer/WebRtcPeer.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAeA,IAAA,UAAA;AAAA;AAAA,YAAA;AAWI,WAAA,UAAA,CAAoB,aAApB,EAA0D;AAA1D,QAAA,KAAA,GAAA,IAAA;;AAAoB,SAAA,aAAA,GAAA,aAAA;AAPpB,SAAA,qBAAA,GAA2C,EAA3C;AACA,SAAA,oBAAA,GAA0C,EAA1C;AAEA,SAAA,gBAAA,GAAsC,EAAtC;AAEQ,SAAA,sBAAA,GAAyB,KAAzB;AAGJ,SAAK,aAAL,CAAmB,UAAnB,GAAiC,CAAC,CAAC,KAAK,aAAL,CAAmB,UAArB,IAAmC,KAAK,aAAL,CAAmB,UAAnB,CAA8B,MAA9B,GAAuC,CAA3E,GAAgF,KAAK,aAAL,CAAmB,UAAnG,GAAgH,OAAO,EAAvJ;AAEA,SAAK,EAAL,GAAU,IAAI,iBAAJ,CAAsB;AAAE,MAAA,UAAU,EAAE,KAAK,aAAL,CAAmB;AAAjC,KAAtB,CAAV;AACA,SAAK,EAAL,GAAU,CAAC,CAAC,aAAa,CAAC,EAAhB,GAAqB,aAAa,CAAC,EAAnC,GAAwC,IAAI,CAAC,EAAL,EAAlD;;AAEA,SAAK,EAAL,CAAQ,cAAR,GAAyB,UAAA,KAAA,EAAK;AAC1B,UAAI,CAAC,CAAC,KAAK,CAAC,SAAZ,EAAuB;AACnB,YAAM,SAAS,GAAoB,KAAK,CAAC,SAAzC;;AACA,YAAI,SAAJ,EAAe;AACX,UAAA,KAAI,CAAC,oBAAL,CAA0B,IAA1B,CAAgD;AAAE,YAAA,SAAS,EAAE,SAAS,CAAC;AAAvB,WAAhD;;AACA,UAAA,KAAI,CAAC,sBAAL,GAA8B,KAA9B;;AACA,UAAA,KAAI,CAAC,aAAL,CAAmB,cAAnB,CAAkC,KAAK,CAAC,SAAxC;AACH,SAJD,MAIO,IAAI,CAAC,KAAI,CAAC,sBAAV,EAAkC;AACrC,UAAA,KAAI,CAAC,sBAAL,GAA8B,IAA9B;AACH;AACJ;AACJ,KAXD;;AAaA,SAAK,EAAL,CAAQ,sBAAR,GAAiC,YAAA;AAC7B,UAAI,KAAI,CAAC,EAAL,CAAQ,cAAR,KAA2B,QAA/B,EAAyC;AACrC,eAAO,KAAI,CAAC,gBAAL,CAAsB,MAAtB,GAA+B,CAAtC,EAAyC;AACrC,UAAA,KAAI,CAAC,EAAL,CAAQ,eAAR,CAAyC,KAAI,CAAC,gBAAL,CAAsB,KAAtB,EAAzC;AACH;AACJ;AACJ,KAND;;AAQA,SAAK,KAAL;AACH;AAED;;;;;;;;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,UAAI,KAAI,CAAC,EAAL,CAAQ,cAAR,KAA2B,QAA/B,EAAyC;AACrC,QAAA,MAAM,CAAC,kJAAD,CAAN;AACH;;AACD,UAAI,CAAC,CAAC,KAAI,CAAC,aAAL,CAAmB,WAAzB,EAAsC;AAClC,aAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAI,CAAC,aAAL,CAAmB,WAAnB,CAA+B,SAA/B,EAApB,EAAoB,EAAA,GAAA,EAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAAgE;AAA3D,cAAM,KAAK,GAAA,EAAA,CAAA,EAAA,CAAX;;AACD,UAAA,KAAI,CAAC,EAAL,CAAQ,QAAR,CAAiB,KAAjB,EAAwB,KAAI,CAAC,aAAL,CAAmB,WAA3C;AACH;;AACD,QAAA,OAAO;AACV;AACJ,KAVM,CAAP;AAWH,GAZD;AAcA;;;;;AAGA,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACI,IAAA,OAAO,CAAC,KAAR,CAAc,sBAAd;;AACA,QAAI,KAAK,EAAT,EAAa;AACT,UAAI,KAAK,EAAL,CAAQ,cAAR,KAA2B,QAA/B,EAAyC;AACrC;AACH;;AACD,WAAK,EAAL,CAAQ,KAAR;AACA,WAAK,qBAAL,GAA6B,EAA7B;AACA,WAAK,oBAAL,GAA4B,EAA5B;AACH;AACJ,GAVD;AAYA;;;;;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,UAAI,UAAJ;AAAA,UAAgB,UAAU,GAAG,IAA7B,CAD+B,CAG/B;;AACA,UAAI,CAAC,CAAC,KAAI,CAAC,aAAL,CAAmB,gBAAzB,EAA2C;AACvC,QAAA,UAAU,GAAI,OAAO,KAAI,CAAC,aAAL,CAAmB,gBAAnB,CAAoC,KAA3C,KAAqD,SAAtD,GACT,KAAI,CAAC,aAAL,CAAmB,gBAAnB,CAAoC,KAD3B,GACmC,IADhD;AAEA,QAAA,UAAU,GAAI,OAAO,KAAI,CAAC,aAAL,CAAmB,gBAAnB,CAAoC,KAA3C,KAAqD,SAAtD,GACT,KAAI,CAAC,aAAL,CAAmB,gBAAnB,CAAoC,KAD3B,GACmC,IADhD;AAEH;;AAED,UAAM,WAAW,GAAoB;AACjC,QAAA,mBAAmB,EAAG,KAAI,CAAC,aAAL,CAAmB,IAAnB,KAA4B,UAA5B,IAA0C,UAD/B;AAEjC,QAAA,mBAAmB,EAAG,KAAI,CAAC,aAAL,CAAmB,IAAnB,KAA4B,UAA5B,IAA0C;AAF/B,OAArC;AAKA,MAAA,OAAO,CAAC,KAAR,CAAc,oCAAoC,IAAI,CAAC,SAAL,CAAe,WAAf,CAAlD;;AAEA,UAAI,QAAQ,CAAC,IAAT,KAAkB,QAAlB,IAA8B,QAAQ,CAAC,EAAT,CAAc,OAAd,CAAsB,QAAtB,MAAoC,CAAC,CAAvE,EAA0E;AACtE;AACA,YAAI,UAAJ,EAAgB;AACZ,UAAA,KAAI,CAAC,EAAL,CAAQ,cAAR,CAAuB,OAAvB,EAAgC;AAC5B,YAAA,SAAS,EAAE,KAAI,CAAC,aAAL,CAAmB;AADF,WAAhC;AAGH;;AAED,YAAI,UAAJ,EAAgB;AACZ,UAAA,KAAI,CAAC,EAAL,CAAQ,cAAR,CAAuB,OAAvB,EAAgC;AAC5B,YAAA,SAAS,EAAE,KAAI,CAAC,aAAL,CAAmB;AADF,WAAhC;AAGH;;AAED,QAAA,KAAI,CAAC,EAAL,CACK,WADL,GAEK,IAFL,CAEU,UAAA,KAAA,EAAK;AACP,UAAA,OAAO,CAAC,KAAR,CAAc,mBAAd;AACA,iBAAO,KAAI,CAAC,EAAL,CAAQ,mBAAR,CAA4B,KAA5B,CAAP;AACH,SALL,EAMK,IANL,CAMU,YAAA;AACF,cAAM,gBAAgB,GAAG,KAAI,CAAC,EAAL,CAAQ,gBAAjC;;AAEA,cAAI,CAAC,CAAC,gBAAN,EAAwB;AACpB,YAAA,OAAO,CAAC,KAAR,CAAc,uBAAd,EAAuC,gBAAgB,CAAC,GAAxD;AACA,YAAA,OAAO,CAAC,gBAAgB,CAAC,GAAlB,CAAP;AACH,WAHD,MAGO;AACH,YAAA,MAAM,CAAC,kCAAD,CAAN;AACH;AACJ,SAfL,EAgBK,OAhBL,EAgBW,UAAA,KAAA,EAAK;AAAI,iBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,SAhBjC;AAkBH,OAhCD,MAgCO;AAEH;AACA,QAAA,KAAI,CAAC,EAAL,CAAQ,WAAR,CAAoB,WAApB,EAAiC,IAAjC,CAAsC,UAAA,KAAA,EAAK;AACvC,UAAA,OAAO,CAAC,KAAR,CAAc,mBAAd;AACA,iBAAO,KAAI,CAAC,EAAL,CAAQ,mBAAR,CAA4B,KAA5B,CAAP;AACH,SAHD,EAIK,IAJL,CAIU,YAAA;AACF,cAAM,gBAAgB,GAAG,KAAI,CAAC,EAAL,CAAQ,gBAAjC;;AACA,cAAI,CAAC,CAAC,gBAAN,EAAwB;AACpB,YAAA,OAAO,CAAC,KAAR,CAAc,uBAAd,EAAuC,gBAAgB,CAAC,GAAxD;AACA,YAAA,OAAO,CAAC,gBAAgB,CAAC,GAAlB,CAAP;AACH,WAHD,MAGO;AACH,YAAA,MAAM,CAAC,kCAAD,CAAN;AACH;AACJ,SAZL,EAaK,OAbL,EAaW,UAAA,KAAA,EAAK;AAAI,iBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,SAbjC;AAcH;AACJ,KApEM,CAAP;AAqEH,GAtED;AAwEA;;;;;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,SAAd,EAAiC,2BAAjC,EAAqE;AAArE,QAAA,KAAA,GAAA,IAAA;;AACI,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,UAAM,MAAM,GAA8B;AACtC,QAAA,IAAI,EAAE,QADgC;AAEtC,QAAA,GAAG,EAAE;AAFiC,OAA1C;AAIA,MAAA,OAAO,CAAC,KAAR,CAAc,iDAAd;;AAEA,UAAI,KAAI,CAAC,EAAL,CAAQ,cAAR,KAA2B,QAA/B,EAAyC;AACrC,QAAA,MAAM,CAAC,6BAAD,CAAN;AACH;;AACD,UAAI,QAAQ,CAAC,YAAD,CAAZ,EAA4B;AACxB;AACA,YAAI,2BAAJ,EAAiC;AAC7B;AACA,UAAA,UAAU,CAAC,YAAA;AACP,YAAA,OAAO,CAAC,IAAR,CAAa,6DAAb;;AACA,YAAA,KAAI,CAAC,EAAL,CAAQ,oBAAR,CAA6B,IAAI,qBAAJ,CAA0B,MAA1B,CAA7B,EAAgE,IAAhE,CAAqE,YAAA;AAAM,qBAAA,OAAA,EAAA;AAAS,aAApF,EAAsF,OAAtF,EAA4F,UAAA,KAAA,EAAK;AAAI,qBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,aAAlH;AACH,WAHS,EAGP,GAHO,CAAV;AAIH,SAND,MAMO;AACH;AACA,UAAA,KAAI,CAAC,EAAL,CAAQ,oBAAR,CAA6B,IAAI,qBAAJ,CAA0B,MAA1B,CAA7B,EAAgE,IAAhE,CAAqE,YAAA;AAAM,mBAAA,OAAA,EAAA;AAAS,WAApF,EAAsF,OAAtF,EAA4F,UAAA,KAAA,EAAK;AAAI,mBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,WAAlH;AACH;AACJ,OAZD,MAYO;AACH;AACA,QAAA,KAAI,CAAC,EAAL,CAAQ,oBAAR,CAA6B,MAA7B,EAAqC,IAArC,CAA0C,YAAA;AAAM,iBAAA,OAAA,EAAA;AAAS,SAAzD,EAA2D,OAA3D,EAAiE,UAAA,KAAA,EAAK;AAAI,iBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,SAAvF;AACH;AACJ,KA1BM,CAAP;AA2BH,GA5BD;AA8BA;;;;;AAGA,EAAA,UAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,YAAhB,EAA6C;AAA7C,QAAA,KAAA,GAAA,IAAA;;AACI,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,MAAA,OAAO,CAAC,KAAR,CAAc,+BAAd,EAA+C,YAA/C;;AACA,MAAA,KAAI,CAAC,qBAAL,CAA2B,IAA3B,CAAgC,YAAhC;;AACA,cAAQ,KAAI,CAAC,EAAL,CAAQ,cAAhB;AACI,aAAK,QAAL;AACI,UAAA,MAAM,CAAC,IAAI,KAAJ,CAAU,iCAAV,CAAD,CAAN;AACA;;AACJ,aAAK,QAAL;AACI,cAAI,CAAC,CAAC,KAAI,CAAC,EAAL,CAAQ,iBAAd,EAAiC;AAC7B,YAAA,KAAI,CAAC,EAAL,CAAQ,eAAR,CAAwB,YAAxB,EAAsC,IAAtC,CAA2C,YAAA;AAAM,qBAAA,OAAA,EAAA;AAAS,aAA1D,EAA4D,OAA5D,EAAkE,UAAA,KAAA,EAAK;AAAI,qBAAA,MAAM,CAAN,KAAM,CAAN;AAAa,aAAxF;AACH,WAFD,MAEO;AACH,YAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,YAA3B;;AACA,YAAA,OAAO;AACV;;AACD;;AACJ;AACI,UAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,YAA3B;;AACA,UAAA,OAAO;AAdf;AAgBH,KAnBM,CAAP;AAoBH,GArBD;;AAuBA,EAAA,UAAA,CAAA,SAAA,CAAA,mCAAA,GAAA,UAAoC,OAApC,EAAmD;AAAnD,QAAA,KAAA,GAAA,IAAA;;AACI,SAAK,EAAL,CAAQ,0BAAR,GAAqC,YAAA;AACjC,UAAM,kBAAkB,GAA0B,KAAI,CAAC,EAAL,CAAQ,kBAA1D;;AACA,cAAQ,kBAAR;AACI,aAAK,cAAL;AACI;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,4DAArF;AACA;;AACJ,aAAK,QAAL;AACI,UAAA,OAAO,CAAC,KAAR,CAAc,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,eAAtF;AACA;;AACJ,aAAK,QAAL;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,sBAApF;AACA;;AACJ,aAAK,KAAL;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,mBAApF;AACA;;AACJ,aAAK,UAAL;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,wBAApF;AACA;;AACJ,aAAK,WAAL;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,yBAApF;AACA;;AACJ,aAAK,WAAL;AACI,UAAA,OAAO,CAAC,GAAR,CAAY,6CAA6C,KAAI,CAAC,EAAlD,GAAuD,IAAvD,GAA8D,OAA9D,GAAwE,yBAApF;AACA;AAtBR;AAwBH,KA1BD;AA2BH,GA5BD;;AA8BJ,SAAA,UAAA;AAAC,CAnPD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA;;AAsPb,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;;AACpC,WAAA,kBAAA,CAAY,aAAZ,EAAkD;AAAlD,QAAA,KAAA,GAAA,IAAA;;AACI,IAAA,aAAa,CAAC,IAAd,GAAqB,UAArB;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IAApB;;AACH;;AACL,SAAA,kBAAA;AAAC,CALD,CAAwC,UAAxC,CAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOb,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;;AACpC,WAAA,kBAAA,CAAY,aAAZ,EAAkD;AAAlD,QAAA,KAAA,GAAA,IAAA;;AACI,IAAA,aAAa,CAAC,IAAd,GAAqB,UAArB;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IAApB;;AACH;;AACL,SAAA,kBAAA;AAAC,CALD,CAAwC,UAAxC,CAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOb,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;;AACpC,WAAA,kBAAA,CAAY,aAAZ,EAAkD;AAAlD,QAAA,KAAA,GAAA,IAAA;;AACI,IAAA,aAAa,CAAC,IAAd,GAAqB,UAArB;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,aAAN,KAAoB,IAApB;;AACH;;AACL,SAAA,kBAAA;AAAC,CALD,CAAwC,UAAxC,CAAA;;AAAa,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar freeice = require(\"freeice\");\nvar uuid = require(\"uuid\");\nvar platform = require(\"platform\");\nvar WebRtcPeer = /** @class */ (function () {\n    function WebRtcPeer(configuration) {\n        var _this = this;\n        this.configuration = configuration;\n        this.remoteCandidatesQueue = [];\n        this.localCandidatesQueue = [];\n        this.iceCandidateList = [];\n        this.candidategatheringdone = false;\n        this.configuration.iceServers = (!!this.configuration.iceServers && this.configuration.iceServers.length > 0) ? this.configuration.iceServers : freeice();\n        this.pc = new RTCPeerConnection({ iceServers: this.configuration.iceServers });\n        this.id = !!configuration.id ? configuration.id : uuid.v4();\n        this.pc.onicecandidate = function (event) {\n            if (!!event.candidate) {\n                var candidate = event.candidate;\n                if (candidate) {\n                    _this.localCandidatesQueue.push({ candidate: candidate.candidate });\n                    _this.candidategatheringdone = false;\n                    _this.configuration.onicecandidate(event.candidate);\n                }\n                else if (!_this.candidategatheringdone) {\n                    _this.candidategatheringdone = true;\n                }\n            }\n        };\n        this.pc.onsignalingstatechange = function () {\n            if (_this.pc.signalingState === 'stable') {\n                while (_this.iceCandidateList.length > 0) {\n                    _this.pc.addIceCandidate(_this.iceCandidateList.shift());\n                }\n            }\n        };\n        this.start();\n    }\n    /**\n     * This function creates the RTCPeerConnection object taking into account the\n     * properties received in the constructor. It starts the SDP negotiation\n     * process: generates the SDP offer and invokes the onsdpoffer callback. This\n     * callback is expected to send the SDP offer, in order to obtain an SDP\n     * answer from another peer.\n     */\n    WebRtcPeer.prototype.start = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.pc.signalingState === 'closed') {\n                reject('The peer connection object is in \"closed\" state. This is most likely due to an invocation of the dispose method before accepting in the dialogue');\n            }\n            if (!!_this.configuration.mediaStream) {\n                for (var _i = 0, _a = _this.configuration.mediaStream.getTracks(); _i < _a.length; _i++) {\n                    var track = _a[_i];\n                    _this.pc.addTrack(track, _this.configuration.mediaStream);\n                }\n                resolve();\n            }\n        });\n    };\n    /**\n     * This method frees the resources used by WebRtcPeer\n     */\n    WebRtcPeer.prototype.dispose = function () {\n        console.debug('Disposing WebRtcPeer');\n        if (this.pc) {\n            if (this.pc.signalingState === 'closed') {\n                return;\n            }\n            this.pc.close();\n            this.remoteCandidatesQueue = [];\n            this.localCandidatesQueue = [];\n        }\n    };\n    /**\n     * Function that creates an offer, sets it as local description and returns the offer param\n     * to send to OpenVidu Server (will be the remote description of other peer)\n     */\n    WebRtcPeer.prototype.generateOffer = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var offerAudio, offerVideo = true;\n            // Constraints must have both blocks\n            if (!!_this.configuration.mediaConstraints) {\n                offerAudio = (typeof _this.configuration.mediaConstraints.audio === 'boolean') ?\n                    _this.configuration.mediaConstraints.audio : true;\n                offerVideo = (typeof _this.configuration.mediaConstraints.video === 'boolean') ?\n                    _this.configuration.mediaConstraints.video : true;\n            }\n            var constraints = {\n                offerToReceiveAudio: (_this.configuration.mode !== 'sendonly' && offerAudio),\n                offerToReceiveVideo: (_this.configuration.mode !== 'sendonly' && offerVideo)\n            };\n            console.debug('RTCPeerConnection constraints: ' + JSON.stringify(constraints));\n            if (platform.name === 'Safari' && platform.ua.indexOf('Safari') !== -1) {\n                // Safari (excluding Ionic), at least on iOS just seems to support unified plan, whereas in other browsers is not yet ready and considered experimental\n                if (offerAudio) {\n                    _this.pc.addTransceiver('audio', {\n                        direction: _this.configuration.mode\n                    });\n                }\n                if (offerVideo) {\n                    _this.pc.addTransceiver('video', {\n                        direction: _this.configuration.mode\n                    });\n                }\n                _this.pc\n                    .createOffer()\n                    .then(function (offer) {\n                    console.debug('Created SDP offer');\n                    return _this.pc.setLocalDescription(offer);\n                })\n                    .then(function () {\n                    var localDescription = _this.pc.localDescription;\n                    if (!!localDescription) {\n                        console.debug('Local description set', localDescription.sdp);\n                        resolve(localDescription.sdp);\n                    }\n                    else {\n                        reject('Local description is not defined');\n                    }\n                })[\"catch\"](function (error) { return reject(error); });\n            }\n            else {\n                // Rest of platforms\n                _this.pc.createOffer(constraints).then(function (offer) {\n                    console.debug('Created SDP offer');\n                    return _this.pc.setLocalDescription(offer);\n                })\n                    .then(function () {\n                    var localDescription = _this.pc.localDescription;\n                    if (!!localDescription) {\n                        console.debug('Local description set', localDescription.sdp);\n                        resolve(localDescription.sdp);\n                    }\n                    else {\n                        reject('Local description is not defined');\n                    }\n                })[\"catch\"](function (error) { return reject(error); });\n            }\n        });\n    };\n    /**\n     * Function invoked when a SDP answer is received. Final step in SDP negotiation, the peer\n     * just needs to set the answer as its remote description\n     */\n    WebRtcPeer.prototype.processAnswer = function (sdpAnswer, needsTimeoutOnProcessAnswer) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var answer = {\n                type: 'answer',\n                sdp: sdpAnswer\n            };\n            console.debug('SDP answer received, setting remote description');\n            if (_this.pc.signalingState === 'closed') {\n                reject('RTCPeerConnection is closed');\n            }\n            if (platform['isIonicIos']) {\n                // Ionic iOS platform\n                if (needsTimeoutOnProcessAnswer) {\n                    // 400 ms have not elapsed yet since first remote stream triggered Stream#initWebRtcPeerReceive\n                    setTimeout(function () {\n                        console.info('setRemoteDescription run after timeout for Ionic iOS device');\n                        _this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(function () { return resolve(); })[\"catch\"](function (error) { return reject(error); });\n                    }, 250);\n                }\n                else {\n                    // 400 ms have elapsed\n                    _this.pc.setRemoteDescription(new RTCSessionDescription(answer)).then(function () { return resolve(); })[\"catch\"](function (error) { return reject(error); });\n                }\n            }\n            else {\n                // Rest of platforms\n                _this.pc.setRemoteDescription(answer).then(function () { return resolve(); })[\"catch\"](function (error) { return reject(error); });\n            }\n        });\n    };\n    /**\n     * Callback function invoked when an ICE candidate is received\n     */\n    WebRtcPeer.prototype.addIceCandidate = function (iceCandidate) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            console.debug('Remote ICE candidate received', iceCandidate);\n            _this.remoteCandidatesQueue.push(iceCandidate);\n            switch (_this.pc.signalingState) {\n                case 'closed':\n                    reject(new Error('PeerConnection object is closed'));\n                    break;\n                case 'stable':\n                    if (!!_this.pc.remoteDescription) {\n                        _this.pc.addIceCandidate(iceCandidate).then(function () { return resolve(); })[\"catch\"](function (error) { return reject(error); });\n                    }\n                    else {\n                        _this.iceCandidateList.push(iceCandidate);\n                        resolve();\n                    }\n                    break;\n                default:\n                    _this.iceCandidateList.push(iceCandidate);\n                    resolve();\n            }\n        });\n    };\n    WebRtcPeer.prototype.addIceConnectionStateChangeListener = function (otherId) {\n        var _this = this;\n        this.pc.oniceconnectionstatechange = function () {\n            var iceConnectionState = _this.pc.iceConnectionState;\n            switch (iceConnectionState) {\n                case 'disconnected':\n                    // Possible network disconnection\n                    console.warn('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"disconnected\". Possible network disconnection');\n                    break;\n                case 'failed':\n                    console.error('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') to \"failed\"');\n                    break;\n                case 'closed':\n                    console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"closed\"');\n                    break;\n                case 'new':\n                    console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"new\"');\n                    break;\n                case 'checking':\n                    console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"checking\"');\n                    break;\n                case 'connected':\n                    console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"connected\"');\n                    break;\n                case 'completed':\n                    console.log('IceConnectionState of RTCPeerConnection ' + _this.id + ' (' + otherId + ') change to \"completed\"');\n                    break;\n            }\n        };\n    };\n    return WebRtcPeer;\n}());\nexports.WebRtcPeer = WebRtcPeer;\nvar WebRtcPeerRecvonly = /** @class */ (function (_super) {\n    __extends(WebRtcPeerRecvonly, _super);\n    function WebRtcPeerRecvonly(configuration) {\n        var _this = this;\n        configuration.mode = 'recvonly';\n        _this = _super.call(this, configuration) || this;\n        return _this;\n    }\n    return WebRtcPeerRecvonly;\n}(WebRtcPeer));\nexports.WebRtcPeerRecvonly = WebRtcPeerRecvonly;\nvar WebRtcPeerSendonly = /** @class */ (function (_super) {\n    __extends(WebRtcPeerSendonly, _super);\n    function WebRtcPeerSendonly(configuration) {\n        var _this = this;\n        configuration.mode = 'sendonly';\n        _this = _super.call(this, configuration) || this;\n        return _this;\n    }\n    return WebRtcPeerSendonly;\n}(WebRtcPeer));\nexports.WebRtcPeerSendonly = WebRtcPeerSendonly;\nvar WebRtcPeerSendrecv = /** @class */ (function (_super) {\n    __extends(WebRtcPeerSendrecv, _super);\n    function WebRtcPeerSendrecv(configuration) {\n        var _this = this;\n        configuration.mode = 'sendrecv';\n        _this = _super.call(this, configuration) || this;\n        return _this;\n    }\n    return WebRtcPeerSendrecv;\n}(WebRtcPeer));\nexports.WebRtcPeerSendrecv = WebRtcPeerSendrecv;\n//# sourceMappingURL=WebRtcPeer.js.map"]},"metadata":{},"sourceType":"script"}