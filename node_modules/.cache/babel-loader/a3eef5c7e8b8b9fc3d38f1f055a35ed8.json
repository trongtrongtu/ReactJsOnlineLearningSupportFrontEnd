{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexports.__esModule = true;\n\nvar StreamManagerEvent_1 = require(\"../OpenViduInternal/Events/StreamManagerEvent\");\n\nvar VideoElementEvent_1 = require(\"../OpenViduInternal/Events/VideoElementEvent\");\n\nvar VideoInsertMode_1 = require(\"../OpenViduInternal/Enums/VideoInsertMode\");\n\nvar EventEmitter = require(\"wolfy87-eventemitter\");\n\nvar platform = require(\"platform\");\n/**\n * Interface in charge of displaying the media streams in the HTML DOM. This wraps any [[Publisher]] and [[Subscriber]] object.\n * You can insert as many video players fo the same Stream as you want by calling [[StreamManager.addVideoElement]] or\n * [[StreamManager.createVideoElement]].\n * The use of StreamManager wrapper is particularly useful when you don't need to differentiate between Publisher or Subscriber streams or just\n * want to directly manage your own video elements (even more than one video element per Stream). This scenario is pretty common in\n * declarative, MVC frontend frameworks such as Angular, React or Vue.js\n *\n * ### Available event listeners (and events dispatched)\n *\n * - videoElementCreated ([[VideoElementEvent]])\n * - videoElementDestroyed ([[VideoElementEvent]])\n * - streamPlaying ([[StreamManagerEvent]])\n * - streamAudioVolumeChange ([[StreamManagerEvent]])\n *\n */\n\n\nvar StreamManager =\n/** @class */\nfunction () {\n  /**\n   * @hidden\n   */\n  function StreamManager(stream, targetElement) {\n    var _this = this;\n    /**\n     * All the videos displaying the Stream of this Publisher/Subscriber\n     */\n\n\n    this.videos = [];\n    /**\n     * @hidden\n     */\n\n    this.lazyLaunchVideoElementCreatedEvent = false;\n    /**\n     * @hidden\n     */\n\n    this.ee = new EventEmitter();\n    this.stream = stream;\n    this.stream.streamManager = this;\n    this.remote = !this.stream.isLocal();\n\n    if (!!targetElement) {\n      var targEl = void 0;\n\n      if (typeof targetElement === 'string') {\n        targEl = document.getElementById(targetElement);\n      } else if (targetElement instanceof HTMLElement) {\n        targEl = targetElement;\n      }\n\n      if (!!targEl) {\n        this.firstVideoElement = {\n          targetElement: targEl,\n          video: document.createElement('video'),\n          id: '',\n          canplayListenerAdded: false\n        };\n\n        if (platform.name === 'Safari') {\n          this.firstVideoElement.video.setAttribute('playsinline', 'true');\n        }\n\n        this.targetElement = targEl;\n        this.element = targEl;\n      }\n    }\n\n    this.canPlayListener = function () {\n      if (_this.stream.isLocal()) {\n        if (!_this.stream.displayMyRemote()) {\n          console.info(\"Your local 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n\n          _this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'videoPlaying')]);\n        } else {\n          console.info(\"Your own remote 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n\n          _this.ee.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'remoteVideoPlaying')]);\n        }\n      } else {\n        console.info(\"Remote 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n\n        _this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'videoPlaying')]);\n      }\n\n      _this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(_this, 'streamPlaying', undefined)]);\n    };\n  }\n  /**\n   * See [[EventDispatcher.on]]\n   */\n\n\n  StreamManager.prototype.on = function (type, handler) {\n    var _this = this;\n\n    this.ee.on(type, function (event) {\n      if (event) {\n        console.info(\"Event '\" + type + \"' triggered by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\", event);\n      } else {\n        console.info(\"Event '\" + type + \"' triggered by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\");\n      }\n\n      handler(event);\n    });\n\n    if (type === 'videoElementCreated') {\n      if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n        this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n        this.lazyLaunchVideoElementCreatedEvent = false;\n      }\n    }\n\n    if (type === 'streamPlaying' || type === 'videoPlaying') {\n      if (this.videos[0] && this.videos[0].video && this.videos[0].video.currentTime > 0 && this.videos[0].video.paused === false && this.videos[0].video.ended === false && this.videos[0].video.readyState === 4) {\n        this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(this, 'streamPlaying', undefined)]);\n        this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n      }\n    }\n\n    if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n      this.stream.enableVolumeChangeEvent(false);\n    }\n\n    return this;\n  };\n  /**\n   * See [[EventDispatcher.once]]\n   */\n\n\n  StreamManager.prototype.once = function (type, handler) {\n    var _this = this;\n\n    this.ee.once(type, function (event) {\n      if (event) {\n        console.info(\"Event '\" + type + \"' triggered once by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\", event);\n      } else {\n        console.info(\"Event '\" + type + \"' triggered once by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\");\n      }\n\n      handler(event);\n    });\n\n    if (type === 'videoElementCreated') {\n      if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n        this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n      }\n    }\n\n    if (type === 'streamPlaying' || type === 'videoPlaying') {\n      if (this.videos[0] && this.videos[0].video && this.videos[0].video.currentTime > 0 && this.videos[0].video.paused === false && this.videos[0].video.ended === false && this.videos[0].video.readyState === 4) {\n        this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(this, 'streamPlaying', undefined)]);\n        this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n      }\n    }\n\n    if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n      this.stream.enableOnceVolumeChangeEvent(false);\n    }\n\n    return this;\n  };\n  /**\n   * See [[EventDispatcher.off]]\n   */\n\n\n  StreamManager.prototype.off = function (type, handler) {\n    if (!handler) {\n      this.ee.removeAllListeners(type);\n    } else {\n      this.ee.off(type, handler);\n    }\n\n    if (type === 'streamAudioVolumeChange') {\n      var remainingVolumeEventListeners = this.ee.getListeners(type).length;\n\n      if (remainingVolumeEventListeners === 0) {\n        this.stream.disableVolumeChangeEvent(false);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Makes `video` element parameter display this [[stream]]. This is useful when you are\n   * [managing the video elements on your own](/docs/how-do-i/manage-videos/#you-take-care-of-the-video-players)\n   *\n   * Calling this method with a video already added to other Publisher/Subscriber will cause the video element to be\n   * disassociated from that previous Publisher/Subscriber and to be associated to this one.\n   *\n   * @returns 1 if the video wasn't associated to any other Publisher/Subscriber and has been successfully added to this one.\n   * 0 if the video was already added to this Publisher/Subscriber. -1 if the video was previously associated to any other\n   * Publisher/Subscriber and has been successfully disassociated from that one and properly added to this one.\n   */\n\n\n  StreamManager.prototype.addVideoElement = function (video) {\n    this.initializeVideoProperties(video);\n\n    if (this.stream.isLocal() && this.stream.displayMyRemote()) {\n      if (video.srcObject !== this.stream.getMediaStream()) {\n        video.srcObject = this.stream.getMediaStream();\n      }\n    } // If the video element is already part of this StreamManager do nothing\n\n\n    for (var _i = 0, _a = this.videos; _i < _a.length; _i++) {\n      var v = _a[_i];\n\n      if (v.video === video) {\n        return 0;\n      }\n    }\n\n    var returnNumber = 1;\n\n    for (var _b = 0, _c = this.stream.session.streamManagers; _b < _c.length; _b++) {\n      var streamManager = _c[_b];\n\n      if (streamManager.disassociateVideo(video)) {\n        returnNumber = -1;\n        break;\n      }\n    }\n\n    this.stream.session.streamManagers.forEach(function (streamManager) {\n      streamManager.disassociateVideo(video);\n    });\n    this.pushNewStreamManagerVideo({\n      video: video,\n      id: video.id,\n      canplayListenerAdded: false\n    });\n    console.info('New video element associated to ', this);\n    return returnNumber;\n  };\n  /**\n   * Creates a new video element displaying this [[stream]]. This allows you to have multiple video elements displaying the same media stream.\n   *\n   * #### Events dispatched\n   *\n   * The Publisher/Subscriber object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM. See [[VideoElementEvent]]\n   *\n   * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Publisher/Subscriber will be inserted\n   * @param insertMode How the video element will be inserted accordingly to `targetElemet`\n   *\n   * @returns The created HTMLVideoElement\n   */\n\n\n  StreamManager.prototype.createVideoElement = function (targetElement, insertMode) {\n    var targEl;\n\n    if (typeof targetElement === 'string') {\n      targEl = document.getElementById(targetElement);\n\n      if (!targEl) {\n        throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n      }\n    } else if (targetElement instanceof HTMLElement) {\n      targEl = targetElement;\n    } else {\n      throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n    }\n\n    var video = document.createElement('video');\n    this.initializeVideoProperties(video);\n    var insMode = !!insertMode ? insertMode : VideoInsertMode_1.VideoInsertMode.APPEND;\n\n    switch (insMode) {\n      case VideoInsertMode_1.VideoInsertMode.AFTER:\n        targEl.parentNode.insertBefore(video, targEl.nextSibling);\n        break;\n\n      case VideoInsertMode_1.VideoInsertMode.APPEND:\n        targEl.appendChild(video);\n        break;\n\n      case VideoInsertMode_1.VideoInsertMode.BEFORE:\n        targEl.parentNode.insertBefore(video, targEl);\n        break;\n\n      case VideoInsertMode_1.VideoInsertMode.PREPEND:\n        targEl.insertBefore(video, targEl.childNodes[0]);\n        break;\n\n      case VideoInsertMode_1.VideoInsertMode.REPLACE:\n        targEl.parentNode.replaceChild(video, targEl);\n        break;\n\n      default:\n        insMode = VideoInsertMode_1.VideoInsertMode.APPEND;\n        targEl.appendChild(video);\n        break;\n    }\n\n    var v = {\n      targetElement: targEl,\n      video: video,\n      insertMode: insMode,\n      id: video.id,\n      canplayListenerAdded: false\n    };\n    this.pushNewStreamManagerVideo(v);\n    this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(v.video, this, 'videoElementCreated')]);\n    this.lazyLaunchVideoElementCreatedEvent = !!this.firstVideoElement;\n    return video;\n  };\n  /**\n   * Updates the current configuration for the [[PublisherSpeakingEvent]] feature and the [StreamManagerEvent.streamAudioVolumeChange](/api/openvidu-browser/classes/streammanagerevent.html) feature for this specific\n   * StreamManager audio stream, overriding the global options set with [[OpenVidu.setAdvancedConfiguration]]. This way you can customize the audio events options\n   * for each specific StreamManager and change them dynamically.\n   *\n   * @param publisherSpeakingEventsOptions New options to be applied to this StreamManager's audio stream. It is an object which includes the following optional properties:\n   * - `interval`: (number) how frequently the analyser polls the audio stream to check if speaking has started/stopped or audio volume has changed. Default **100** (ms)\n   * - `threshold`: (number) the volume at which _publisherStartSpeaking_, _publisherStopSpeaking_ events will be fired. Default **-50** (dB)\n   */\n\n\n  StreamManager.prototype.updatePublisherSpeakingEventsOptions = function (publisherSpeakingEventsOptions) {\n    var currentHarkOptions = !!this.stream.harkOptions ? this.stream.harkOptions : this.stream.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {};\n    var newInterval = typeof publisherSpeakingEventsOptions.interval === 'number' ? publisherSpeakingEventsOptions.interval : typeof currentHarkOptions.interval === 'number' ? currentHarkOptions.interval : 100;\n    var newThreshold = typeof publisherSpeakingEventsOptions.threshold === 'number' ? publisherSpeakingEventsOptions.threshold : typeof currentHarkOptions.threshold === 'number' ? currentHarkOptions.threshold : -50;\n    this.stream.harkOptions = {\n      interval: newInterval,\n      threshold: newThreshold\n    };\n\n    if (!!this.stream.speechEvent) {\n      this.stream.speechEvent.setInterval(newInterval);\n      this.stream.speechEvent.setThreshold(newThreshold);\n    }\n  };\n  /* Hidden methods */\n\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.initializeVideoProperties = function (video) {\n    if (!(this.stream.isLocal() && this.stream.displayMyRemote())) {\n      // Avoid setting the MediaStream into the srcObject if remote subscription before publishing\n      if (video.srcObject !== this.stream.getMediaStream()) {\n        // If srcObject already set don't do it again\n        video.srcObject = this.stream.getMediaStream();\n      }\n    }\n\n    video.autoplay = true;\n    video.controls = false;\n\n    if (platform.name === 'Safari') {\n      video.setAttribute('playsinline', 'true');\n    }\n\n    if (!video.id) {\n      video.id = (this.remote ? 'remote-' : 'local-') + 'video-' + this.stream.streamId; // DEPRECATED property: assign once the property id if the user provided a valid targetElement\t\n\n      if (!this.id && !!this.targetElement) {\n        this.id = video.id;\n      }\n    }\n\n    if (!this.remote && !this.stream.displayMyRemote()) {\n      video.muted = true;\n\n      if (video.style.transform === 'rotateY(180deg)' && !this.stream.outboundStreamOpts.publisherProperties.mirror) {\n        // If the video was already rotated and now is set to not mirror\n        this.removeMirrorVideo(video);\n      } else if (this.stream.outboundStreamOpts.publisherProperties.mirror && !this.stream.isSendScreen()) {\n        this.mirrorVideo(video);\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.removeAllVideos = function () {\n    var _this = this;\n\n    for (var i = this.stream.session.streamManagers.length - 1; i >= 0; --i) {\n      if (this.stream.session.streamManagers[i] === this) {\n        this.stream.session.streamManagers.splice(i, 1);\n      }\n    }\n\n    this.videos.forEach(function (streamManagerVideo) {\n      // Remove oncanplay event listener (only OpenVidu browser listener, not the user ones)\n      streamManagerVideo.video.removeEventListener('canplay', _this.canPlayListener);\n      streamManagerVideo.canplayListenerAdded = false;\n\n      if (!!streamManagerVideo.targetElement) {\n        // Only remove from DOM videos created by OpenVidu Browser (those generated by passing a valid targetElement in OpenVidu.initPublisher\n        // and Session.subscribe or those created by StreamManager.createVideoElement). All this videos triggered a videoElementCreated event\n        streamManagerVideo.video.parentNode.removeChild(streamManagerVideo.video);\n\n        _this.ee.emitEvent('videoElementDestroyed', [new VideoElementEvent_1.VideoElementEvent(streamManagerVideo.video, _this, 'videoElementDestroyed')]);\n      } // Remove srcObject from the video\n\n\n      streamManagerVideo.video.srcObject = null; // Remove from collection of videos every video managed by OpenVidu Browser\n\n      _this.videos.filter(function (v) {\n        return !v.targetElement;\n      });\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.disassociateVideo = function (video) {\n    var disassociated = false;\n\n    for (var i = 0; i < this.videos.length; i++) {\n      if (this.videos[i].video === video) {\n        this.videos[i].video.removeEventListener('canplay', this.canPlayListener);\n        this.videos.splice(i, 1);\n        disassociated = true;\n        console.info('Video element disassociated from ', this);\n        break;\n      }\n    }\n\n    return disassociated;\n  };\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.addPlayEventToFirstVideo = function () {\n    if (!!this.videos[0] && !!this.videos[0].video && !this.videos[0].canplayListenerAdded) {\n      this.videos[0].video.addEventListener('canplay', this.canPlayListener);\n      this.videos[0].canplayListenerAdded = true;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.updateMediaStream = function (mediaStream) {\n    this.videos.forEach(function (streamManagerVideo) {\n      streamManagerVideo.video.srcObject = mediaStream;\n\n      if (platform['isIonicIos']) {\n        // iOS Ionic. LIMITATION: must reinsert the video in the DOM for\n        // the media stream to be updated\n        var vParent = streamManagerVideo.video.parentElement;\n        var newVideo = streamManagerVideo.video;\n        vParent.replaceChild(newVideo, streamManagerVideo.video);\n        streamManagerVideo.video = newVideo;\n      }\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  StreamManager.prototype.emitEvent = function (type, eventArray) {\n    this.ee.emitEvent(type, eventArray);\n  };\n  /* Private methods */\n\n\n  StreamManager.prototype.pushNewStreamManagerVideo = function (streamManagerVideo) {\n    this.videos.push(streamManagerVideo);\n    this.addPlayEventToFirstVideo();\n\n    if (this.stream.session.streamManagers.indexOf(this) === -1) {\n      this.stream.session.streamManagers.push(this);\n    }\n  };\n\n  StreamManager.prototype.mirrorVideo = function (video) {\n    if (!platform['isIonicIos']) {\n      video.style.transform = 'rotateY(180deg)';\n      video.style.webkitTransform = 'rotateY(180deg)';\n    }\n  };\n\n  StreamManager.prototype.removeMirrorVideo = function (video) {\n    video.style.transform = 'unset';\n    video.style.webkitTransform = 'unset';\n  };\n\n  return StreamManager;\n}();\n\nexports.StreamManager = StreamManager;","map":{"version":3,"sources":["../../src/OpenVidu/StreamManager.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexports.__esModule = true;\nvar StreamManagerEvent_1 = require(\"../OpenViduInternal/Events/StreamManagerEvent\");\nvar VideoElementEvent_1 = require(\"../OpenViduInternal/Events/VideoElementEvent\");\nvar VideoInsertMode_1 = require(\"../OpenViduInternal/Enums/VideoInsertMode\");\nvar EventEmitter = require(\"wolfy87-eventemitter\");\nvar platform = require(\"platform\");\n/**\n * Interface in charge of displaying the media streams in the HTML DOM. This wraps any [[Publisher]] and [[Subscriber]] object.\n * You can insert as many video players fo the same Stream as you want by calling [[StreamManager.addVideoElement]] or\n * [[StreamManager.createVideoElement]].\n * The use of StreamManager wrapper is particularly useful when you don't need to differentiate between Publisher or Subscriber streams or just\n * want to directly manage your own video elements (even more than one video element per Stream). This scenario is pretty common in\n * declarative, MVC frontend frameworks such as Angular, React or Vue.js\n *\n * ### Available event listeners (and events dispatched)\n *\n * - videoElementCreated ([[VideoElementEvent]])\n * - videoElementDestroyed ([[VideoElementEvent]])\n * - streamPlaying ([[StreamManagerEvent]])\n * - streamAudioVolumeChange ([[StreamManagerEvent]])\n *\n */\nvar StreamManager = /** @class */ (function () {\n    /**\n     * @hidden\n     */\n    function StreamManager(stream, targetElement) {\n        var _this = this;\n        /**\n         * All the videos displaying the Stream of this Publisher/Subscriber\n         */\n        this.videos = [];\n        /**\n         * @hidden\n         */\n        this.lazyLaunchVideoElementCreatedEvent = false;\n        /**\n         * @hidden\n         */\n        this.ee = new EventEmitter();\n        this.stream = stream;\n        this.stream.streamManager = this;\n        this.remote = !this.stream.isLocal();\n        if (!!targetElement) {\n            var targEl = void 0;\n            if (typeof targetElement === 'string') {\n                targEl = document.getElementById(targetElement);\n            }\n            else if (targetElement instanceof HTMLElement) {\n                targEl = targetElement;\n            }\n            if (!!targEl) {\n                this.firstVideoElement = {\n                    targetElement: targEl,\n                    video: document.createElement('video'),\n                    id: '',\n                    canplayListenerAdded: false\n                };\n                if (platform.name === 'Safari') {\n                    this.firstVideoElement.video.setAttribute('playsinline', 'true');\n                }\n                this.targetElement = targEl;\n                this.element = targEl;\n            }\n        }\n        this.canPlayListener = function () {\n            if (_this.stream.isLocal()) {\n                if (!_this.stream.displayMyRemote()) {\n                    console.info(\"Your local 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n                    _this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'videoPlaying')]);\n                }\n                else {\n                    console.info(\"Your own remote 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n                    _this.ee.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'remoteVideoPlaying')]);\n                }\n            }\n            else {\n                console.info(\"Remote 'Stream' with id [\" + _this.stream.streamId + '] video is now playing');\n                _this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(_this.videos[0].video, _this, 'videoPlaying')]);\n            }\n            _this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(_this, 'streamPlaying', undefined)]);\n        };\n    }\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    StreamManager.prototype.on = function (type, handler) {\n        var _this = this;\n        this.ee.on(type, function (event) {\n            if (event) {\n                console.info(\"Event '\" + type + \"' triggered by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\", event);\n            }\n            else {\n                console.info(\"Event '\" + type + \"' triggered by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\");\n            }\n            handler(event);\n        });\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n                this.lazyLaunchVideoElementCreatedEvent = false;\n            }\n        }\n        if (type === 'streamPlaying' || type === 'videoPlaying') {\n            if (this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(this, 'streamPlaying', undefined)]);\n                this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n            }\n        }\n        if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n            this.stream.enableVolumeChangeEvent(false);\n        }\n        return this;\n    };\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    StreamManager.prototype.once = function (type, handler) {\n        var _this = this;\n        this.ee.once(type, function (event) {\n            if (event) {\n                console.info(\"Event '\" + type + \"' triggered once by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\", event);\n            }\n            else {\n                console.info(\"Event '\" + type + \"' triggered once by '\" + (_this.remote ? 'Subscriber' : 'Publisher') + \"'\");\n            }\n            handler(event);\n        });\n        if (type === 'videoElementCreated') {\n            if (!!this.stream && this.lazyLaunchVideoElementCreatedEvent) {\n                this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoElementCreated')]);\n            }\n        }\n        if (type === 'streamPlaying' || type === 'videoPlaying') {\n            if (this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.ee.emitEvent('streamPlaying', [new StreamManagerEvent_1.StreamManagerEvent(this, 'streamPlaying', undefined)]);\n                this.ee.emitEvent('videoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'videoPlaying')]);\n            }\n        }\n        if (type === 'streamAudioVolumeChange' && this.stream.hasAudio) {\n            this.stream.enableOnceVolumeChangeEvent(false);\n        }\n        return this;\n    };\n    /**\n     * See [[EventDispatcher.off]]\n     */\n    StreamManager.prototype.off = function (type, handler) {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        }\n        else {\n            this.ee.off(type, handler);\n        }\n        if (type === 'streamAudioVolumeChange') {\n            var remainingVolumeEventListeners = this.ee.getListeners(type).length;\n            if (remainingVolumeEventListeners === 0) {\n                this.stream.disableVolumeChangeEvent(false);\n            }\n        }\n        return this;\n    };\n    /**\n     * Makes `video` element parameter display this [[stream]]. This is useful when you are\n     * [managing the video elements on your own](/docs/how-do-i/manage-videos/#you-take-care-of-the-video-players)\n     *\n     * Calling this method with a video already added to other Publisher/Subscriber will cause the video element to be\n     * disassociated from that previous Publisher/Subscriber and to be associated to this one.\n     *\n     * @returns 1 if the video wasn't associated to any other Publisher/Subscriber and has been successfully added to this one.\n     * 0 if the video was already added to this Publisher/Subscriber. -1 if the video was previously associated to any other\n     * Publisher/Subscriber and has been successfully disassociated from that one and properly added to this one.\n     */\n    StreamManager.prototype.addVideoElement = function (video) {\n        this.initializeVideoProperties(video);\n        if (this.stream.isLocal() && this.stream.displayMyRemote()) {\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n        // If the video element is already part of this StreamManager do nothing\n        for (var _i = 0, _a = this.videos; _i < _a.length; _i++) {\n            var v = _a[_i];\n            if (v.video === video) {\n                return 0;\n            }\n        }\n        var returnNumber = 1;\n        for (var _b = 0, _c = this.stream.session.streamManagers; _b < _c.length; _b++) {\n            var streamManager = _c[_b];\n            if (streamManager.disassociateVideo(video)) {\n                returnNumber = -1;\n                break;\n            }\n        }\n        this.stream.session.streamManagers.forEach(function (streamManager) {\n            streamManager.disassociateVideo(video);\n        });\n        this.pushNewStreamManagerVideo({\n            video: video,\n            id: video.id,\n            canplayListenerAdded: false\n        });\n        console.info('New video element associated to ', this);\n        return returnNumber;\n    };\n    /**\n     * Creates a new video element displaying this [[stream]]. This allows you to have multiple video elements displaying the same media stream.\n     *\n     * #### Events dispatched\n     *\n     * The Publisher/Subscriber object will dispatch a `videoElementCreated` event once the HTML video element has been added to DOM. See [[VideoElementEvent]]\n     *\n     * @param targetElement HTML DOM element (or its `id` attribute) in which the video element of the Publisher/Subscriber will be inserted\n     * @param insertMode How the video element will be inserted accordingly to `targetElemet`\n     *\n     * @returns The created HTMLVideoElement\n     */\n    StreamManager.prototype.createVideoElement = function (targetElement, insertMode) {\n        var targEl;\n        if (typeof targetElement === 'string') {\n            targEl = document.getElementById(targetElement);\n            if (!targEl) {\n                throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n            }\n        }\n        else if (targetElement instanceof HTMLElement) {\n            targEl = targetElement;\n        }\n        else {\n            throw new Error(\"The provided 'targetElement' couldn't be resolved to any HTML element: \" + targetElement);\n        }\n        var video = document.createElement('video');\n        this.initializeVideoProperties(video);\n        var insMode = !!insertMode ? insertMode : VideoInsertMode_1.VideoInsertMode.APPEND;\n        switch (insMode) {\n            case VideoInsertMode_1.VideoInsertMode.AFTER:\n                targEl.parentNode.insertBefore(video, targEl.nextSibling);\n                break;\n            case VideoInsertMode_1.VideoInsertMode.APPEND:\n                targEl.appendChild(video);\n                break;\n            case VideoInsertMode_1.VideoInsertMode.BEFORE:\n                targEl.parentNode.insertBefore(video, targEl);\n                break;\n            case VideoInsertMode_1.VideoInsertMode.PREPEND:\n                targEl.insertBefore(video, targEl.childNodes[0]);\n                break;\n            case VideoInsertMode_1.VideoInsertMode.REPLACE:\n                targEl.parentNode.replaceChild(video, targEl);\n                break;\n            default:\n                insMode = VideoInsertMode_1.VideoInsertMode.APPEND;\n                targEl.appendChild(video);\n                break;\n        }\n        var v = {\n            targetElement: targEl,\n            video: video,\n            insertMode: insMode,\n            id: video.id,\n            canplayListenerAdded: false\n        };\n        this.pushNewStreamManagerVideo(v);\n        this.ee.emitEvent('videoElementCreated', [new VideoElementEvent_1.VideoElementEvent(v.video, this, 'videoElementCreated')]);\n        this.lazyLaunchVideoElementCreatedEvent = !!this.firstVideoElement;\n        return video;\n    };\n    /**\n     * Updates the current configuration for the [[PublisherSpeakingEvent]] feature and the [StreamManagerEvent.streamAudioVolumeChange](/api/openvidu-browser/classes/streammanagerevent.html) feature for this specific\n     * StreamManager audio stream, overriding the global options set with [[OpenVidu.setAdvancedConfiguration]]. This way you can customize the audio events options\n     * for each specific StreamManager and change them dynamically.\n     *\n     * @param publisherSpeakingEventsOptions New options to be applied to this StreamManager's audio stream. It is an object which includes the following optional properties:\n     * - `interval`: (number) how frequently the analyser polls the audio stream to check if speaking has started/stopped or audio volume has changed. Default **100** (ms)\n     * - `threshold`: (number) the volume at which _publisherStartSpeaking_, _publisherStopSpeaking_ events will be fired. Default **-50** (dB)\n     */\n    StreamManager.prototype.updatePublisherSpeakingEventsOptions = function (publisherSpeakingEventsOptions) {\n        var currentHarkOptions = !!this.stream.harkOptions ? this.stream.harkOptions : (this.stream.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {});\n        var newInterval = (typeof publisherSpeakingEventsOptions.interval === 'number') ?\n            publisherSpeakingEventsOptions.interval : ((typeof currentHarkOptions.interval === 'number') ? currentHarkOptions.interval : 100);\n        var newThreshold = (typeof publisherSpeakingEventsOptions.threshold === 'number') ?\n            publisherSpeakingEventsOptions.threshold : ((typeof currentHarkOptions.threshold === 'number') ? currentHarkOptions.threshold : -50);\n        this.stream.harkOptions = {\n            interval: newInterval,\n            threshold: newThreshold\n        };\n        if (!!this.stream.speechEvent) {\n            this.stream.speechEvent.setInterval(newInterval);\n            this.stream.speechEvent.setThreshold(newThreshold);\n        }\n    };\n    /* Hidden methods */\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.initializeVideoProperties = function (video) {\n        if (!(this.stream.isLocal() && this.stream.displayMyRemote())) {\n            // Avoid setting the MediaStream into the srcObject if remote subscription before publishing\n            if (video.srcObject !== this.stream.getMediaStream()) {\n                // If srcObject already set don't do it again\n                video.srcObject = this.stream.getMediaStream();\n            }\n        }\n        video.autoplay = true;\n        video.controls = false;\n        if (platform.name === 'Safari') {\n            video.setAttribute('playsinline', 'true');\n        }\n        if (!video.id) {\n            video.id = (this.remote ? 'remote-' : 'local-') + 'video-' + this.stream.streamId;\n            // DEPRECATED property: assign once the property id if the user provided a valid targetElement\t\n            if (!this.id && !!this.targetElement) {\n                this.id = video.id;\n            }\n        }\n        if (!this.remote && !this.stream.displayMyRemote()) {\n            video.muted = true;\n            if (video.style.transform === 'rotateY(180deg)' && !this.stream.outboundStreamOpts.publisherProperties.mirror) {\n                // If the video was already rotated and now is set to not mirror\n                this.removeMirrorVideo(video);\n            }\n            else if (this.stream.outboundStreamOpts.publisherProperties.mirror && !this.stream.isSendScreen()) {\n                this.mirrorVideo(video);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.removeAllVideos = function () {\n        var _this = this;\n        for (var i = this.stream.session.streamManagers.length - 1; i >= 0; --i) {\n            if (this.stream.session.streamManagers[i] === this) {\n                this.stream.session.streamManagers.splice(i, 1);\n            }\n        }\n        this.videos.forEach(function (streamManagerVideo) {\n            // Remove oncanplay event listener (only OpenVidu browser listener, not the user ones)\n            streamManagerVideo.video.removeEventListener('canplay', _this.canPlayListener);\n            streamManagerVideo.canplayListenerAdded = false;\n            if (!!streamManagerVideo.targetElement) {\n                // Only remove from DOM videos created by OpenVidu Browser (those generated by passing a valid targetElement in OpenVidu.initPublisher\n                // and Session.subscribe or those created by StreamManager.createVideoElement). All this videos triggered a videoElementCreated event\n                streamManagerVideo.video.parentNode.removeChild(streamManagerVideo.video);\n                _this.ee.emitEvent('videoElementDestroyed', [new VideoElementEvent_1.VideoElementEvent(streamManagerVideo.video, _this, 'videoElementDestroyed')]);\n            }\n            // Remove srcObject from the video\n            streamManagerVideo.video.srcObject = null;\n            // Remove from collection of videos every video managed by OpenVidu Browser\n            _this.videos.filter(function (v) { return !v.targetElement; });\n        });\n    };\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.disassociateVideo = function (video) {\n        var disassociated = false;\n        for (var i = 0; i < this.videos.length; i++) {\n            if (this.videos[i].video === video) {\n                this.videos[i].video.removeEventListener('canplay', this.canPlayListener);\n                this.videos.splice(i, 1);\n                disassociated = true;\n                console.info('Video element disassociated from ', this);\n                break;\n            }\n        }\n        return disassociated;\n    };\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.addPlayEventToFirstVideo = function () {\n        if ((!!this.videos[0]) && (!!this.videos[0].video) && (!this.videos[0].canplayListenerAdded)) {\n            this.videos[0].video.addEventListener('canplay', this.canPlayListener);\n            this.videos[0].canplayListenerAdded = true;\n        }\n    };\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.updateMediaStream = function (mediaStream) {\n        this.videos.forEach(function (streamManagerVideo) {\n            streamManagerVideo.video.srcObject = mediaStream;\n            if (platform['isIonicIos']) {\n                // iOS Ionic. LIMITATION: must reinsert the video in the DOM for\n                // the media stream to be updated\n                var vParent = streamManagerVideo.video.parentElement;\n                var newVideo = streamManagerVideo.video;\n                vParent.replaceChild(newVideo, streamManagerVideo.video);\n                streamManagerVideo.video = newVideo;\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    StreamManager.prototype.emitEvent = function (type, eventArray) {\n        this.ee.emitEvent(type, eventArray);\n    };\n    /* Private methods */\n    StreamManager.prototype.pushNewStreamManagerVideo = function (streamManagerVideo) {\n        this.videos.push(streamManagerVideo);\n        this.addPlayEventToFirstVideo();\n        if (this.stream.session.streamManagers.indexOf(this) === -1) {\n            this.stream.session.streamManagers.push(this);\n        }\n    };\n    StreamManager.prototype.mirrorVideo = function (video) {\n        if (!platform['isIonicIos']) {\n            video.style.transform = 'rotateY(180deg)';\n            video.style.webkitTransform = 'rotateY(180deg)';\n        }\n    };\n    StreamManager.prototype.removeMirrorVideo = function (video) {\n        video.style.transform = 'unset';\n        video.style.webkitTransform = 'unset';\n    };\n    return StreamManager;\n}());\nexports.StreamManager = StreamManager;\n//# sourceMappingURL=StreamManager.js.map"]},"metadata":{},"sourceType":"script"}