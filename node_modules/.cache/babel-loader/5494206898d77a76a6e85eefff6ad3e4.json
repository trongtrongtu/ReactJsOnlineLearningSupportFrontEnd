{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexports.__esModule = true;\n\nvar Filter_1 = require(\"./Filter\");\n\nvar Subscriber_1 = require(\"./Subscriber\");\n\nvar WebRtcPeer_1 = require(\"../OpenViduInternal/WebRtcPeer/WebRtcPeer\");\n\nvar WebRtcStats_1 = require(\"../OpenViduInternal/WebRtcStats/WebRtcStats\");\n\nvar PublisherSpeakingEvent_1 = require(\"../OpenViduInternal/Events/PublisherSpeakingEvent\");\n\nvar StreamManagerEvent_1 = require(\"../OpenViduInternal/Events/StreamManagerEvent\");\n\nvar StreamPropertyChangedEvent_1 = require(\"../OpenViduInternal/Events/StreamPropertyChangedEvent\");\n\nvar OpenViduError_1 = require(\"../OpenViduInternal/Enums/OpenViduError\");\n/**\n * @hidden\n */\n\n\nvar hark = require(\"hark\");\n\nvar EventEmitter = require(\"wolfy87-eventemitter\");\n\nvar platform = require(\"platform\");\n/**\n * Represents each one of the media streams available in OpenVidu Server for certain session.\n * Each [[Publisher]] and [[Subscriber]] has an attribute of type Stream, as they give access\n * to one of them (sending and receiving it, respectively)\n */\n\n\nvar Stream =\n/** @class */\nfunction () {\n  /**\n   * @hidden\n   */\n  function Stream(session, options) {\n    var _this = this;\n    /**\n     * @hidden\n     */\n\n\n    this.ee = new EventEmitter();\n    this.isSubscribeToRemote = false;\n    /**\n     * @hidden\n     */\n\n    this.isLocalStreamReadyToPublish = false;\n    /**\n     * @hidden\n     */\n\n    this.isLocalStreamPublished = false;\n    /**\n     * @hidden\n     */\n\n    this.publishedOnce = false;\n    /**\n     * @hidden\n     */\n\n    this.publisherStartSpeakingEventEnabled = false;\n    /**\n     * @hidden\n     */\n\n    this.publisherStartSpeakingEventEnabledOnce = false;\n    /**\n     * @hidden\n     */\n\n    this.publisherStopSpeakingEventEnabled = false;\n    /**\n     * @hidden\n     */\n\n    this.publisherStopSpeakingEventEnabledOnce = false;\n    /**\n     * @hidden\n     */\n\n    this.volumeChangeEventEnabled = false;\n    /**\n     * @hidden\n     */\n\n    this.volumeChangeEventEnabledOnce = false;\n    this.session = session;\n\n    if (options.hasOwnProperty('id')) {\n      // InboundStreamOptions: stream belongs to a Subscriber\n      this.inboundStreamOpts = options;\n      this.streamId = this.inboundStreamOpts.id;\n      this.creationTime = this.inboundStreamOpts.createdAt;\n      this.hasAudio = this.inboundStreamOpts.hasAudio;\n      this.hasVideo = this.inboundStreamOpts.hasVideo;\n\n      if (this.hasAudio) {\n        this.audioActive = this.inboundStreamOpts.audioActive;\n      }\n\n      if (this.hasVideo) {\n        this.videoActive = this.inboundStreamOpts.videoActive;\n        this.typeOfVideo = !this.inboundStreamOpts.typeOfVideo ? undefined : this.inboundStreamOpts.typeOfVideo;\n        this.frameRate = this.inboundStreamOpts.frameRate === -1 ? undefined : this.inboundStreamOpts.frameRate;\n        this.videoDimensions = this.inboundStreamOpts.videoDimensions;\n      }\n\n      if (!!this.inboundStreamOpts.filter && Object.keys(this.inboundStreamOpts.filter).length > 0) {\n        if (!!this.inboundStreamOpts.filter.lastExecMethod && Object.keys(this.inboundStreamOpts.filter.lastExecMethod).length === 0) {\n          delete this.inboundStreamOpts.filter.lastExecMethod;\n        }\n\n        this.filter = this.inboundStreamOpts.filter;\n      }\n    } else {\n      // OutboundStreamOptions: stream belongs to a Publisher\n      this.outboundStreamOpts = options;\n      this.hasAudio = this.isSendAudio();\n      this.hasVideo = this.isSendVideo();\n\n      if (this.hasAudio) {\n        this.audioActive = !!this.outboundStreamOpts.publisherProperties.publishAudio;\n      }\n\n      if (this.hasVideo) {\n        this.videoActive = !!this.outboundStreamOpts.publisherProperties.publishVideo;\n        this.frameRate = this.outboundStreamOpts.publisherProperties.frameRate;\n\n        if (typeof MediaStreamTrack !== 'undefined' && this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) {\n          this.typeOfVideo = 'CUSTOM';\n        } else {\n          this.typeOfVideo = this.isSendScreen() ? 'SCREEN' : 'CAMERA';\n        }\n      }\n\n      if (!!this.outboundStreamOpts.publisherProperties.filter) {\n        this.filter = this.outboundStreamOpts.publisherProperties.filter;\n      }\n    }\n\n    this.ee.on('mediastream-updated', function () {\n      _this.streamManager.updateMediaStream(_this.mediaStream);\n\n      console.debug('Video srcObject [' + _this.mediaStream + '] updated in stream [' + _this.streamId + ']');\n    });\n  }\n  /**\n   * See [[EventDispatcher.on]]\n   */\n\n\n  Stream.prototype.on = function (type, handler) {\n    var _this = this;\n\n    this.ee.on(type, function (event) {\n      if (event) {\n        console.info(\"Event '\" + type + \"' triggered by stream '\" + _this.streamId + \"'\", event);\n      } else {\n        console.info(\"Event '\" + type + \"' triggered by stream '\" + _this.streamId + \"'\");\n      }\n\n      handler(event);\n    });\n    return this;\n  };\n  /**\n   * See [[EventDispatcher.once]]\n   */\n\n\n  Stream.prototype.once = function (type, handler) {\n    var _this = this;\n\n    this.ee.once(type, function (event) {\n      if (event) {\n        console.info(\"Event '\" + type + \"' triggered once by stream '\" + _this.streamId + \"'\", event);\n      } else {\n        console.info(\"Event '\" + type + \"' triggered once by stream '\" + _this.streamId + \"'\");\n      }\n\n      handler(event);\n    });\n    return this;\n  };\n  /**\n   * See [[EventDispatcher.off]]\n   */\n\n\n  Stream.prototype.off = function (type, handler) {\n    if (!handler) {\n      this.ee.removeAllListeners(type);\n    } else {\n      this.ee.off(type, handler);\n    }\n\n    return this;\n  };\n  /**\n   * Applies an audio/video filter to the stream.\n   *\n   * @param type Type of filter applied. See [[Filter.type]]\n   * @param options Parameters used to initialize the filter. See [[Filter.options]]\n   *\n   * @returns A Promise (to which you can optionally subscribe to) that is resolved to the applied filter if success and rejected with an Error object if not\n   */\n\n\n  Stream.prototype.applyFilter = function (type, options) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      console.info('Applying filter to stream ' + _this.streamId);\n      options = !!options ? options : {};\n\n      if (typeof options !== 'string') {\n        options = JSON.stringify(options);\n      }\n\n      _this.session.openvidu.sendRequest('applyFilter', {\n        streamId: _this.streamId,\n        type: type,\n        options: options\n      }, function (error, response) {\n        if (error) {\n          console.error('Error applying filter for Stream ' + _this.streamId, error);\n\n          if (error.code === 401) {\n            reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to apply a filter\"));\n          } else {\n            reject(error);\n          }\n        } else {\n          console.info('Filter successfully applied on Stream ' + _this.streamId);\n          var oldValue = _this.filter;\n          _this.filter = new Filter_1.Filter(type, options);\n          _this.filter.stream = _this;\n\n          _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n\n          _this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.streamManager, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n\n          resolve(_this.filter);\n        }\n      });\n    });\n  };\n  /**\n   * Removes an audio/video filter previously applied.\n   *\n   * @returns A Promise (to which you can optionally subscribe to) that is resolved if the previously applied filter has been successfully removed and rejected with an Error object in other case\n   */\n\n\n  Stream.prototype.removeFilter = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      console.info('Removing filter of stream ' + _this.streamId);\n\n      _this.session.openvidu.sendRequest('removeFilter', {\n        streamId: _this.streamId\n      }, function (error, response) {\n        if (error) {\n          console.error('Error removing filter for Stream ' + _this.streamId, error);\n\n          if (error.code === 401) {\n            reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to remove a filter\"));\n          } else {\n            reject(error);\n          }\n        } else {\n          console.info('Filter successfully removed from Stream ' + _this.streamId);\n          var oldValue = _this.filter;\n          delete _this.filter;\n\n          _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n\n          _this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.streamManager, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n\n          resolve();\n        }\n      });\n    });\n  };\n  /**\n   * Returns the internal RTCPeerConnection object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection)\n   *\n   * @returns Native RTCPeerConnection Web API object\n   */\n\n\n  Stream.prototype.getRTCPeerConnection = function () {\n    return this.webRtcPeer.pc;\n  };\n  /**\n   * Returns the internal MediaStream object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n   *\n   * @returns Native MediaStream Web API object\n   */\n\n\n  Stream.prototype.getMediaStream = function () {\n    return this.mediaStream;\n  };\n  /* Hidden methods */\n\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.setMediaStream = function (mediaStream) {\n    this.mediaStream = mediaStream;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.updateMediaStreamInVideos = function () {\n    this.ee.emitEvent('mediastream-updated', []);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.getWebRtcPeer = function () {\n    return this.webRtcPeer;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.subscribeToMyRemote = function (value) {\n    this.isSubscribeToRemote = value;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.setOutboundStreamOptions = function (outboundStreamOpts) {\n    this.outboundStreamOpts = outboundStreamOpts;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.subscribe = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.initWebRtcPeerReceive(false).then(function () {\n        resolve();\n      })[\"catch\"](function (error) {\n        reject(error);\n      });\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.publish = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this.isLocalStreamReadyToPublish) {\n        _this.initWebRtcPeerSend(false).then(function () {\n          resolve();\n        })[\"catch\"](function (error) {\n          reject(error);\n        });\n      } else {\n        _this.ee.once('stream-ready-to-publish', function () {\n          _this.publish().then(function () {\n            resolve();\n          })[\"catch\"](function (error) {\n            reject(error);\n          });\n        });\n      }\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.disposeWebRtcPeer = function () {\n    if (!!this.webRtcPeer) {\n      this.webRtcPeer.dispose();\n      this.stopWebRtcStats();\n    }\n\n    console.info((!!this.outboundStreamOpts ? 'Outbound ' : 'Inbound ') + \"WebRTCPeer from 'Stream' with id [\" + this.streamId + '] is now closed');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.disposeMediaStream = function () {\n    if (this.mediaStream) {\n      this.mediaStream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n      this.mediaStream.getVideoTracks().forEach(function (track) {\n        track.stop();\n      });\n      delete this.mediaStream;\n    }\n\n    if (!!this.speechEvent) {\n      if (!!this.speechEvent.stop) {\n        this.speechEvent.stop();\n      }\n\n      delete this.speechEvent;\n    }\n\n    console.info((!!this.outboundStreamOpts ? 'Local ' : 'Remote ') + \"MediaStream from 'Stream' with id [\" + this.streamId + '] is now disposed');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.displayMyRemote = function () {\n    return this.isSubscribeToRemote;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.isSendAudio = function () {\n    return !!this.outboundStreamOpts && this.outboundStreamOpts.publisherProperties.audioSource !== null && this.outboundStreamOpts.publisherProperties.audioSource !== false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.isSendVideo = function () {\n    return !!this.outboundStreamOpts && this.outboundStreamOpts.publisherProperties.videoSource !== null && this.outboundStreamOpts.publisherProperties.videoSource !== false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.isSendScreen = function () {\n    var screen = this.outboundStreamOpts.publisherProperties.videoSource === 'screen';\n\n    if (platform.name === 'Electron') {\n      screen = typeof this.outboundStreamOpts.publisherProperties.videoSource === 'string' && this.outboundStreamOpts.publisherProperties.videoSource.startsWith('screen:');\n    }\n\n    return !!this.outboundStreamOpts && screen;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableStartSpeakingEvent = function () {\n    var _this = this;\n\n    this.setSpeechEventIfNotExists();\n\n    if (!this.publisherStartSpeakingEventEnabled) {\n      this.publisherStartSpeakingEventEnabled = true;\n      this.speechEvent.on('speaking', function () {\n        _this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStartSpeaking', _this.connection, _this.streamId)]);\n\n        _this.publisherStartSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n      });\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableOnceStartSpeakingEvent = function () {\n    var _this = this;\n\n    this.setSpeechEventIfNotExists();\n\n    if (!this.publisherStartSpeakingEventEnabledOnce) {\n      this.publisherStartSpeakingEventEnabledOnce = true;\n      this.speechEvent.once('speaking', function () {\n        if (_this.publisherStartSpeakingEventEnabledOnce) {\n          // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n          _this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStartSpeaking', _this.connection, _this.streamId)]);\n        }\n\n        _this.disableStartSpeakingEvent(true);\n      });\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.disableStartSpeakingEvent = function (disabledByOnce) {\n    if (!!this.speechEvent) {\n      this.publisherStartSpeakingEventEnabledOnce = false;\n\n      if (disabledByOnce) {\n        if (this.publisherStartSpeakingEventEnabled) {\n          // The 'on' version of this same event is enabled too. Do not remove the hark listener\n          return;\n        }\n      } else {\n        this.publisherStartSpeakingEventEnabled = false;\n      } // Shutting down the hark event\n\n\n      if (this.volumeChangeEventEnabled || this.volumeChangeEventEnabledOnce || this.publisherStopSpeakingEventEnabled || this.publisherStopSpeakingEventEnabledOnce) {\n        // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n        this.speechEvent.off('speaking');\n      } else {\n        // No other hark event is enabled. We can get entirely rid of it\n        this.speechEvent.stop();\n        delete this.speechEvent;\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableStopSpeakingEvent = function () {\n    var _this = this;\n\n    this.setSpeechEventIfNotExists();\n\n    if (!this.publisherStopSpeakingEventEnabled) {\n      this.publisherStopSpeakingEventEnabled = true;\n      this.speechEvent.on('stopped_speaking', function () {\n        _this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStopSpeaking', _this.connection, _this.streamId)]);\n\n        _this.publisherStopSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n      });\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableOnceStopSpeakingEvent = function () {\n    var _this = this;\n\n    this.setSpeechEventIfNotExists();\n\n    if (!this.publisherStopSpeakingEventEnabledOnce) {\n      this.publisherStopSpeakingEventEnabledOnce = true;\n      this.speechEvent.once('stopped_speaking', function () {\n        if (_this.publisherStopSpeakingEventEnabledOnce) {\n          // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n          _this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStopSpeaking', _this.connection, _this.streamId)]);\n        }\n\n        _this.disableStopSpeakingEvent(true);\n      });\n    }\n  };\n  /**\n  * @hidden\n  */\n\n\n  Stream.prototype.disableStopSpeakingEvent = function (disabledByOnce) {\n    if (!!this.speechEvent) {\n      this.publisherStopSpeakingEventEnabledOnce = false;\n\n      if (disabledByOnce) {\n        if (this.publisherStopSpeakingEventEnabled) {\n          // We are cancelling the 'once' listener for this event, but the 'on' version\n          // of this same event is enabled too. Do not remove the hark listener\n          return;\n        }\n      } else {\n        this.publisherStopSpeakingEventEnabled = false;\n      } // Shutting down the hark event\n\n\n      if (this.volumeChangeEventEnabled || this.volumeChangeEventEnabledOnce || this.publisherStartSpeakingEventEnabled || this.publisherStartSpeakingEventEnabledOnce) {\n        // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n        this.speechEvent.off('stopped_speaking');\n      } else {\n        // No other hark event is enabled. We can get entirely rid of it\n        this.speechEvent.stop();\n        delete this.speechEvent;\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableVolumeChangeEvent = function (force) {\n    var _this = this;\n\n    if (this.setSpeechEventIfNotExists()) {\n      if (!this.volumeChangeEventEnabled || force) {\n        this.volumeChangeEventEnabled = true;\n        this.speechEvent.on('volume_change', function (harkEvent) {\n          var oldValue = _this.speechEvent.oldVolumeValue;\n          var value = {\n            newValue: harkEvent,\n            oldValue: oldValue\n          };\n          _this.speechEvent.oldVolumeValue = harkEvent;\n\n          _this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent_1.StreamManagerEvent(_this.streamManager, 'streamAudioVolumeChange', value)]);\n        });\n      }\n    } else {\n      // This way whenever the MediaStream object is available, the event listener will be automatically added\n      this.volumeChangeEventEnabled = true;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.enableOnceVolumeChangeEvent = function (force) {\n    var _this = this;\n\n    if (this.setSpeechEventIfNotExists()) {\n      if (!this.volumeChangeEventEnabledOnce || force) {\n        this.volumeChangeEventEnabledOnce = true;\n        this.speechEvent.once('volume_change', function (harkEvent) {\n          var oldValue = _this.speechEvent.oldVolumeValue;\n          var value = {\n            newValue: harkEvent,\n            oldValue: oldValue\n          };\n          _this.speechEvent.oldVolumeValue = harkEvent;\n\n          _this.disableVolumeChangeEvent(true);\n\n          _this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent_1.StreamManagerEvent(_this.streamManager, 'streamAudioVolumeChange', value)]);\n        });\n      }\n    } else {\n      // This way whenever the MediaStream object is available, the event listener will be automatically added\n      this.volumeChangeEventEnabledOnce = true;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.disableVolumeChangeEvent = function (disabledByOnce) {\n    if (!!this.speechEvent) {\n      this.volumeChangeEventEnabledOnce = false;\n\n      if (disabledByOnce) {\n        if (this.volumeChangeEventEnabled) {\n          // We are cancelling the 'once' listener for this event, but the 'on' version\n          // of this same event is enabled too. Do not remove the hark listener\n          return;\n        }\n      } else {\n        this.volumeChangeEventEnabled = false;\n      } // Shutting down the hark event\n\n\n      if (this.publisherStartSpeakingEventEnabled || this.publisherStartSpeakingEventEnabledOnce || this.publisherStopSpeakingEventEnabled || this.publisherStopSpeakingEventEnabledOnce) {\n        // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n        this.speechEvent.off('volume_change');\n      } else {\n        // No other hark event is enabled. We can get entirely rid of it\n        this.speechEvent.stop();\n        delete this.speechEvent;\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.isLocal = function () {\n    // inbound options undefined and outbound options defined\n    return !this.inboundStreamOpts && !!this.outboundStreamOpts;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.getSelectedIceCandidate = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.webRtcStats.getSelectedIceCandidateInfo().then(function (report) {\n        return resolve(report);\n      })[\"catch\"](function (error) {\n        return reject(error);\n      });\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.getRemoteIceCandidateList = function () {\n    return this.webRtcPeer.remoteCandidatesQueue;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.getLocalIceCandidateList = function () {\n    return this.webRtcPeer.localCandidatesQueue;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.streamIceConnectionStateBroken = function () {\n    if (!this.getWebRtcPeer() || !this.getRTCPeerConnection()) {\n      return false;\n    }\n\n    if (this.isLocal && !!this.session.openvidu.advancedConfiguration.forceMediaReconnectionAfterNetworkDrop) {\n      console.warn('OpenVidu Browser advanced configuration option \"forceMediaReconnectionAfterNetworkDrop\" is enabled. Publisher stream ' + this.streamId + 'will force a reconnection');\n      return true;\n    }\n\n    var iceConnectionState = this.getRTCPeerConnection().iceConnectionState;\n    return iceConnectionState === 'disconnected' || iceConnectionState === 'failed';\n  };\n  /* Private methods */\n\n\n  Stream.prototype.setSpeechEventIfNotExists = function () {\n    if (!!this.mediaStream) {\n      if (!this.speechEvent) {\n        var harkOptions = !!this.harkOptions ? this.harkOptions : this.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {};\n        harkOptions.interval = typeof harkOptions.interval === 'number' ? harkOptions.interval : 100;\n        harkOptions.threshold = typeof harkOptions.threshold === 'number' ? harkOptions.threshold : -50;\n        this.speechEvent = hark(this.mediaStream, harkOptions);\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.initWebRtcPeerSend = function (reconnect) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (!reconnect) {\n        _this.initHarkEvents(); // Init hark events for the local stream\n\n      }\n\n      var userMediaConstraints = {\n        audio: _this.isSendAudio(),\n        video: _this.isSendVideo()\n      };\n      var options = {\n        mediaStream: _this.mediaStream,\n        mediaConstraints: userMediaConstraints,\n        onicecandidate: _this.connection.sendIceCandidate.bind(_this.connection),\n        iceServers: _this.getIceServersConf(),\n        simulcast: false\n      };\n\n      var successCallback = function successCallback(sdpOfferParam) {\n        console.debug('Sending SDP offer to publish as ' + _this.streamId, sdpOfferParam);\n        var method = reconnect ? 'reconnectStream' : 'publishVideo';\n        var params;\n\n        if (reconnect) {\n          params = {\n            stream: _this.streamId\n          };\n        } else {\n          var typeOfVideo = '';\n\n          if (_this.isSendVideo()) {\n            typeOfVideo = typeof MediaStreamTrack !== 'undefined' && _this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack ? 'CUSTOM' : _this.isSendScreen() ? 'SCREEN' : 'CAMERA';\n          }\n\n          params = {\n            doLoopback: _this.displayMyRemote() || false,\n            hasAudio: _this.isSendAudio(),\n            hasVideo: _this.isSendVideo(),\n            audioActive: _this.audioActive,\n            videoActive: _this.videoActive,\n            typeOfVideo: typeOfVideo,\n            frameRate: !!_this.frameRate ? _this.frameRate : -1,\n            videoDimensions: JSON.stringify(_this.videoDimensions),\n            filter: _this.outboundStreamOpts.publisherProperties.filter\n          };\n        }\n\n        params['sdpOffer'] = sdpOfferParam;\n\n        _this.session.openvidu.sendRequest(method, params, function (error, response) {\n          if (error) {\n            if (error.code === 401) {\n              reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to publish\"));\n            } else {\n              reject('Error on publishVideo: ' + JSON.stringify(error));\n            }\n          } else {\n            _this.webRtcPeer.processAnswer(response.sdpAnswer, false).then(function () {\n              _this.streamId = response.id;\n              _this.creationTime = response.createdAt;\n              _this.isLocalStreamPublished = true;\n              _this.publishedOnce = true;\n\n              if (_this.displayMyRemote()) {\n                _this.remotePeerSuccessfullyEstablished();\n              }\n\n              if (reconnect) {\n                _this.ee.emitEvent('stream-reconnected-by-publisher', []);\n              } else {\n                _this.ee.emitEvent('stream-created-by-publisher', []);\n              }\n\n              _this.initWebRtcStats();\n\n              console.info(\"'Publisher' (\" + _this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"published\") + \" to session\");\n              resolve();\n            })[\"catch\"](function (error) {\n              reject(error);\n            });\n          }\n        });\n      };\n\n      if (reconnect) {\n        _this.disposeWebRtcPeer();\n      }\n\n      if (_this.displayMyRemote()) {\n        _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerSendrecv(options);\n      } else {\n        _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerSendonly(options);\n      }\n\n      _this.webRtcPeer.addIceConnectionStateChangeListener('publisher of ' + _this.connection.connectionId);\n\n      _this.webRtcPeer.generateOffer().then(function (sdpOffer) {\n        successCallback(sdpOffer);\n      })[\"catch\"](function (error) {\n        reject(new Error('(publish) SDP offer error: ' + JSON.stringify(error)));\n      });\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Stream.prototype.initWebRtcPeerReceive = function (reconnect) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var offerConstraints = {\n        audio: _this.inboundStreamOpts.hasAudio,\n        video: _this.inboundStreamOpts.hasVideo\n      };\n      console.debug(\"'Session.subscribe(Stream)' called. Constraints of generate SDP offer\", offerConstraints);\n      var options = {\n        onicecandidate: _this.connection.sendIceCandidate.bind(_this.connection),\n        mediaConstraints: offerConstraints,\n        iceServers: _this.getIceServersConf(),\n        simulcast: false\n      };\n\n      var successCallback = function successCallback(sdpOfferParam) {\n        console.debug('Sending SDP offer to subscribe to ' + _this.streamId, sdpOfferParam);\n        var method = reconnect ? 'reconnectStream' : 'receiveVideoFrom';\n        var params = {\n          sdpOffer: sdpOfferParam\n        };\n        params[reconnect ? 'stream' : 'sender'] = _this.streamId;\n\n        _this.session.openvidu.sendRequest(method, params, function (error, response) {\n          if (error) {\n            reject(new Error('Error on recvVideoFrom: ' + JSON.stringify(error)));\n          } else {\n            // Ios Ionic. Limitation: some bug in iosrtc cordova plugin makes it necessary\n            // to add a timeout before calling PeerConnection#setRemoteDescription during\n            // some time (400 ms) from the moment first subscriber stream is received\n            if (_this.session.isFirstIonicIosSubscriber) {\n              _this.session.isFirstIonicIosSubscriber = false;\n              setTimeout(function () {\n                // After 400 ms Ionic iOS subscribers won't need to run\n                // PeerConnection#setRemoteDescription after 250 ms timeout anymore\n                _this.session.countDownForIonicIosSubscribersActive = false;\n              }, 400);\n            }\n\n            var needsTimeoutOnProcessAnswer = _this.session.countDownForIonicIosSubscribersActive;\n\n            _this.webRtcPeer.processAnswer(response.sdpAnswer, needsTimeoutOnProcessAnswer).then(function () {\n              console.info(\"'Subscriber' (\" + _this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"subscribed\"));\n\n              _this.remotePeerSuccessfullyEstablished();\n\n              _this.initWebRtcStats();\n\n              resolve();\n            })[\"catch\"](function (error) {\n              reject(error);\n            });\n          }\n        });\n      };\n\n      _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerRecvonly(options);\n\n      _this.webRtcPeer.addIceConnectionStateChangeListener(_this.streamId);\n\n      _this.webRtcPeer.generateOffer().then(function (sdpOffer) {\n        successCallback(sdpOffer);\n      })[\"catch\"](function (error) {\n        reject(new Error('(subscribe) SDP offer error: ' + JSON.stringify(error)));\n      });\n    });\n  };\n\n  Stream.prototype.remotePeerSuccessfullyEstablished = function () {\n    if (platform['isIonicIos']) {\n      // iOS Ionic. LIMITATION: must use deprecated WebRTC API\n      var pc1 = this.webRtcPeer.pc;\n      this.mediaStream = pc1.getRemoteStreams()[0];\n    } else {\n      this.mediaStream = new MediaStream();\n      var receiver = void 0;\n\n      for (var _i = 0, _a = this.webRtcPeer.pc.getReceivers(); _i < _a.length; _i++) {\n        receiver = _a[_i];\n\n        if (!!receiver.track) {\n          this.mediaStream.addTrack(receiver.track);\n        }\n      }\n    }\n\n    console.debug('Peer remote stream', this.mediaStream);\n\n    if (!!this.mediaStream) {\n      if (this.streamManager instanceof Subscriber_1.Subscriber) {\n        // Apply SubscriberProperties.subscribeToAudio and SubscriberProperties.subscribeToVideo\n        if (!!this.mediaStream.getAudioTracks()[0]) {\n          var enabled = !!this.streamManager.properties.subscribeToAudio;\n          this.mediaStream.getAudioTracks()[0].enabled = enabled;\n        }\n\n        if (!!this.mediaStream.getVideoTracks()[0]) {\n          var enabled = !!this.streamManager.properties.subscribeToVideo;\n          this.mediaStream.getVideoTracks()[0].enabled = enabled;\n        }\n      }\n\n      this.updateMediaStreamInVideos();\n      this.initHarkEvents(); // Init hark events for the remote stream\n    }\n  };\n\n  Stream.prototype.initHarkEvents = function () {\n    if (!!this.mediaStream.getAudioTracks()[0]) {\n      // Hark events can only be set if audio track is available\n      if (this.streamManager.remote) {\n        // publisherStartSpeaking/publisherStopSpeaking is only defined for remote streams\n        if (this.session.startSpeakingEventsEnabled) {\n          this.enableStartSpeakingEvent();\n        }\n\n        if (this.session.startSpeakingEventsEnabledOnce) {\n          this.enableOnceStartSpeakingEvent();\n        }\n\n        if (this.session.stopSpeakingEventsEnabled) {\n          this.enableStopSpeakingEvent();\n        }\n\n        if (this.session.stopSpeakingEventsEnabledOnce) {\n          this.enableOnceStopSpeakingEvent();\n        }\n      } // streamAudioVolumeChange event is defined for both Publishers and Subscribers\n\n\n      if (this.volumeChangeEventEnabled) {\n        this.enableVolumeChangeEvent(true);\n      }\n\n      if (this.volumeChangeEventEnabledOnce) {\n        this.enableOnceVolumeChangeEvent(true);\n      }\n    }\n  };\n\n  Stream.prototype.initWebRtcStats = function () {\n    this.webRtcStats = new WebRtcStats_1.WebRtcStats(this);\n    this.webRtcStats.initWebRtcStats(); //TODO: send common webrtc stats from client to openvidu-server\n\n    /*if (this.session.openvidu.webrtcStatsInterval > 0) {\n        setInterval(() => {\n            this.gatherStatsForPeer().then(jsonStats => {\n                const body = {\n                    sessionId: this.session.sessionId,\n                    participantPrivateId: this.connection.rpcSessionId,\n                    stats: jsonStats\n                }\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', this.session.openvidu.httpUri + '/elasticsearch/webrtc-stats', true);\n                xhr.setRequestHeader('Content-Type', 'application/json');\n                xhr.send(JSON.stringify(body));\n            })\n        }, this.session.openvidu.webrtcStatsInterval * 1000);\n    }*/\n  };\n\n  Stream.prototype.stopWebRtcStats = function () {\n    if (!!this.webRtcStats && this.webRtcStats.isEnabled()) {\n      this.webRtcStats.stopWebRtcStats();\n    }\n  };\n\n  Stream.prototype.getIceServersConf = function () {\n    var returnValue;\n\n    if (!!this.session.openvidu.advancedConfiguration.iceServers) {\n      returnValue = this.session.openvidu.advancedConfiguration.iceServers === 'freeice' ? undefined : this.session.openvidu.advancedConfiguration.iceServers;\n    } else if (this.session.openvidu.iceServers) {\n      returnValue = this.session.openvidu.iceServers;\n    } else {\n      returnValue = undefined;\n    }\n\n    return returnValue;\n  };\n\n  Stream.prototype.gatherStatsForPeer = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this.isLocal()) {\n        // Publisher stream stats\n        _this.getRTCPeerConnection().getSenders().forEach(function (sender) {\n          return sender.getStats().then(function (response) {\n            response.forEach(function (report) {\n              if (_this.isReportWanted(report)) {\n                var finalReport = {};\n                finalReport['type'] = report.type;\n                finalReport['timestamp'] = report.timestamp;\n                finalReport['id'] = report.id; // Common to Chrome, Firefox and Safari\n\n                if (report.type === 'outbound-rtp') {\n                  finalReport['ssrc'] = report.ssrc;\n                  finalReport['firCount'] = report.firCount;\n                  finalReport['pliCount'] = report.pliCount;\n                  finalReport['nackCount'] = report.nackCount;\n                  finalReport['qpSum'] = report.qpSum; // Set media type\n\n                  if (!!report.kind) {\n                    finalReport['mediaType'] = report.kind;\n                  } else if (!!report.mediaType) {\n                    finalReport['mediaType'] = report.mediaType;\n                  } else {\n                    // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                    finalReport['mediaType'] = report.id.indexOf('VideoStream') !== -1 ? 'video' : 'audio';\n                  }\n\n                  if (finalReport['mediaType'] === 'video') {\n                    finalReport['framesEncoded'] = report.framesEncoded;\n                  }\n\n                  finalReport['packetsSent'] = report.packetsSent;\n                  finalReport['bytesSent'] = report.bytesSent;\n                } // Only for Chrome and Safari\n\n\n                if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                  // This is the final selected candidate pair\n                  finalReport['availableOutgoingBitrate'] = report.availableOutgoingBitrate;\n                  finalReport['rtt'] = report.currentRoundTripTime;\n                  finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                } // Only for Firefox >= 66.0\n\n\n                if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {}\n\n                console.log(finalReport);\n              }\n            });\n          });\n        });\n      } else {\n        // Subscriber stream stats\n        _this.getRTCPeerConnection().getReceivers().forEach(function (receiver) {\n          return receiver.getStats().then(function (response) {\n            response.forEach(function (report) {\n              if (_this.isReportWanted(report)) {\n                var finalReport = {};\n                finalReport['type'] = report.type;\n                finalReport['timestamp'] = report.timestamp;\n                finalReport['id'] = report.id; // Common to Chrome, Firefox and Safari\n\n                if (report.type === 'inbound-rtp') {\n                  finalReport['ssrc'] = report.ssrc;\n                  finalReport['firCount'] = report.firCount;\n                  finalReport['pliCount'] = report.pliCount;\n                  finalReport['nackCount'] = report.nackCount;\n                  finalReport['qpSum'] = report.qpSum; // Set media type\n\n                  if (!!report.kind) {\n                    finalReport['mediaType'] = report.kind;\n                  } else if (!!report.mediaType) {\n                    finalReport['mediaType'] = report.mediaType;\n                  } else {\n                    // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                    finalReport['mediaType'] = report.id.indexOf('VideoStream') !== -1 ? 'video' : 'audio';\n                  }\n\n                  if (finalReport['mediaType'] === 'video') {\n                    finalReport['framesDecoded'] = report.framesDecoded;\n                  }\n\n                  finalReport['packetsReceived'] = report.packetsReceived;\n                  finalReport['packetsLost'] = report.packetsLost;\n                  finalReport['jitter'] = report.jitter;\n                  finalReport['bytesReceived'] = report.bytesReceived;\n                } // Only for Chrome and Safari\n\n\n                if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                  // This is the final selected candidate pair\n                  finalReport['availableIncomingBitrate'] = report.availableIncomingBitrate;\n                  finalReport['rtt'] = report.currentRoundTripTime;\n                  finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                } // Only for Firefox >= 66.0\n\n\n                if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {}\n\n                console.log(finalReport);\n              }\n            });\n          });\n        });\n      }\n    });\n  };\n\n  Stream.prototype.isReportWanted = function (report) {\n    return report.type === 'inbound-rtp' && !this.isLocal() || report.type === 'outbound-rtp' && this.isLocal() || report.type === 'candidate-pair' && report.nominated && report.bytesSent > 0;\n  };\n\n  return Stream;\n}();\n\nexports.Stream = Stream;","map":{"version":3,"sources":["../../src/OpenVidu/Stream.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexports.__esModule = true;\nvar Filter_1 = require(\"./Filter\");\nvar Subscriber_1 = require(\"./Subscriber\");\nvar WebRtcPeer_1 = require(\"../OpenViduInternal/WebRtcPeer/WebRtcPeer\");\nvar WebRtcStats_1 = require(\"../OpenViduInternal/WebRtcStats/WebRtcStats\");\nvar PublisherSpeakingEvent_1 = require(\"../OpenViduInternal/Events/PublisherSpeakingEvent\");\nvar StreamManagerEvent_1 = require(\"../OpenViduInternal/Events/StreamManagerEvent\");\nvar StreamPropertyChangedEvent_1 = require(\"../OpenViduInternal/Events/StreamPropertyChangedEvent\");\nvar OpenViduError_1 = require(\"../OpenViduInternal/Enums/OpenViduError\");\n/**\n * @hidden\n */\nvar hark = require(\"hark\");\nvar EventEmitter = require(\"wolfy87-eventemitter\");\nvar platform = require(\"platform\");\n/**\n * Represents each one of the media streams available in OpenVidu Server for certain session.\n * Each [[Publisher]] and [[Subscriber]] has an attribute of type Stream, as they give access\n * to one of them (sending and receiving it, respectively)\n */\nvar Stream = /** @class */ (function () {\n    /**\n     * @hidden\n     */\n    function Stream(session, options) {\n        var _this = this;\n        /**\n         * @hidden\n         */\n        this.ee = new EventEmitter();\n        this.isSubscribeToRemote = false;\n        /**\n         * @hidden\n         */\n        this.isLocalStreamReadyToPublish = false;\n        /**\n         * @hidden\n         */\n        this.isLocalStreamPublished = false;\n        /**\n         * @hidden\n         */\n        this.publishedOnce = false;\n        /**\n         * @hidden\n         */\n        this.publisherStartSpeakingEventEnabled = false;\n        /**\n         * @hidden\n         */\n        this.publisherStartSpeakingEventEnabledOnce = false;\n        /**\n         * @hidden\n         */\n        this.publisherStopSpeakingEventEnabled = false;\n        /**\n         * @hidden\n         */\n        this.publisherStopSpeakingEventEnabledOnce = false;\n        /**\n         * @hidden\n         */\n        this.volumeChangeEventEnabled = false;\n        /**\n         * @hidden\n         */\n        this.volumeChangeEventEnabledOnce = false;\n        this.session = session;\n        if (options.hasOwnProperty('id')) {\n            // InboundStreamOptions: stream belongs to a Subscriber\n            this.inboundStreamOpts = options;\n            this.streamId = this.inboundStreamOpts.id;\n            this.creationTime = this.inboundStreamOpts.createdAt;\n            this.hasAudio = this.inboundStreamOpts.hasAudio;\n            this.hasVideo = this.inboundStreamOpts.hasVideo;\n            if (this.hasAudio) {\n                this.audioActive = this.inboundStreamOpts.audioActive;\n            }\n            if (this.hasVideo) {\n                this.videoActive = this.inboundStreamOpts.videoActive;\n                this.typeOfVideo = (!this.inboundStreamOpts.typeOfVideo) ? undefined : this.inboundStreamOpts.typeOfVideo;\n                this.frameRate = (this.inboundStreamOpts.frameRate === -1) ? undefined : this.inboundStreamOpts.frameRate;\n                this.videoDimensions = this.inboundStreamOpts.videoDimensions;\n            }\n            if (!!this.inboundStreamOpts.filter && (Object.keys(this.inboundStreamOpts.filter).length > 0)) {\n                if (!!this.inboundStreamOpts.filter.lastExecMethod && Object.keys(this.inboundStreamOpts.filter.lastExecMethod).length === 0) {\n                    delete this.inboundStreamOpts.filter.lastExecMethod;\n                }\n                this.filter = this.inboundStreamOpts.filter;\n            }\n        }\n        else {\n            // OutboundStreamOptions: stream belongs to a Publisher\n            this.outboundStreamOpts = options;\n            this.hasAudio = this.isSendAudio();\n            this.hasVideo = this.isSendVideo();\n            if (this.hasAudio) {\n                this.audioActive = !!this.outboundStreamOpts.publisherProperties.publishAudio;\n            }\n            if (this.hasVideo) {\n                this.videoActive = !!this.outboundStreamOpts.publisherProperties.publishVideo;\n                this.frameRate = this.outboundStreamOpts.publisherProperties.frameRate;\n                if (typeof MediaStreamTrack !== 'undefined' && this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) {\n                    this.typeOfVideo = 'CUSTOM';\n                }\n                else {\n                    this.typeOfVideo = this.isSendScreen() ? 'SCREEN' : 'CAMERA';\n                }\n            }\n            if (!!this.outboundStreamOpts.publisherProperties.filter) {\n                this.filter = this.outboundStreamOpts.publisherProperties.filter;\n            }\n        }\n        this.ee.on('mediastream-updated', function () {\n            _this.streamManager.updateMediaStream(_this.mediaStream);\n            console.debug('Video srcObject [' + _this.mediaStream + '] updated in stream [' + _this.streamId + ']');\n        });\n    }\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    Stream.prototype.on = function (type, handler) {\n        var _this = this;\n        this.ee.on(type, function (event) {\n            if (event) {\n                console.info(\"Event '\" + type + \"' triggered by stream '\" + _this.streamId + \"'\", event);\n            }\n            else {\n                console.info(\"Event '\" + type + \"' triggered by stream '\" + _this.streamId + \"'\");\n            }\n            handler(event);\n        });\n        return this;\n    };\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    Stream.prototype.once = function (type, handler) {\n        var _this = this;\n        this.ee.once(type, function (event) {\n            if (event) {\n                console.info(\"Event '\" + type + \"' triggered once by stream '\" + _this.streamId + \"'\", event);\n            }\n            else {\n                console.info(\"Event '\" + type + \"' triggered once by stream '\" + _this.streamId + \"'\");\n            }\n            handler(event);\n        });\n        return this;\n    };\n    /**\n     * See [[EventDispatcher.off]]\n     */\n    Stream.prototype.off = function (type, handler) {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        }\n        else {\n            this.ee.off(type, handler);\n        }\n        return this;\n    };\n    /**\n     * Applies an audio/video filter to the stream.\n     *\n     * @param type Type of filter applied. See [[Filter.type]]\n     * @param options Parameters used to initialize the filter. See [[Filter.options]]\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved to the applied filter if success and rejected with an Error object if not\n     */\n    Stream.prototype.applyFilter = function (type, options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            console.info('Applying filter to stream ' + _this.streamId);\n            options = !!options ? options : {};\n            if (typeof options !== 'string') {\n                options = JSON.stringify(options);\n            }\n            _this.session.openvidu.sendRequest('applyFilter', { streamId: _this.streamId, type: type, options: options }, function (error, response) {\n                if (error) {\n                    console.error('Error applying filter for Stream ' + _this.streamId, error);\n                    if (error.code === 401) {\n                        reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to apply a filter\"));\n                    }\n                    else {\n                        reject(error);\n                    }\n                }\n                else {\n                    console.info('Filter successfully applied on Stream ' + _this.streamId);\n                    var oldValue = _this.filter;\n                    _this.filter = new Filter_1.Filter(type, options);\n                    _this.filter.stream = _this;\n                    _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n                    _this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.streamManager, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n                    resolve(_this.filter);\n                }\n            });\n        });\n    };\n    /**\n     * Removes an audio/video filter previously applied.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the previously applied filter has been successfully removed and rejected with an Error object in other case\n     */\n    Stream.prototype.removeFilter = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            console.info('Removing filter of stream ' + _this.streamId);\n            _this.session.openvidu.sendRequest('removeFilter', { streamId: _this.streamId }, function (error, response) {\n                if (error) {\n                    console.error('Error removing filter for Stream ' + _this.streamId, error);\n                    if (error.code === 401) {\n                        reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to remove a filter\"));\n                    }\n                    else {\n                        reject(error);\n                    }\n                }\n                else {\n                    console.info('Filter successfully removed from Stream ' + _this.streamId);\n                    var oldValue = _this.filter;\n                    delete _this.filter;\n                    _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n                    _this.streamManager.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.streamManager, _this, 'filter', _this.filter, oldValue, 'applyFilter')]);\n                    resolve();\n                }\n            });\n        });\n    };\n    /**\n     * Returns the internal RTCPeerConnection object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection)\n     *\n     * @returns Native RTCPeerConnection Web API object\n     */\n    Stream.prototype.getRTCPeerConnection = function () {\n        return this.webRtcPeer.pc;\n    };\n    /**\n     * Returns the internal MediaStream object associated to this stream (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n     *\n     * @returns Native MediaStream Web API object\n     */\n    Stream.prototype.getMediaStream = function () {\n        return this.mediaStream;\n    };\n    /* Hidden methods */\n    /**\n     * @hidden\n     */\n    Stream.prototype.setMediaStream = function (mediaStream) {\n        this.mediaStream = mediaStream;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.updateMediaStreamInVideos = function () {\n        this.ee.emitEvent('mediastream-updated', []);\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.getWebRtcPeer = function () {\n        return this.webRtcPeer;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.subscribeToMyRemote = function (value) {\n        this.isSubscribeToRemote = value;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.setOutboundStreamOptions = function (outboundStreamOpts) {\n        this.outboundStreamOpts = outboundStreamOpts;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.subscribe = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.initWebRtcPeerReceive(false)\n                .then(function () {\n                resolve();\n            })[\"catch\"](function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.publish = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.isLocalStreamReadyToPublish) {\n                _this.initWebRtcPeerSend(false)\n                    .then(function () {\n                    resolve();\n                })[\"catch\"](function (error) {\n                    reject(error);\n                });\n            }\n            else {\n                _this.ee.once('stream-ready-to-publish', function () {\n                    _this.publish()\n                        .then(function () {\n                        resolve();\n                    })[\"catch\"](function (error) {\n                        reject(error);\n                    });\n                });\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.disposeWebRtcPeer = function () {\n        if (!!this.webRtcPeer) {\n            this.webRtcPeer.dispose();\n            this.stopWebRtcStats();\n        }\n        console.info((!!this.outboundStreamOpts ? 'Outbound ' : 'Inbound ') + \"WebRTCPeer from 'Stream' with id [\" + this.streamId + '] is now closed');\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.disposeMediaStream = function () {\n        if (this.mediaStream) {\n            this.mediaStream.getAudioTracks().forEach(function (track) {\n                track.stop();\n            });\n            this.mediaStream.getVideoTracks().forEach(function (track) {\n                track.stop();\n            });\n            delete this.mediaStream;\n        }\n        if (!!this.speechEvent) {\n            if (!!this.speechEvent.stop) {\n                this.speechEvent.stop();\n            }\n            delete this.speechEvent;\n        }\n        console.info((!!this.outboundStreamOpts ? 'Local ' : 'Remote ') + \"MediaStream from 'Stream' with id [\" + this.streamId + '] is now disposed');\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.displayMyRemote = function () {\n        return this.isSubscribeToRemote;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.isSendAudio = function () {\n        return (!!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== null &&\n            this.outboundStreamOpts.publisherProperties.audioSource !== false);\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.isSendVideo = function () {\n        return (!!this.outboundStreamOpts &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== null &&\n            this.outboundStreamOpts.publisherProperties.videoSource !== false);\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.isSendScreen = function () {\n        var screen = this.outboundStreamOpts.publisherProperties.videoSource === 'screen';\n        if (platform.name === 'Electron') {\n            screen = typeof this.outboundStreamOpts.publisherProperties.videoSource === 'string' &&\n                this.outboundStreamOpts.publisherProperties.videoSource.startsWith('screen:');\n        }\n        return !!this.outboundStreamOpts && screen;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableStartSpeakingEvent = function () {\n        var _this = this;\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStartSpeakingEventEnabled) {\n            this.publisherStartSpeakingEventEnabled = true;\n            this.speechEvent.on('speaking', function () {\n                _this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStartSpeaking', _this.connection, _this.streamId)]);\n                _this.publisherStartSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableOnceStartSpeakingEvent = function () {\n        var _this = this;\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStartSpeakingEventEnabledOnce) {\n            this.publisherStartSpeakingEventEnabledOnce = true;\n            this.speechEvent.once('speaking', function () {\n                if (_this.publisherStartSpeakingEventEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    _this.session.emitEvent('publisherStartSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStartSpeaking', _this.connection, _this.streamId)]);\n                }\n                _this.disableStartSpeakingEvent(true);\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.disableStartSpeakingEvent = function (disabledByOnce) {\n        if (!!this.speechEvent) {\n            this.publisherStartSpeakingEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.publisherStartSpeakingEventEnabled) {\n                    // The 'on' version of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            }\n            else {\n                this.publisherStartSpeakingEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.volumeChangeEventEnabled ||\n                this.volumeChangeEventEnabledOnce ||\n                this.publisherStopSpeakingEventEnabled ||\n                this.publisherStopSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('speaking');\n            }\n            else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableStopSpeakingEvent = function () {\n        var _this = this;\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStopSpeakingEventEnabled) {\n            this.publisherStopSpeakingEventEnabled = true;\n            this.speechEvent.on('stopped_speaking', function () {\n                _this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStopSpeaking', _this.connection, _this.streamId)]);\n                _this.publisherStopSpeakingEventEnabledOnce = false; // Disable 'once' version if 'on' version was triggered\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableOnceStopSpeakingEvent = function () {\n        var _this = this;\n        this.setSpeechEventIfNotExists();\n        if (!this.publisherStopSpeakingEventEnabledOnce) {\n            this.publisherStopSpeakingEventEnabledOnce = true;\n            this.speechEvent.once('stopped_speaking', function () {\n                if (_this.publisherStopSpeakingEventEnabledOnce) {\n                    // If the listener has been disabled in the meantime (for example by the 'on' version) do not trigger the event\n                    _this.session.emitEvent('publisherStopSpeaking', [new PublisherSpeakingEvent_1.PublisherSpeakingEvent(_this.session, 'publisherStopSpeaking', _this.connection, _this.streamId)]);\n                }\n                _this.disableStopSpeakingEvent(true);\n            });\n        }\n    };\n    /**\n    * @hidden\n    */\n    Stream.prototype.disableStopSpeakingEvent = function (disabledByOnce) {\n        if (!!this.speechEvent) {\n            this.publisherStopSpeakingEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.publisherStopSpeakingEventEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            }\n            else {\n                this.publisherStopSpeakingEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.volumeChangeEventEnabled ||\n                this.volumeChangeEventEnabledOnce ||\n                this.publisherStartSpeakingEventEnabled ||\n                this.publisherStartSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('stopped_speaking');\n            }\n            else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableVolumeChangeEvent = function (force) {\n        var _this = this;\n        if (this.setSpeechEventIfNotExists()) {\n            if (!this.volumeChangeEventEnabled || force) {\n                this.volumeChangeEventEnabled = true;\n                this.speechEvent.on('volume_change', function (harkEvent) {\n                    var oldValue = _this.speechEvent.oldVolumeValue;\n                    var value = { newValue: harkEvent, oldValue: oldValue };\n                    _this.speechEvent.oldVolumeValue = harkEvent;\n                    _this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent_1.StreamManagerEvent(_this.streamManager, 'streamAudioVolumeChange', value)]);\n                });\n            }\n        }\n        else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.volumeChangeEventEnabled = true;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.enableOnceVolumeChangeEvent = function (force) {\n        var _this = this;\n        if (this.setSpeechEventIfNotExists()) {\n            if (!this.volumeChangeEventEnabledOnce || force) {\n                this.volumeChangeEventEnabledOnce = true;\n                this.speechEvent.once('volume_change', function (harkEvent) {\n                    var oldValue = _this.speechEvent.oldVolumeValue;\n                    var value = { newValue: harkEvent, oldValue: oldValue };\n                    _this.speechEvent.oldVolumeValue = harkEvent;\n                    _this.disableVolumeChangeEvent(true);\n                    _this.streamManager.emitEvent('streamAudioVolumeChange', [new StreamManagerEvent_1.StreamManagerEvent(_this.streamManager, 'streamAudioVolumeChange', value)]);\n                });\n            }\n        }\n        else {\n            // This way whenever the MediaStream object is available, the event listener will be automatically added\n            this.volumeChangeEventEnabledOnce = true;\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.disableVolumeChangeEvent = function (disabledByOnce) {\n        if (!!this.speechEvent) {\n            this.volumeChangeEventEnabledOnce = false;\n            if (disabledByOnce) {\n                if (this.volumeChangeEventEnabled) {\n                    // We are cancelling the 'once' listener for this event, but the 'on' version\n                    // of this same event is enabled too. Do not remove the hark listener\n                    return;\n                }\n            }\n            else {\n                this.volumeChangeEventEnabled = false;\n            }\n            // Shutting down the hark event\n            if (this.publisherStartSpeakingEventEnabled ||\n                this.publisherStartSpeakingEventEnabledOnce ||\n                this.publisherStopSpeakingEventEnabled ||\n                this.publisherStopSpeakingEventEnabledOnce) {\n                // Some other hark event is enabled. Cannot stop the hark process, just remove the specific listener\n                this.speechEvent.off('volume_change');\n            }\n            else {\n                // No other hark event is enabled. We can get entirely rid of it\n                this.speechEvent.stop();\n                delete this.speechEvent;\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.isLocal = function () {\n        // inbound options undefined and outbound options defined\n        return (!this.inboundStreamOpts && !!this.outboundStreamOpts);\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.getSelectedIceCandidate = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.webRtcStats.getSelectedIceCandidateInfo()\n                .then(function (report) { return resolve(report); })[\"catch\"](function (error) { return reject(error); });\n        });\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.getRemoteIceCandidateList = function () {\n        return this.webRtcPeer.remoteCandidatesQueue;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.getLocalIceCandidateList = function () {\n        return this.webRtcPeer.localCandidatesQueue;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.streamIceConnectionStateBroken = function () {\n        if (!this.getWebRtcPeer() || !this.getRTCPeerConnection()) {\n            return false;\n        }\n        if (this.isLocal && !!this.session.openvidu.advancedConfiguration.forceMediaReconnectionAfterNetworkDrop) {\n            console.warn('OpenVidu Browser advanced configuration option \"forceMediaReconnectionAfterNetworkDrop\" is enabled. Publisher stream ' + this.streamId + 'will force a reconnection');\n            return true;\n        }\n        var iceConnectionState = this.getRTCPeerConnection().iceConnectionState;\n        return iceConnectionState === 'disconnected' || iceConnectionState === 'failed';\n    };\n    /* Private methods */\n    Stream.prototype.setSpeechEventIfNotExists = function () {\n        if (!!this.mediaStream) {\n            if (!this.speechEvent) {\n                var harkOptions = !!this.harkOptions ? this.harkOptions : (this.session.openvidu.advancedConfiguration.publisherSpeakingEventsOptions || {});\n                harkOptions.interval = (typeof harkOptions.interval === 'number') ? harkOptions.interval : 100;\n                harkOptions.threshold = (typeof harkOptions.threshold === 'number') ? harkOptions.threshold : -50;\n                this.speechEvent = hark(this.mediaStream, harkOptions);\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.initWebRtcPeerSend = function (reconnect) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (!reconnect) {\n                _this.initHarkEvents(); // Init hark events for the local stream\n            }\n            var userMediaConstraints = {\n                audio: _this.isSendAudio(),\n                video: _this.isSendVideo()\n            };\n            var options = {\n                mediaStream: _this.mediaStream,\n                mediaConstraints: userMediaConstraints,\n                onicecandidate: _this.connection.sendIceCandidate.bind(_this.connection),\n                iceServers: _this.getIceServersConf(),\n                simulcast: false\n            };\n            var successCallback = function (sdpOfferParam) {\n                console.debug('Sending SDP offer to publish as '\n                    + _this.streamId, sdpOfferParam);\n                var method = reconnect ? 'reconnectStream' : 'publishVideo';\n                var params;\n                if (reconnect) {\n                    params = {\n                        stream: _this.streamId\n                    };\n                }\n                else {\n                    var typeOfVideo = '';\n                    if (_this.isSendVideo()) {\n                        typeOfVideo = (typeof MediaStreamTrack !== 'undefined' && _this.outboundStreamOpts.publisherProperties.videoSource instanceof MediaStreamTrack) ? 'CUSTOM' : (_this.isSendScreen() ? 'SCREEN' : 'CAMERA');\n                    }\n                    params = {\n                        doLoopback: _this.displayMyRemote() || false,\n                        hasAudio: _this.isSendAudio(),\n                        hasVideo: _this.isSendVideo(),\n                        audioActive: _this.audioActive,\n                        videoActive: _this.videoActive,\n                        typeOfVideo: typeOfVideo,\n                        frameRate: !!_this.frameRate ? _this.frameRate : -1,\n                        videoDimensions: JSON.stringify(_this.videoDimensions),\n                        filter: _this.outboundStreamOpts.publisherProperties.filter\n                    };\n                }\n                params['sdpOffer'] = sdpOfferParam;\n                _this.session.openvidu.sendRequest(method, params, function (error, response) {\n                    if (error) {\n                        if (error.code === 401) {\n                            reject(new OpenViduError_1.OpenViduError(OpenViduError_1.OpenViduErrorName.OPENVIDU_PERMISSION_DENIED, \"You don't have permissions to publish\"));\n                        }\n                        else {\n                            reject('Error on publishVideo: ' + JSON.stringify(error));\n                        }\n                    }\n                    else {\n                        _this.webRtcPeer.processAnswer(response.sdpAnswer, false)\n                            .then(function () {\n                            _this.streamId = response.id;\n                            _this.creationTime = response.createdAt;\n                            _this.isLocalStreamPublished = true;\n                            _this.publishedOnce = true;\n                            if (_this.displayMyRemote()) {\n                                _this.remotePeerSuccessfullyEstablished();\n                            }\n                            if (reconnect) {\n                                _this.ee.emitEvent('stream-reconnected-by-publisher', []);\n                            }\n                            else {\n                                _this.ee.emitEvent('stream-created-by-publisher', []);\n                            }\n                            _this.initWebRtcStats();\n                            console.info(\"'Publisher' (\" + _this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"published\") + \" to session\");\n                            resolve();\n                        })[\"catch\"](function (error) {\n                            reject(error);\n                        });\n                    }\n                });\n            };\n            if (reconnect) {\n                _this.disposeWebRtcPeer();\n            }\n            if (_this.displayMyRemote()) {\n                _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerSendrecv(options);\n            }\n            else {\n                _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerSendonly(options);\n            }\n            _this.webRtcPeer.addIceConnectionStateChangeListener('publisher of ' + _this.connection.connectionId);\n            _this.webRtcPeer.generateOffer().then(function (sdpOffer) {\n                successCallback(sdpOffer);\n            })[\"catch\"](function (error) {\n                reject(new Error('(publish) SDP offer error: ' + JSON.stringify(error)));\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    Stream.prototype.initWebRtcPeerReceive = function (reconnect) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var offerConstraints = {\n                audio: _this.inboundStreamOpts.hasAudio,\n                video: _this.inboundStreamOpts.hasVideo\n            };\n            console.debug(\"'Session.subscribe(Stream)' called. Constraints of generate SDP offer\", offerConstraints);\n            var options = {\n                onicecandidate: _this.connection.sendIceCandidate.bind(_this.connection),\n                mediaConstraints: offerConstraints,\n                iceServers: _this.getIceServersConf(),\n                simulcast: false\n            };\n            var successCallback = function (sdpOfferParam) {\n                console.debug('Sending SDP offer to subscribe to '\n                    + _this.streamId, sdpOfferParam);\n                var method = reconnect ? 'reconnectStream' : 'receiveVideoFrom';\n                var params = { sdpOffer: sdpOfferParam };\n                params[reconnect ? 'stream' : 'sender'] = _this.streamId;\n                _this.session.openvidu.sendRequest(method, params, function (error, response) {\n                    if (error) {\n                        reject(new Error('Error on recvVideoFrom: ' + JSON.stringify(error)));\n                    }\n                    else {\n                        // Ios Ionic. Limitation: some bug in iosrtc cordova plugin makes it necessary\n                        // to add a timeout before calling PeerConnection#setRemoteDescription during\n                        // some time (400 ms) from the moment first subscriber stream is received\n                        if (_this.session.isFirstIonicIosSubscriber) {\n                            _this.session.isFirstIonicIosSubscriber = false;\n                            setTimeout(function () {\n                                // After 400 ms Ionic iOS subscribers won't need to run\n                                // PeerConnection#setRemoteDescription after 250 ms timeout anymore\n                                _this.session.countDownForIonicIosSubscribersActive = false;\n                            }, 400);\n                        }\n                        var needsTimeoutOnProcessAnswer = _this.session.countDownForIonicIosSubscribersActive;\n                        _this.webRtcPeer.processAnswer(response.sdpAnswer, needsTimeoutOnProcessAnswer).then(function () {\n                            console.info(\"'Subscriber' (\" + _this.streamId + \") successfully \" + (reconnect ? \"reconnected\" : \"subscribed\"));\n                            _this.remotePeerSuccessfullyEstablished();\n                            _this.initWebRtcStats();\n                            resolve();\n                        })[\"catch\"](function (error) {\n                            reject(error);\n                        });\n                    }\n                });\n            };\n            _this.webRtcPeer = new WebRtcPeer_1.WebRtcPeerRecvonly(options);\n            _this.webRtcPeer.addIceConnectionStateChangeListener(_this.streamId);\n            _this.webRtcPeer.generateOffer()\n                .then(function (sdpOffer) {\n                successCallback(sdpOffer);\n            })[\"catch\"](function (error) {\n                reject(new Error('(subscribe) SDP offer error: ' + JSON.stringify(error)));\n            });\n        });\n    };\n    Stream.prototype.remotePeerSuccessfullyEstablished = function () {\n        if (platform['isIonicIos']) {\n            // iOS Ionic. LIMITATION: must use deprecated WebRTC API\n            var pc1 = this.webRtcPeer.pc;\n            this.mediaStream = pc1.getRemoteStreams()[0];\n        }\n        else {\n            this.mediaStream = new MediaStream();\n            var receiver = void 0;\n            for (var _i = 0, _a = this.webRtcPeer.pc.getReceivers(); _i < _a.length; _i++) {\n                receiver = _a[_i];\n                if (!!receiver.track) {\n                    this.mediaStream.addTrack(receiver.track);\n                }\n            }\n        }\n        console.debug('Peer remote stream', this.mediaStream);\n        if (!!this.mediaStream) {\n            if (this.streamManager instanceof Subscriber_1.Subscriber) {\n                // Apply SubscriberProperties.subscribeToAudio and SubscriberProperties.subscribeToVideo\n                if (!!this.mediaStream.getAudioTracks()[0]) {\n                    var enabled = !!(this.streamManager.properties.subscribeToAudio);\n                    this.mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!this.mediaStream.getVideoTracks()[0]) {\n                    var enabled = !!(this.streamManager.properties.subscribeToVideo);\n                    this.mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n            }\n            this.updateMediaStreamInVideos();\n            this.initHarkEvents(); // Init hark events for the remote stream\n        }\n    };\n    Stream.prototype.initHarkEvents = function () {\n        if (!!this.mediaStream.getAudioTracks()[0]) {\n            // Hark events can only be set if audio track is available\n            if (this.streamManager.remote) {\n                // publisherStartSpeaking/publisherStopSpeaking is only defined for remote streams\n                if (this.session.startSpeakingEventsEnabled) {\n                    this.enableStartSpeakingEvent();\n                }\n                if (this.session.startSpeakingEventsEnabledOnce) {\n                    this.enableOnceStartSpeakingEvent();\n                }\n                if (this.session.stopSpeakingEventsEnabled) {\n                    this.enableStopSpeakingEvent();\n                }\n                if (this.session.stopSpeakingEventsEnabledOnce) {\n                    this.enableOnceStopSpeakingEvent();\n                }\n            }\n            // streamAudioVolumeChange event is defined for both Publishers and Subscribers\n            if (this.volumeChangeEventEnabled) {\n                this.enableVolumeChangeEvent(true);\n            }\n            if (this.volumeChangeEventEnabledOnce) {\n                this.enableOnceVolumeChangeEvent(true);\n            }\n        }\n    };\n    Stream.prototype.initWebRtcStats = function () {\n        this.webRtcStats = new WebRtcStats_1.WebRtcStats(this);\n        this.webRtcStats.initWebRtcStats();\n        //TODO: send common webrtc stats from client to openvidu-server\n        /*if (this.session.openvidu.webrtcStatsInterval > 0) {\n            setInterval(() => {\n                this.gatherStatsForPeer().then(jsonStats => {\n                    const body = {\n                        sessionId: this.session.sessionId,\n                        participantPrivateId: this.connection.rpcSessionId,\n                        stats: jsonStats\n                    }\n                    var xhr = new XMLHttpRequest();\n                    xhr.open('POST', this.session.openvidu.httpUri + '/elasticsearch/webrtc-stats', true);\n                    xhr.setRequestHeader('Content-Type', 'application/json');\n                    xhr.send(JSON.stringify(body));\n                })\n            }, this.session.openvidu.webrtcStatsInterval * 1000);\n        }*/\n    };\n    Stream.prototype.stopWebRtcStats = function () {\n        if (!!this.webRtcStats && this.webRtcStats.isEnabled()) {\n            this.webRtcStats.stopWebRtcStats();\n        }\n    };\n    Stream.prototype.getIceServersConf = function () {\n        var returnValue;\n        if (!!this.session.openvidu.advancedConfiguration.iceServers) {\n            returnValue = this.session.openvidu.advancedConfiguration.iceServers === 'freeice' ?\n                undefined :\n                this.session.openvidu.advancedConfiguration.iceServers;\n        }\n        else if (this.session.openvidu.iceServers) {\n            returnValue = this.session.openvidu.iceServers;\n        }\n        else {\n            returnValue = undefined;\n        }\n        return returnValue;\n    };\n    Stream.prototype.gatherStatsForPeer = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.isLocal()) {\n                // Publisher stream stats\n                _this.getRTCPeerConnection().getSenders().forEach(function (sender) { return sender.getStats()\n                    .then(function (response) {\n                    response.forEach(function (report) {\n                        if (_this.isReportWanted(report)) {\n                            var finalReport = {};\n                            finalReport['type'] = report.type;\n                            finalReport['timestamp'] = report.timestamp;\n                            finalReport['id'] = report.id;\n                            // Common to Chrome, Firefox and Safari\n                            if (report.type === 'outbound-rtp') {\n                                finalReport['ssrc'] = report.ssrc;\n                                finalReport['firCount'] = report.firCount;\n                                finalReport['pliCount'] = report.pliCount;\n                                finalReport['nackCount'] = report.nackCount;\n                                finalReport['qpSum'] = report.qpSum;\n                                // Set media type\n                                if (!!report.kind) {\n                                    finalReport['mediaType'] = report.kind;\n                                }\n                                else if (!!report.mediaType) {\n                                    finalReport['mediaType'] = report.mediaType;\n                                }\n                                else {\n                                    // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                    finalReport['mediaType'] = (report.id.indexOf('VideoStream') !== -1) ? 'video' : 'audio';\n                                }\n                                if (finalReport['mediaType'] === 'video') {\n                                    finalReport['framesEncoded'] = report.framesEncoded;\n                                }\n                                finalReport['packetsSent'] = report.packetsSent;\n                                finalReport['bytesSent'] = report.bytesSent;\n                            }\n                            // Only for Chrome and Safari\n                            if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                // This is the final selected candidate pair\n                                finalReport['availableOutgoingBitrate'] = report.availableOutgoingBitrate;\n                                finalReport['rtt'] = report.currentRoundTripTime;\n                                finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                            }\n                            // Only for Firefox >= 66.0\n                            if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n                            }\n                            console.log(finalReport);\n                        }\n                    });\n                }); });\n            }\n            else {\n                // Subscriber stream stats\n                _this.getRTCPeerConnection().getReceivers().forEach(function (receiver) { return receiver.getStats()\n                    .then(function (response) {\n                    response.forEach(function (report) {\n                        if (_this.isReportWanted(report)) {\n                            var finalReport = {};\n                            finalReport['type'] = report.type;\n                            finalReport['timestamp'] = report.timestamp;\n                            finalReport['id'] = report.id;\n                            // Common to Chrome, Firefox and Safari\n                            if (report.type === 'inbound-rtp') {\n                                finalReport['ssrc'] = report.ssrc;\n                                finalReport['firCount'] = report.firCount;\n                                finalReport['pliCount'] = report.pliCount;\n                                finalReport['nackCount'] = report.nackCount;\n                                finalReport['qpSum'] = report.qpSum;\n                                // Set media type\n                                if (!!report.kind) {\n                                    finalReport['mediaType'] = report.kind;\n                                }\n                                else if (!!report.mediaType) {\n                                    finalReport['mediaType'] = report.mediaType;\n                                }\n                                else {\n                                    // Safari does not have 'mediaType' defined for inbound-rtp. Must be inferred from 'id' field\n                                    finalReport['mediaType'] = (report.id.indexOf('VideoStream') !== -1) ? 'video' : 'audio';\n                                }\n                                if (finalReport['mediaType'] === 'video') {\n                                    finalReport['framesDecoded'] = report.framesDecoded;\n                                }\n                                finalReport['packetsReceived'] = report.packetsReceived;\n                                finalReport['packetsLost'] = report.packetsLost;\n                                finalReport['jitter'] = report.jitter;\n                                finalReport['bytesReceived'] = report.bytesReceived;\n                            }\n                            // Only for Chrome and Safari\n                            if (report.type === 'candidate-pair' && report.totalRoundTripTime !== undefined) {\n                                // This is the final selected candidate pair\n                                finalReport['availableIncomingBitrate'] = report.availableIncomingBitrate;\n                                finalReport['rtt'] = report.currentRoundTripTime;\n                                finalReport['averageRtt'] = report.totalRoundTripTime / report.responsesReceived;\n                            }\n                            // Only for Firefox >= 66.0\n                            if (report.type === 'remote-inbound-rtp' || report.type === 'remote-outbound-rtp') {\n                            }\n                            console.log(finalReport);\n                        }\n                    });\n                }); });\n            }\n        });\n    };\n    Stream.prototype.isReportWanted = function (report) {\n        return report.type === 'inbound-rtp' && !this.isLocal() ||\n            report.type === 'outbound-rtp' && this.isLocal() ||\n            (report.type === 'candidate-pair' && report.nominated && report.bytesSent > 0);\n    };\n    return Stream;\n}());\nexports.Stream = Stream;\n//# sourceMappingURL=Stream.js.map"]},"metadata":{},"sourceType":"script"}