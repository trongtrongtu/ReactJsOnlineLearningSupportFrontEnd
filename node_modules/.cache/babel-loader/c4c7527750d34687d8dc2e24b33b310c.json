{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar Session_1 = require(\"./Session\");\n\nvar Stream_1 = require(\"./Stream\");\n\nvar StreamManager_1 = require(\"./StreamManager\");\n\nvar StreamEvent_1 = require(\"../OpenViduInternal/Events/StreamEvent\");\n\nvar StreamPropertyChangedEvent_1 = require(\"../OpenViduInternal/Events/StreamPropertyChangedEvent\");\n\nvar VideoElementEvent_1 = require(\"../OpenViduInternal/Events/VideoElementEvent\");\n\nvar OpenViduError_1 = require(\"../OpenViduInternal/Enums/OpenViduError\");\n\nvar platform = require(\"platform\");\n\nvar OpenViduLogger_1 = require(\"../OpenViduInternal/Logger/OpenViduLogger\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Packs local media streams. Participants can publish it to a session. Initialized with [[OpenVidu.initPublisher]] method\n *\n * ### Available event listeners (and events dispatched)\n *\n * - accessAllowed\n * - accessDenied\n * - accessDialogOpened\n * - accessDialogClosed\n * - streamCreated ([[StreamEvent]])\n * - streamDestroyed ([[StreamEvent]])\n * - streamPropertyChanged ([[StreamPropertyChangedEvent]])\n */\n\nvar Publisher =\n/** @class */\nfunction (_super) {\n  __extends(Publisher, _super);\n  /**\n   * @hidden\n   */\n\n\n  function Publisher(targEl, properties, openvidu) {\n    var _this = _super.call(this, new Stream_1.Stream(!!openvidu.session ? openvidu.session : new Session_1.Session(openvidu), {\n      publisherProperties: properties,\n      mediaConstraints: {}\n    }), targEl) || this;\n    /**\n     * Whether the Publisher has been granted access to the requested input devices or not\n     */\n\n\n    _this.accessAllowed = false;\n    /**\n     * Whether you have called [[Publisher.subscribeToRemote]] with value `true` or `false` (*false* by default)\n     */\n\n    _this.isSubscribedToRemote = false;\n    _this.accessDenied = false;\n    _this.properties = properties;\n    _this.openvidu = openvidu;\n\n    _this.stream.ee.on('local-stream-destroyed', function (reason) {\n      _this.stream.isLocalStreamPublished = false;\n      var streamEvent = new StreamEvent_1.StreamEvent(true, _this, 'streamDestroyed', _this.stream, reason);\n\n      _this.emitEvent('streamDestroyed', [streamEvent]);\n\n      streamEvent.callDefaultBehavior();\n    });\n\n    return _this;\n  }\n  /**\n   * Publish or unpublish the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n   *\n   * #### Events dispatched\n   *\n   * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n   *\n   * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n   * The [[Publisher]] object of the local participant will also dispatch the exact same event\n   *\n   * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n   * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n   *\n   * See [[StreamPropertyChangedEvent]] to learn more.\n   *\n   * @param value `true` to publish the audio stream, `false` to unpublish it\n   */\n\n\n  Publisher.prototype.publishAudio = function (value) {\n    var _this = this;\n\n    if (this.stream.audioActive !== value) {\n      var affectedMediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote : this.stream.getMediaStream();\n      affectedMediaStream.getAudioTracks().forEach(function (track) {\n        track.enabled = value;\n      });\n\n      if (!!this.session && !!this.stream.streamId) {\n        this.session.openvidu.sendRequest('streamPropertyChanged', {\n          streamId: this.stream.streamId,\n          property: 'audioActive',\n          newValue: value,\n          reason: 'publishAudio'\n        }, function (error, response) {\n          if (error) {\n            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n          } else {\n            _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'audioActive', value, !value, 'publishAudio')]);\n\n            _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'audioActive', value, !value, 'publishAudio')]);\n          }\n        });\n      }\n\n      this.stream.audioActive = value;\n      logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its audio stream');\n    }\n  };\n  /**\n   * Publish or unpublish the video stream (if available). Calling this method twice in a row passing same value will have no effect\n   *\n   * #### Events dispatched\n   *\n   * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n   *\n   * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n   * The [[Publisher]] object of the local participant will also dispatch the exact same event\n   *\n   * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n   * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n   *\n   * See [[StreamPropertyChangedEvent]] to learn more.\n   *\n   * @param value `true` to publish the video stream, `false` to unpublish it\n   */\n\n\n  Publisher.prototype.publishVideo = function (value) {\n    var _this = this;\n\n    if (this.stream.videoActive !== value) {\n      var affectedMediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote : this.stream.getMediaStream();\n      affectedMediaStream.getVideoTracks().forEach(function (track) {\n        track.enabled = value;\n      });\n\n      if (!!this.session && !!this.stream.streamId) {\n        this.session.openvidu.sendRequest('streamPropertyChanged', {\n          streamId: this.stream.streamId,\n          property: 'videoActive',\n          newValue: value,\n          reason: 'publishVideo'\n        }, function (error, response) {\n          if (error) {\n            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n          } else {\n            _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'videoActive', value, !value, 'publishVideo')]);\n\n            _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'videoActive', value, !value, 'publishVideo')]);\n          }\n        });\n      }\n\n      this.stream.videoActive = value;\n      logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its video stream');\n    }\n  };\n  /**\n   * Call this method before [[Session.publish]] if you prefer to subscribe to your Publisher's remote stream instead of using the local stream, as any other user would do.\n   */\n\n\n  Publisher.prototype.subscribeToRemote = function (value) {\n    value = value !== undefined ? value : true;\n    this.isSubscribedToRemote = value;\n    this.stream.subscribeToMyRemote(value);\n  };\n  /**\n   * See [[EventDispatcher.on]]\n   */\n\n\n  Publisher.prototype.on = function (type, handler) {\n    var _this = this;\n\n    _super.prototype.on.call(this, type, handler);\n\n    if (type === 'streamCreated') {\n      if (!!this.stream && this.stream.isLocalStreamPublished) {\n        this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n      } else {\n        this.stream.ee.on('stream-created-by-publisher', function () {\n          _this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, _this, 'streamCreated', _this.stream, '')]);\n        });\n      }\n    }\n\n    if (type === 'remoteVideoPlaying') {\n      if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video && this.videos[0].video.currentTime > 0 && this.videos[0].video.paused === false && this.videos[0].video.ended === false && this.videos[0].video.readyState === 4) {\n        this.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n      }\n    }\n\n    if (type === 'accessAllowed') {\n      if (this.accessAllowed) {\n        this.emitEvent('accessAllowed', []);\n      }\n    }\n\n    if (type === 'accessDenied') {\n      if (this.accessDenied) {\n        this.emitEvent('accessDenied', []);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * See [[EventDispatcher.once]]\n   */\n\n\n  Publisher.prototype.once = function (type, handler) {\n    var _this = this;\n\n    _super.prototype.once.call(this, type, handler);\n\n    if (type === 'streamCreated') {\n      if (!!this.stream && this.stream.isLocalStreamPublished) {\n        this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n      } else {\n        this.stream.ee.once('stream-created-by-publisher', function () {\n          _this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, _this, 'streamCreated', _this.stream, '')]);\n        });\n      }\n    }\n\n    if (type === 'remoteVideoPlaying') {\n      if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video && this.videos[0].video.currentTime > 0 && this.videos[0].video.paused === false && this.videos[0].video.ended === false && this.videos[0].video.readyState === 4) {\n        this.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n      }\n    }\n\n    if (type === 'accessAllowed') {\n      if (this.accessAllowed) {\n        this.emitEvent('accessAllowed', []);\n      }\n    }\n\n    if (type === 'accessDenied') {\n      if (this.accessDenied) {\n        this.emitEvent('accessDenied', []);\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Replaces the current video or audio track with a different one. This allows you to replace an ongoing track with a different one\n   * without having to renegotiate the whole WebRTC connection (that is, initializing a new Publisher, unpublishing the previous one\n   * and publishing the new one).\n   *\n   * You can get this new MediaStreamTrack by using the native Web API or simply with [[OpenVidu.getUserMedia]] method.\n   *\n   * **WARNING: this method has been proven to work, but there may be some combinations of published/replaced tracks that may be incompatible between them and break the connection in OpenVidu Server. A complete renegotiation may be the only solution in this case**\n   *\n   * @param track The [MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack) object to replace the current one. If it is an audio track, the current audio track will be the replaced one. If it\n   * is a video track, the current video track will be the replaced one.\n   *\n   * @returns A Promise (to which you can optionally subscribe to) that is resolved if the track was successfully replaced and rejected with an Error object in other case\n   */\n\n\n  Publisher.prototype.replaceTrack = function (track) {\n    var _this = this;\n\n    var replaceMediaStreamTrack = function replaceMediaStreamTrack() {\n      var mediaStream = _this.stream.displayMyRemote() ? _this.stream.localMediaStreamWhenSubscribedToRemote : _this.stream.getMediaStream();\n      var removedTrack;\n\n      if (track.kind === 'video') {\n        removedTrack = mediaStream.getVideoTracks()[0];\n      } else {\n        removedTrack = mediaStream.getAudioTracks()[0];\n      }\n\n      mediaStream.removeTrack(removedTrack);\n      removedTrack.stop();\n      mediaStream.addTrack(track);\n    };\n\n    return new Promise(function (resolve, reject) {\n      if (_this.stream.isLocalStreamPublished) {\n        // Only if the Publisher has been published is necessary to call native Web API RTCRtpSender.replaceTrack\n        var senders = _this.stream.getRTCPeerConnection().getSenders();\n\n        var sender = void 0;\n\n        if (track.kind === 'video') {\n          sender = senders.find(function (s) {\n            return !!s.track && s.track.kind === 'video';\n          });\n\n          if (!sender) {\n            reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'));\n          }\n        } else if (track.kind === 'audio') {\n          sender = senders.find(function (s) {\n            return !!s.track && s.track.kind === 'audio';\n          });\n\n          if (!sender) {\n            reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'));\n          }\n        } else {\n          reject(new Error('Unknown track kind ' + track.kind));\n        }\n\n        sender.replaceTrack(track).then(function () {\n          replaceMediaStreamTrack();\n          resolve();\n        })[\"catch\"](function (error) {\n          reject(error);\n        });\n      } else {\n        // Publisher not published. Simply modify local MediaStream tracks\n        replaceMediaStreamTrack();\n        resolve();\n      }\n    });\n  };\n  /* Hidden methods */\n\n  /**\n   * @hidden\n   */\n\n\n  Publisher.prototype.initialize = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var constraints = {};\n      var constraintsAux = {};\n      var timeForDialogEvent = 1250;\n      var startTime;\n\n      var errorCallback = function errorCallback(openViduError) {\n        _this.accessDenied = true;\n        _this.accessAllowed = false;\n        reject(openViduError);\n      };\n\n      var successCallback = function successCallback(mediaStream) {\n        _this.accessAllowed = true;\n        _this.accessDenied = false;\n\n        if (typeof MediaStreamTrack !== 'undefined' && _this.properties.audioSource instanceof MediaStreamTrack) {\n          mediaStream.removeTrack(mediaStream.getAudioTracks()[0]);\n          mediaStream.addTrack(_this.properties.audioSource);\n        }\n\n        if (typeof MediaStreamTrack !== 'undefined' && _this.properties.videoSource instanceof MediaStreamTrack) {\n          mediaStream.removeTrack(mediaStream.getVideoTracks()[0]);\n          mediaStream.addTrack(_this.properties.videoSource);\n        } // Apply PublisherProperties.publishAudio and PublisherProperties.publishVideo\n\n\n        if (!!mediaStream.getAudioTracks()[0]) {\n          var enabled = _this.stream.audioActive !== undefined && _this.stream.audioActive !== null ? _this.stream.audioActive : !!_this.stream.outboundStreamOpts.publisherProperties.publishAudio;\n          mediaStream.getAudioTracks()[0].enabled = enabled;\n        }\n\n        if (!!mediaStream.getVideoTracks()[0]) {\n          var enabled = _this.stream.videoActive !== undefined && _this.stream.videoActive !== null ? _this.stream.videoActive : !!_this.stream.outboundStreamOpts.publisherProperties.publishVideo;\n          mediaStream.getVideoTracks()[0].enabled = enabled;\n        }\n\n        _this.videoReference = document.createElement('video');\n\n        if (platform.name === 'Safari') {\n          _this.videoReference.setAttribute('playsinline', 'true');\n        }\n\n        _this.stream.setMediaStream(mediaStream);\n\n        if (!!_this.firstVideoElement) {\n          _this.createVideoElement(_this.firstVideoElement.targetElement, _this.properties.insertMode);\n        }\n\n        _this.videoReference.srcObject = mediaStream;\n\n        if (!_this.stream.displayMyRemote()) {\n          // When we are subscribed to our remote we don't still set the MediaStream object in the video elements to\n          // avoid early 'streamPlaying' event\n          _this.stream.updateMediaStreamInVideos();\n        }\n\n        delete _this.firstVideoElement;\n\n        if (_this.stream.isSendVideo()) {\n          if (!_this.stream.isSendScreen()) {\n            if (platform['isIonicIos'] || platform.name === 'Safari') {\n              // iOS Ionic or Safari. Limitation: cannot set videoDimensions directly, as the videoReference is not loaded\n              // if not added to DOM. Must add it to DOM and wait for videoWidth and videoHeight properties to be defined\n              _this.videoReference.style.display = 'none';\n              document.body.appendChild(_this.videoReference);\n\n              var videoDimensionsSet_1 = function videoDimensionsSet_1() {\n                _this.stream.videoDimensions = {\n                  width: _this.videoReference.videoWidth,\n                  height: _this.videoReference.videoHeight\n                };\n                _this.stream.isLocalStreamReadyToPublish = true;\n\n                _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n\n                document.body.removeChild(_this.videoReference);\n              };\n\n              var interval_1;\n\n              _this.videoReference.addEventListener('loadedmetadata', function () {\n                if (_this.videoReference.videoWidth === 0) {\n                  interval_1 = setInterval(function () {\n                    if (_this.videoReference.videoWidth !== 0) {\n                      clearInterval(interval_1);\n                      videoDimensionsSet_1();\n                    }\n                  }, 40);\n                } else {\n                  videoDimensionsSet_1();\n                }\n              });\n            } else {\n              // Rest of platforms\n              // With no screen share, video dimension can be set directly from MediaStream (getSettings)\n              // Orientation must be checked for mobile devices (width and height are reversed)\n              var _a = mediaStream.getVideoTracks()[0].getSettings(),\n                  width = _a.width,\n                  height = _a.height;\n\n              if ((platform.os.family === 'iOS' || platform.os.family === 'Android') && window.innerHeight > window.innerWidth) {\n                // Mobile portrait mode\n                _this.stream.videoDimensions = {\n                  width: height || 0,\n                  height: width || 0\n                };\n              } else {\n                _this.stream.videoDimensions = {\n                  width: width || 0,\n                  height: height || 0\n                };\n              }\n\n              _this.stream.isLocalStreamReadyToPublish = true;\n\n              _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n            }\n          } else {\n            // With screen share, video dimension must be got from a video element (onloadedmetadata event)\n            _this.videoReference.addEventListener('loadedmetadata', function () {\n              _this.stream.videoDimensions = {\n                width: _this.videoReference.videoWidth,\n                height: _this.videoReference.videoHeight\n              };\n              _this.screenShareResizeInterval = setInterval(function () {\n                var firefoxSettings = mediaStream.getVideoTracks()[0].getSettings();\n                var newWidth = platform.name === 'Chrome' || platform.name === 'Opera' ? _this.videoReference.videoWidth : firefoxSettings.width;\n                var newHeight = platform.name === 'Chrome' || platform.name === 'Opera' ? _this.videoReference.videoHeight : firefoxSettings.height;\n\n                if (_this.stream.isLocalStreamPublished && (newWidth !== _this.stream.videoDimensions.width || newHeight !== _this.stream.videoDimensions.height)) {\n                  var oldValue_1 = {\n                    width: _this.stream.videoDimensions.width,\n                    height: _this.stream.videoDimensions.height\n                  };\n                  _this.stream.videoDimensions = {\n                    width: newWidth || 0,\n                    height: newHeight || 0\n                  };\n\n                  _this.session.openvidu.sendRequest('streamPropertyChanged', {\n                    streamId: _this.stream.streamId,\n                    property: 'videoDimensions',\n                    newValue: JSON.stringify(_this.stream.videoDimensions),\n                    reason: 'screenResized'\n                  }, function (error, response) {\n                    if (error) {\n                      logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                    } else {\n                      _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'videoDimensions', _this.stream.videoDimensions, oldValue_1, 'screenResized')]);\n\n                      _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'videoDimensions', _this.stream.videoDimensions, oldValue_1, 'screenResized')]);\n                    }\n                  });\n                }\n              }, 500);\n              _this.stream.isLocalStreamReadyToPublish = true;\n\n              _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n            });\n          }\n        } else {\n          _this.stream.isLocalStreamReadyToPublish = true;\n\n          _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n        }\n\n        resolve();\n      };\n\n      var getMediaSuccess = function getMediaSuccess(mediaStream, definedAudioConstraint) {\n        _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n\n        if (_this.stream.isSendScreen() && _this.stream.isSendAudio()) {\n          // When getting desktop as user media audio constraint must be false. Now we can ask for it if required\n          constraintsAux.audio = definedAudioConstraint;\n          constraintsAux.video = false;\n          startTime = Date.now();\n\n          _this.setPermissionDialogTimer(timeForDialogEvent);\n\n          navigator.mediaDevices.getUserMedia(constraintsAux).then(function (audioOnlyStream) {\n            _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n\n            mediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n            successCallback(mediaStream);\n          })[\"catch\"](function (error) {\n            _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n\n            mediaStream.getAudioTracks().forEach(function (track) {\n              track.stop();\n            });\n            mediaStream.getVideoTracks().forEach(function (track) {\n              track.stop();\n            });\n            errorCallback(_this.openvidu.generateAudioDeviceError(error, constraints));\n            return;\n          });\n        } else {\n          successCallback(mediaStream);\n        }\n      };\n\n      var getMediaError = function getMediaError(error) {\n        logger.error(error);\n\n        _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n\n        if (error.name === 'Error') {\n          // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n          error.name = error.constructor.name;\n        }\n\n        var errorName, errorMessage;\n\n        switch (error.name.toLowerCase()) {\n          case 'notfounderror':\n            navigator.mediaDevices.getUserMedia({\n              audio: false,\n              video: constraints.video\n            }).then(function (mediaStream) {\n              mediaStream.getVideoTracks().forEach(function (track) {\n                track.stop();\n              });\n              errorName = OpenViduError_1.OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n              errorMessage = error.toString();\n              errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            })[\"catch\"](function (e) {\n              errorName = OpenViduError_1.OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n              errorMessage = error.toString();\n              errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            });\n            break;\n\n          case 'notallowederror':\n            errorName = _this.stream.isSendScreen() ? OpenViduError_1.OpenViduErrorName.SCREEN_CAPTURE_DENIED : OpenViduError_1.OpenViduErrorName.DEVICE_ACCESS_DENIED;\n            errorMessage = error.toString();\n            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            break;\n\n          case 'overconstrainederror':\n            navigator.mediaDevices.getUserMedia({\n              audio: false,\n              video: constraints.video\n            }).then(function (mediaStream) {\n              mediaStream.getVideoTracks().forEach(function (track) {\n                track.stop();\n              });\n\n              if (error.constraint.toLowerCase() === 'deviceid') {\n                errorName = OpenViduError_1.OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                errorMessage = \"Audio input device with deviceId '\" + constraints.audio.deviceId.exact + \"' not found\";\n              } else {\n                errorName = OpenViduError_1.OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                errorMessage = \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n              }\n\n              errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            })[\"catch\"](function (e) {\n              if (error.constraint.toLowerCase() === 'deviceid') {\n                errorName = OpenViduError_1.OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                errorMessage = \"Video input device with deviceId '\" + constraints.video.deviceId.exact + \"' not found\";\n              } else {\n                errorName = OpenViduError_1.OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                errorMessage = \"Video input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n              }\n\n              errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            });\n            break;\n\n          case 'aborterror':\n          case 'notreadableerror':\n            errorName = OpenViduError_1.OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n            errorMessage = error.toString();\n            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            break;\n\n          default:\n            errorName = OpenViduError_1.OpenViduErrorName.GENERIC_ERROR;\n            errorMessage = error.toString();\n            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n            break;\n        }\n      };\n\n      _this.openvidu.generateMediaConstraints(_this.properties).then(function (myConstraints) {\n        var _a, _b;\n\n        if (!!myConstraints.videoTrack && !!myConstraints.audioTrack || !!myConstraints.audioTrack && ((_a = myConstraints.constraints) === null || _a === void 0 ? void 0 : _a.video) === false || !!myConstraints.videoTrack && ((_b = myConstraints.constraints) === null || _b === void 0 ? void 0 : _b.audio) === false) {\n          // No need to call getUserMedia at all. MediaStreamTracks already provided\n          successCallback(_this.openvidu.addAlreadyProvidedTracks(myConstraints, new MediaStream())); // Return as we do not need to process further\n\n          return;\n        }\n\n        constraints = myConstraints.constraints;\n        var outboundStreamOptions = {\n          mediaConstraints: constraints,\n          publisherProperties: _this.properties\n        };\n\n        _this.stream.setOutboundStreamOptions(outboundStreamOptions);\n\n        var definedAudioConstraint = constraints.audio === undefined ? true : constraints.audio;\n        constraintsAux.audio = _this.stream.isSendScreen() ? false : definedAudioConstraint;\n        constraintsAux.video = constraints.video;\n        startTime = Date.now();\n\n        _this.setPermissionDialogTimer(timeForDialogEvent);\n\n        if (_this.stream.isSendScreen() && navigator.mediaDevices['getDisplayMedia'] && platform.name !== 'Electron') {\n          navigator.mediaDevices['getDisplayMedia']({\n            video: true\n          }).then(function (mediaStream) {\n            _this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n\n            getMediaSuccess(mediaStream, definedAudioConstraint);\n          })[\"catch\"](function (error) {\n            getMediaError(error);\n          });\n        } else {\n          navigator.mediaDevices.getUserMedia(constraintsAux).then(function (mediaStream) {\n            _this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n\n            getMediaSuccess(mediaStream, definedAudioConstraint);\n          })[\"catch\"](function (error) {\n            getMediaError(error);\n          });\n        }\n      })[\"catch\"](function (error) {\n        errorCallback(error);\n      });\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Publisher.prototype.reestablishStreamPlayingEvent = function () {\n    if (this.ee.getListeners('streamPlaying').length > 0) {\n      this.addPlayEventToFirstVideo();\n    }\n  };\n  /* Private methods */\n\n\n  Publisher.prototype.setPermissionDialogTimer = function (waitTime) {\n    var _this = this;\n\n    this.permissionDialogTimeout = setTimeout(function () {\n      _this.emitEvent('accessDialogOpened', []);\n    }, waitTime);\n  };\n\n  Publisher.prototype.clearPermissionDialogTimer = function (startTime, waitTime) {\n    clearTimeout(this.permissionDialogTimeout);\n\n    if (Date.now() - startTime > waitTime) {\n      // Permission dialog was shown and now is closed\n      this.emitEvent('accessDialogClosed', []);\n    }\n  };\n\n  return Publisher;\n}(StreamManager_1.StreamManager);\n\nexports.Publisher = Publisher;","map":{"version":3,"sources":["../../src/OpenVidu/Publisher.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Session_1 = require(\"./Session\");\nvar Stream_1 = require(\"./Stream\");\nvar StreamManager_1 = require(\"./StreamManager\");\nvar StreamEvent_1 = require(\"../OpenViduInternal/Events/StreamEvent\");\nvar StreamPropertyChangedEvent_1 = require(\"../OpenViduInternal/Events/StreamPropertyChangedEvent\");\nvar VideoElementEvent_1 = require(\"../OpenViduInternal/Events/VideoElementEvent\");\nvar OpenViduError_1 = require(\"../OpenViduInternal/Enums/OpenViduError\");\nvar platform = require(\"platform\");\nvar OpenViduLogger_1 = require(\"../OpenViduInternal/Logger/OpenViduLogger\");\n/**\n * @hidden\n */\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Packs local media streams. Participants can publish it to a session. Initialized with [[OpenVidu.initPublisher]] method\n *\n * ### Available event listeners (and events dispatched)\n *\n * - accessAllowed\n * - accessDenied\n * - accessDialogOpened\n * - accessDialogClosed\n * - streamCreated ([[StreamEvent]])\n * - streamDestroyed ([[StreamEvent]])\n * - streamPropertyChanged ([[StreamPropertyChangedEvent]])\n */\nvar Publisher = /** @class */ (function (_super) {\n    __extends(Publisher, _super);\n    /**\n     * @hidden\n     */\n    function Publisher(targEl, properties, openvidu) {\n        var _this = _super.call(this, new Stream_1.Stream((!!openvidu.session) ? openvidu.session : new Session_1.Session(openvidu), { publisherProperties: properties, mediaConstraints: {} }), targEl) || this;\n        /**\n         * Whether the Publisher has been granted access to the requested input devices or not\n         */\n        _this.accessAllowed = false;\n        /**\n         * Whether you have called [[Publisher.subscribeToRemote]] with value `true` or `false` (*false* by default)\n         */\n        _this.isSubscribedToRemote = false;\n        _this.accessDenied = false;\n        _this.properties = properties;\n        _this.openvidu = openvidu;\n        _this.stream.ee.on('local-stream-destroyed', function (reason) {\n            _this.stream.isLocalStreamPublished = false;\n            var streamEvent = new StreamEvent_1.StreamEvent(true, _this, 'streamDestroyed', _this.stream, reason);\n            _this.emitEvent('streamDestroyed', [streamEvent]);\n            streamEvent.callDefaultBehavior();\n        });\n        return _this;\n    }\n    /**\n     * Publish or unpublish the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The [[Publisher]] object of the local participant will also dispatch the exact same event\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"audioActive\"` and `reason` set to `\"publishAudio\"`\n     * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See [[StreamPropertyChangedEvent]] to learn more.\n     *\n     * @param value `true` to publish the audio stream, `false` to unpublish it\n     */\n    Publisher.prototype.publishAudio = function (value) {\n        var _this = this;\n        if (this.stream.audioActive !== value) {\n            var affectedMediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote : this.stream.getMediaStream();\n            affectedMediaStream.getAudioTracks().forEach(function (track) {\n                track.enabled = value;\n            });\n            if (!!this.session && !!this.stream.streamId) {\n                this.session.openvidu.sendRequest('streamPropertyChanged', {\n                    streamId: this.stream.streamId,\n                    property: 'audioActive',\n                    newValue: value,\n                    reason: 'publishAudio'\n                }, function (error, response) {\n                    if (error) {\n                        logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                    }\n                    else {\n                        _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'audioActive', value, !value, 'publishAudio')]);\n                        _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'audioActive', value, !value, 'publishAudio')]);\n                    }\n                });\n            }\n            this.stream.audioActive = value;\n            logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its audio stream');\n        }\n    };\n    /**\n     * Publish or unpublish the video stream (if available). Calling this method twice in a row passing same value will have no effect\n     *\n     * #### Events dispatched\n     *\n     * > _Only if `Session.publish(Publisher)` has been called for this Publisher_\n     *\n     * The [[Session]] object of the local participant will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The [[Publisher]] object of the local participant will also dispatch the exact same event\n     *\n     * The [[Session]] object of every other participant connected to the session will dispatch a `streamPropertyChanged` event with `changedProperty` set to `\"videoActive\"` and `reason` set to `\"publishVideo\"`\n     * The respective [[Subscriber]] object of every other participant receiving this Publisher's stream will also dispatch the exact same event\n     *\n     * See [[StreamPropertyChangedEvent]] to learn more.\n     *\n     * @param value `true` to publish the video stream, `false` to unpublish it\n     */\n    Publisher.prototype.publishVideo = function (value) {\n        var _this = this;\n        if (this.stream.videoActive !== value) {\n            var affectedMediaStream = this.stream.displayMyRemote() ? this.stream.localMediaStreamWhenSubscribedToRemote : this.stream.getMediaStream();\n            affectedMediaStream.getVideoTracks().forEach(function (track) {\n                track.enabled = value;\n            });\n            if (!!this.session && !!this.stream.streamId) {\n                this.session.openvidu.sendRequest('streamPropertyChanged', {\n                    streamId: this.stream.streamId,\n                    property: 'videoActive',\n                    newValue: value,\n                    reason: 'publishVideo'\n                }, function (error, response) {\n                    if (error) {\n                        logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                    }\n                    else {\n                        _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'videoActive', value, !value, 'publishVideo')]);\n                        _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'videoActive', value, !value, 'publishVideo')]);\n                    }\n                });\n            }\n            this.stream.videoActive = value;\n            logger.info(\"'Publisher' has \" + (value ? 'published' : 'unpublished') + ' its video stream');\n        }\n    };\n    /**\n     * Call this method before [[Session.publish]] if you prefer to subscribe to your Publisher's remote stream instead of using the local stream, as any other user would do.\n     */\n    Publisher.prototype.subscribeToRemote = function (value) {\n        value = (value !== undefined) ? value : true;\n        this.isSubscribedToRemote = value;\n        this.stream.subscribeToMyRemote(value);\n    };\n    /**\n     * See [[EventDispatcher.on]]\n     */\n    Publisher.prototype.on = function (type, handler) {\n        var _this = this;\n        _super.prototype.on.call(this, type, handler);\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            }\n            else {\n                this.stream.ee.on('stream-created-by-publisher', function () {\n                    _this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, _this, 'streamCreated', _this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'remoteVideoPlaying') {\n            if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    };\n    /**\n     * See [[EventDispatcher.once]]\n     */\n    Publisher.prototype.once = function (type, handler) {\n        var _this = this;\n        _super.prototype.once.call(this, type, handler);\n        if (type === 'streamCreated') {\n            if (!!this.stream && this.stream.isLocalStreamPublished) {\n                this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, this, 'streamCreated', this.stream, '')]);\n            }\n            else {\n                this.stream.ee.once('stream-created-by-publisher', function () {\n                    _this.emitEvent('streamCreated', [new StreamEvent_1.StreamEvent(false, _this, 'streamCreated', _this.stream, '')]);\n                });\n            }\n        }\n        if (type === 'remoteVideoPlaying') {\n            if (this.stream.displayMyRemote() && this.videos[0] && this.videos[0].video &&\n                this.videos[0].video.currentTime > 0 &&\n                this.videos[0].video.paused === false &&\n                this.videos[0].video.ended === false &&\n                this.videos[0].video.readyState === 4) {\n                this.emitEvent('remoteVideoPlaying', [new VideoElementEvent_1.VideoElementEvent(this.videos[0].video, this, 'remoteVideoPlaying')]);\n            }\n        }\n        if (type === 'accessAllowed') {\n            if (this.accessAllowed) {\n                this.emitEvent('accessAllowed', []);\n            }\n        }\n        if (type === 'accessDenied') {\n            if (this.accessDenied) {\n                this.emitEvent('accessDenied', []);\n            }\n        }\n        return this;\n    };\n    /**\n     * Replaces the current video or audio track with a different one. This allows you to replace an ongoing track with a different one\n     * without having to renegotiate the whole WebRTC connection (that is, initializing a new Publisher, unpublishing the previous one\n     * and publishing the new one).\n     *\n     * You can get this new MediaStreamTrack by using the native Web API or simply with [[OpenVidu.getUserMedia]] method.\n     *\n     * **WARNING: this method has been proven to work, but there may be some combinations of published/replaced tracks that may be incompatible between them and break the connection in OpenVidu Server. A complete renegotiation may be the only solution in this case**\n     *\n     * @param track The [MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack) object to replace the current one. If it is an audio track, the current audio track will be the replaced one. If it\n     * is a video track, the current video track will be the replaced one.\n     *\n     * @returns A Promise (to which you can optionally subscribe to) that is resolved if the track was successfully replaced and rejected with an Error object in other case\n     */\n    Publisher.prototype.replaceTrack = function (track) {\n        var _this = this;\n        var replaceMediaStreamTrack = function () {\n            var mediaStream = _this.stream.displayMyRemote() ? _this.stream.localMediaStreamWhenSubscribedToRemote : _this.stream.getMediaStream();\n            var removedTrack;\n            if (track.kind === 'video') {\n                removedTrack = mediaStream.getVideoTracks()[0];\n            }\n            else {\n                removedTrack = mediaStream.getAudioTracks()[0];\n            }\n            mediaStream.removeTrack(removedTrack);\n            removedTrack.stop();\n            mediaStream.addTrack(track);\n        };\n        return new Promise(function (resolve, reject) {\n            if (_this.stream.isLocalStreamPublished) {\n                // Only if the Publisher has been published is necessary to call native Web API RTCRtpSender.replaceTrack\n                var senders = _this.stream.getRTCPeerConnection().getSenders();\n                var sender = void 0;\n                if (track.kind === 'video') {\n                    sender = senders.find(function (s) { return !!s.track && s.track.kind === 'video'; });\n                    if (!sender) {\n                        reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'));\n                    }\n                }\n                else if (track.kind === 'audio') {\n                    sender = senders.find(function (s) { return !!s.track && s.track.kind === 'audio'; });\n                    if (!sender) {\n                        reject(new Error('There\\'s no replaceable track for that kind of MediaStreamTrack in this Publisher object'));\n                    }\n                }\n                else {\n                    reject(new Error('Unknown track kind ' + track.kind));\n                }\n                sender.replaceTrack(track).then(function () {\n                    replaceMediaStreamTrack();\n                    resolve();\n                })[\"catch\"](function (error) {\n                    reject(error);\n                });\n            }\n            else {\n                // Publisher not published. Simply modify local MediaStream tracks\n                replaceMediaStreamTrack();\n                resolve();\n            }\n        });\n    };\n    /* Hidden methods */\n    /**\n     * @hidden\n     */\n    Publisher.prototype.initialize = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var constraints = {};\n            var constraintsAux = {};\n            var timeForDialogEvent = 1250;\n            var startTime;\n            var errorCallback = function (openViduError) {\n                _this.accessDenied = true;\n                _this.accessAllowed = false;\n                reject(openViduError);\n            };\n            var successCallback = function (mediaStream) {\n                _this.accessAllowed = true;\n                _this.accessDenied = false;\n                if (typeof MediaStreamTrack !== 'undefined' && _this.properties.audioSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getAudioTracks()[0]);\n                    mediaStream.addTrack(_this.properties.audioSource);\n                }\n                if (typeof MediaStreamTrack !== 'undefined' && _this.properties.videoSource instanceof MediaStreamTrack) {\n                    mediaStream.removeTrack(mediaStream.getVideoTracks()[0]);\n                    mediaStream.addTrack(_this.properties.videoSource);\n                }\n                // Apply PublisherProperties.publishAudio and PublisherProperties.publishVideo\n                if (!!mediaStream.getAudioTracks()[0]) {\n                    var enabled = (_this.stream.audioActive !== undefined && _this.stream.audioActive !== null) ? _this.stream.audioActive : !!_this.stream.outboundStreamOpts.publisherProperties.publishAudio;\n                    mediaStream.getAudioTracks()[0].enabled = enabled;\n                }\n                if (!!mediaStream.getVideoTracks()[0]) {\n                    var enabled = (_this.stream.videoActive !== undefined && _this.stream.videoActive !== null) ? _this.stream.videoActive : !!_this.stream.outboundStreamOpts.publisherProperties.publishVideo;\n                    mediaStream.getVideoTracks()[0].enabled = enabled;\n                }\n                _this.videoReference = document.createElement('video');\n                if (platform.name === 'Safari') {\n                    _this.videoReference.setAttribute('playsinline', 'true');\n                }\n                _this.stream.setMediaStream(mediaStream);\n                if (!!_this.firstVideoElement) {\n                    _this.createVideoElement(_this.firstVideoElement.targetElement, _this.properties.insertMode);\n                }\n                _this.videoReference.srcObject = mediaStream;\n                if (!_this.stream.displayMyRemote()) {\n                    // When we are subscribed to our remote we don't still set the MediaStream object in the video elements to\n                    // avoid early 'streamPlaying' event\n                    _this.stream.updateMediaStreamInVideos();\n                }\n                delete _this.firstVideoElement;\n                if (_this.stream.isSendVideo()) {\n                    if (!_this.stream.isSendScreen()) {\n                        if (platform['isIonicIos'] || platform.name === 'Safari') {\n                            // iOS Ionic or Safari. Limitation: cannot set videoDimensions directly, as the videoReference is not loaded\n                            // if not added to DOM. Must add it to DOM and wait for videoWidth and videoHeight properties to be defined\n                            _this.videoReference.style.display = 'none';\n                            document.body.appendChild(_this.videoReference);\n                            var videoDimensionsSet_1 = function () {\n                                _this.stream.videoDimensions = {\n                                    width: _this.videoReference.videoWidth,\n                                    height: _this.videoReference.videoHeight\n                                };\n                                _this.stream.isLocalStreamReadyToPublish = true;\n                                _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                                document.body.removeChild(_this.videoReference);\n                            };\n                            var interval_1;\n                            _this.videoReference.addEventListener('loadedmetadata', function () {\n                                if (_this.videoReference.videoWidth === 0) {\n                                    interval_1 = setInterval(function () {\n                                        if (_this.videoReference.videoWidth !== 0) {\n                                            clearInterval(interval_1);\n                                            videoDimensionsSet_1();\n                                        }\n                                    }, 40);\n                                }\n                                else {\n                                    videoDimensionsSet_1();\n                                }\n                            });\n                        }\n                        else {\n                            // Rest of platforms\n                            // With no screen share, video dimension can be set directly from MediaStream (getSettings)\n                            // Orientation must be checked for mobile devices (width and height are reversed)\n                            var _a = mediaStream.getVideoTracks()[0].getSettings(), width = _a.width, height = _a.height;\n                            if ((platform.os.family === 'iOS' || platform.os.family === 'Android') && (window.innerHeight > window.innerWidth)) {\n                                // Mobile portrait mode\n                                _this.stream.videoDimensions = {\n                                    width: height || 0,\n                                    height: width || 0\n                                };\n                            }\n                            else {\n                                _this.stream.videoDimensions = {\n                                    width: width || 0,\n                                    height: height || 0\n                                };\n                            }\n                            _this.stream.isLocalStreamReadyToPublish = true;\n                            _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                        }\n                    }\n                    else {\n                        // With screen share, video dimension must be got from a video element (onloadedmetadata event)\n                        _this.videoReference.addEventListener('loadedmetadata', function () {\n                            _this.stream.videoDimensions = {\n                                width: _this.videoReference.videoWidth,\n                                height: _this.videoReference.videoHeight\n                            };\n                            _this.screenShareResizeInterval = setInterval(function () {\n                                var firefoxSettings = mediaStream.getVideoTracks()[0].getSettings();\n                                var newWidth = (platform.name === 'Chrome' || platform.name === 'Opera') ? _this.videoReference.videoWidth : firefoxSettings.width;\n                                var newHeight = (platform.name === 'Chrome' || platform.name === 'Opera') ? _this.videoReference.videoHeight : firefoxSettings.height;\n                                if (_this.stream.isLocalStreamPublished &&\n                                    (newWidth !== _this.stream.videoDimensions.width ||\n                                        newHeight !== _this.stream.videoDimensions.height)) {\n                                    var oldValue_1 = { width: _this.stream.videoDimensions.width, height: _this.stream.videoDimensions.height };\n                                    _this.stream.videoDimensions = {\n                                        width: newWidth || 0,\n                                        height: newHeight || 0\n                                    };\n                                    _this.session.openvidu.sendRequest('streamPropertyChanged', {\n                                        streamId: _this.stream.streamId,\n                                        property: 'videoDimensions',\n                                        newValue: JSON.stringify(_this.stream.videoDimensions),\n                                        reason: 'screenResized'\n                                    }, function (error, response) {\n                                        if (error) {\n                                            logger.error(\"Error sending 'streamPropertyChanged' event\", error);\n                                        }\n                                        else {\n                                            _this.session.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this.session, _this.stream, 'videoDimensions', _this.stream.videoDimensions, oldValue_1, 'screenResized')]);\n                                            _this.emitEvent('streamPropertyChanged', [new StreamPropertyChangedEvent_1.StreamPropertyChangedEvent(_this, _this.stream, 'videoDimensions', _this.stream.videoDimensions, oldValue_1, 'screenResized')]);\n                                        }\n                                    });\n                                }\n                            }, 500);\n                            _this.stream.isLocalStreamReadyToPublish = true;\n                            _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                        });\n                    }\n                }\n                else {\n                    _this.stream.isLocalStreamReadyToPublish = true;\n                    _this.stream.ee.emitEvent('stream-ready-to-publish', []);\n                }\n                resolve();\n            };\n            var getMediaSuccess = function (mediaStream, definedAudioConstraint) {\n                _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (_this.stream.isSendScreen() && _this.stream.isSendAudio()) {\n                    // When getting desktop as user media audio constraint must be false. Now we can ask for it if required\n                    constraintsAux.audio = definedAudioConstraint;\n                    constraintsAux.video = false;\n                    startTime = Date.now();\n                    _this.setPermissionDialogTimer(timeForDialogEvent);\n                    navigator.mediaDevices.getUserMedia(constraintsAux)\n                        .then(function (audioOnlyStream) {\n                        _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                        mediaStream.addTrack(audioOnlyStream.getAudioTracks()[0]);\n                        successCallback(mediaStream);\n                    })[\"catch\"](function (error) {\n                        _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                        mediaStream.getAudioTracks().forEach(function (track) {\n                            track.stop();\n                        });\n                        mediaStream.getVideoTracks().forEach(function (track) {\n                            track.stop();\n                        });\n                        errorCallback(_this.openvidu.generateAudioDeviceError(error, constraints));\n                        return;\n                    });\n                }\n                else {\n                    successCallback(mediaStream);\n                }\n            };\n            var getMediaError = function (error) {\n                logger.error(error);\n                _this.clearPermissionDialogTimer(startTime, timeForDialogEvent);\n                if (error.name === 'Error') {\n                    // Safari OverConstrainedError has as name property 'Error' instead of 'OverConstrainedError'\n                    error.name = error.constructor.name;\n                }\n                var errorName, errorMessage;\n                switch (error.name.toLowerCase()) {\n                    case 'notfounderror':\n                        navigator.mediaDevices.getUserMedia({\n                            audio: false,\n                            video: constraints.video\n                        })\n                            .then(function (mediaStream) {\n                            mediaStream.getVideoTracks().forEach(function (track) {\n                                track.stop();\n                            });\n                            errorName = OpenViduError_1.OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                            errorMessage = error.toString();\n                            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        })[\"catch\"](function (e) {\n                            errorName = OpenViduError_1.OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                            errorMessage = error.toString();\n                            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        });\n                        break;\n                    case 'notallowederror':\n                        errorName = _this.stream.isSendScreen() ? OpenViduError_1.OpenViduErrorName.SCREEN_CAPTURE_DENIED : OpenViduError_1.OpenViduErrorName.DEVICE_ACCESS_DENIED;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        break;\n                    case 'overconstrainederror':\n                        navigator.mediaDevices.getUserMedia({\n                            audio: false,\n                            video: constraints.video\n                        })\n                            .then(function (mediaStream) {\n                            mediaStream.getVideoTracks().forEach(function (track) {\n                                track.stop();\n                            });\n                            if (error.constraint.toLowerCase() === 'deviceid') {\n                                errorName = OpenViduError_1.OpenViduErrorName.INPUT_AUDIO_DEVICE_NOT_FOUND;\n                                errorMessage = \"Audio input device with deviceId '\" + constraints.audio.deviceId.exact + \"' not found\";\n                            }\n                            else {\n                                errorName = OpenViduError_1.OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                errorMessage = \"Audio input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                            }\n                            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        })[\"catch\"](function (e) {\n                            if (error.constraint.toLowerCase() === 'deviceid') {\n                                errorName = OpenViduError_1.OpenViduErrorName.INPUT_VIDEO_DEVICE_NOT_FOUND;\n                                errorMessage = \"Video input device with deviceId '\" + constraints.video.deviceId.exact + \"' not found\";\n                            }\n                            else {\n                                errorName = OpenViduError_1.OpenViduErrorName.PUBLISHER_PROPERTIES_ERROR;\n                                errorMessage = \"Video input device doesn't support the value passed for constraint '\" + error.constraint + \"'\";\n                            }\n                            errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        });\n                        break;\n                    case 'aborterror':\n                    case 'notreadableerror':\n                        errorName = OpenViduError_1.OpenViduErrorName.DEVICE_ALREADY_IN_USE;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        break;\n                    default:\n                        errorName = OpenViduError_1.OpenViduErrorName.GENERIC_ERROR;\n                        errorMessage = error.toString();\n                        errorCallback(new OpenViduError_1.OpenViduError(errorName, errorMessage));\n                        break;\n                }\n            };\n            _this.openvidu.generateMediaConstraints(_this.properties)\n                .then(function (myConstraints) {\n                var _a, _b;\n                if (!!myConstraints.videoTrack && !!myConstraints.audioTrack ||\n                    !!myConstraints.audioTrack && ((_a = myConstraints.constraints) === null || _a === void 0 ? void 0 : _a.video) === false ||\n                    !!myConstraints.videoTrack && ((_b = myConstraints.constraints) === null || _b === void 0 ? void 0 : _b.audio) === false) {\n                    // No need to call getUserMedia at all. MediaStreamTracks already provided\n                    successCallback(_this.openvidu.addAlreadyProvidedTracks(myConstraints, new MediaStream()));\n                    // Return as we do not need to process further\n                    return;\n                }\n                constraints = myConstraints.constraints;\n                var outboundStreamOptions = {\n                    mediaConstraints: constraints,\n                    publisherProperties: _this.properties\n                };\n                _this.stream.setOutboundStreamOptions(outboundStreamOptions);\n                var definedAudioConstraint = ((constraints.audio === undefined) ? true : constraints.audio);\n                constraintsAux.audio = _this.stream.isSendScreen() ? false : definedAudioConstraint;\n                constraintsAux.video = constraints.video;\n                startTime = Date.now();\n                _this.setPermissionDialogTimer(timeForDialogEvent);\n                if (_this.stream.isSendScreen() && navigator.mediaDevices['getDisplayMedia'] && platform.name !== 'Electron') {\n                    navigator.mediaDevices['getDisplayMedia']({ video: true })\n                        .then(function (mediaStream) {\n                        _this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                        getMediaSuccess(mediaStream, definedAudioConstraint);\n                    })[\"catch\"](function (error) {\n                        getMediaError(error);\n                    });\n                }\n                else {\n                    navigator.mediaDevices.getUserMedia(constraintsAux)\n                        .then(function (mediaStream) {\n                        _this.openvidu.addAlreadyProvidedTracks(myConstraints, mediaStream);\n                        getMediaSuccess(mediaStream, definedAudioConstraint);\n                    })[\"catch\"](function (error) {\n                        getMediaError(error);\n                    });\n                }\n            })[\"catch\"](function (error) {\n                errorCallback(error);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    Publisher.prototype.reestablishStreamPlayingEvent = function () {\n        if (this.ee.getListeners('streamPlaying').length > 0) {\n            this.addPlayEventToFirstVideo();\n        }\n    };\n    /* Private methods */\n    Publisher.prototype.setPermissionDialogTimer = function (waitTime) {\n        var _this = this;\n        this.permissionDialogTimeout = setTimeout(function () {\n            _this.emitEvent('accessDialogOpened', []);\n        }, waitTime);\n    };\n    Publisher.prototype.clearPermissionDialogTimer = function (startTime, waitTime) {\n        clearTimeout(this.permissionDialogTimeout);\n        if ((Date.now() - startTime) > waitTime) {\n            // Permission dialog was shown and now is closed\n            this.emitEvent('accessDialogClosed', []);\n        }\n    };\n    return Publisher;\n}(StreamManager_1.StreamManager));\nexports.Publisher = Publisher;\n//# sourceMappingURL=Publisher.js.map"]},"metadata":{},"sourceType":"script"}