{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar StreamManager_1 = require(\"./StreamManager\");\n/**\n * Packs remote media streams. Participants automatically receive them when others publish their streams. Initialized with [[Session.subscribe]] method\n */\n\n\nvar Subscriber =\n/** @class */\nfunction (_super) {\n  __extends(Subscriber, _super);\n  /**\n   * @hidden\n   */\n\n\n  function Subscriber(stream, targEl, properties) {\n    var _this = _super.call(this, stream, targEl) || this;\n\n    _this.element = _this.targetElement;\n    _this.stream = stream;\n    _this.properties = properties;\n    return _this;\n  }\n  /**\n   * Subscribe or unsubscribe from the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n   * @param value `true` to subscribe to the audio stream, `false` to unsubscribe from it\n   */\n\n\n  Subscriber.prototype.subscribeToAudio = function (value) {\n    this.stream.getMediaStream().getAudioTracks().forEach(function (track) {\n      track.enabled = value;\n    });\n    console.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its audio stream');\n    return this;\n  };\n  /**\n   * Subscribe or unsubscribe from the video stream (if available). Calling this method twice in a row passing same value will have no effect\n   * @param value `true` to subscribe to the video stream, `false` to unsubscribe from it\n   */\n\n\n  Subscriber.prototype.subscribeToVideo = function (value) {\n    this.stream.getMediaStream().getVideoTracks().forEach(function (track) {\n      track.enabled = value;\n    });\n    console.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its video stream');\n    return this;\n  };\n\n  return Subscriber;\n}(StreamManager_1.StreamManager);\n\nexports.Subscriber = Subscriber;","map":{"version":3,"sources":["../../src/OpenVidu/Subscriber.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;AAIA;;;;;AAGA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;AAO5B;;;;;AAGA,WAAA,UAAA,CAAY,MAAZ,EAA4B,MAA5B,EAA0D,UAA1D,EAA0F;AAA1F,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,MAAd,KAAqB,IADzB;;AAEI,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,aAApB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;AACA,IAAA,KAAI,CAAC,UAAL,GAAkB,UAAlB;;AACH;AAED;;;;;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,KAAjB,EAA+B;AAC3B,SAAK,MAAL,CAAY,cAAZ,GAA6B,cAA7B,GAA8C,OAA9C,CAAsD,UAAC,KAAD,EAAM;AACxD,MAAA,KAAK,CAAC,OAAN,GAAgB,KAAhB;AACH,KAFD;AAGA,IAAA,OAAO,CAAC,IAAR,CAAa,uBAAuB,KAAK,GAAG,eAAH,GAAqB,mBAAjD,IAAwE,mBAArF;AACA,WAAO,IAAP;AACH,GAND;AAQA;;;;;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,KAAjB,EAA+B;AAC3B,SAAK,MAAL,CAAY,cAAZ,GAA6B,cAA7B,GAA8C,OAA9C,CAAsD,UAAC,KAAD,EAAM;AACxD,MAAA,KAAK,CAAC,OAAN,GAAgB,KAAhB;AACH,KAFD;AAGA,IAAA,OAAO,CAAC,IAAR,CAAa,uBAAuB,KAAK,GAAG,eAAH,GAAqB,mBAAjD,IAAwE,mBAArF;AACA,WAAO,IAAP;AACH,GAND;;AAQJ,SAAA,UAAA;AAAC,CAzCD,CAAgC,eAAA,CAAA,aAAhC,CAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar StreamManager_1 = require(\"./StreamManager\");\n/**\n * Packs remote media streams. Participants automatically receive them when others publish their streams. Initialized with [[Session.subscribe]] method\n */\nvar Subscriber = /** @class */ (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @hidden\n     */\n    function Subscriber(stream, targEl, properties) {\n        var _this = _super.call(this, stream, targEl) || this;\n        _this.element = _this.targetElement;\n        _this.stream = stream;\n        _this.properties = properties;\n        return _this;\n    }\n    /**\n     * Subscribe or unsubscribe from the audio stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the audio stream, `false` to unsubscribe from it\n     */\n    Subscriber.prototype.subscribeToAudio = function (value) {\n        this.stream.getMediaStream().getAudioTracks().forEach(function (track) {\n            track.enabled = value;\n        });\n        console.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its audio stream');\n        return this;\n    };\n    /**\n     * Subscribe or unsubscribe from the video stream (if available). Calling this method twice in a row passing same value will have no effect\n     * @param value `true` to subscribe to the video stream, `false` to unsubscribe from it\n     */\n    Subscriber.prototype.subscribeToVideo = function (value) {\n        this.stream.getMediaStream().getVideoTracks().forEach(function (track) {\n            track.enabled = value;\n        });\n        console.info(\"'Subscriber' has \" + (value ? 'subscribed to' : 'unsubscribed from') + ' its video stream');\n        return this;\n    };\n    return Subscriber;\n}(StreamManager_1.StreamManager));\nexports.Subscriber = Subscriber;\n//# sourceMappingURL=Subscriber.js.map"]},"metadata":{},"sourceType":"script"}