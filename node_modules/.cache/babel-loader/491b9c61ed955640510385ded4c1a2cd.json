{"ast":null,"code":"import _toConsumableArray from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/src/Component/Chat/chat.js\";\nimport $ from 'jquery';\nimport Messages from './messageList';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport React, { Component } from 'react';\nimport MessageList from './messageList';\nimport OnlineList from './online-list';\nimport Rooms from './rooms';\nimport './chat.css';\n\nvar chat = /*#__PURE__*/function (_Component) {\n  _inherits(chat, _Component);\n\n  var _super = _createSuper(chat);\n\n  function chat(props) {\n    var _this;\n\n    _classCallCheck(this, chat);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: [],\n      // danh sách tin nhắn\n      user: {\n        id: '',\n        name: ''\n      },\n      // người dùng hiện tại, nếu rỗng sẽ hiển thị form login, có sẽ hiển thị phòng chat\n      userOnline: [],\n      // danh sách người dùng đang online\n      room: []\n    };\n    _this.socket = null;\n    return _this;\n  }\n\n  _createClass(chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      console.log(this.state.user);\n      this.socket = io('localhost:3001');\n      this.socket.on('newMessage', function (response) {\n        _this2.newMessage(response);\n      }); //lắng nghe khi có tin nhắn mới\n\n      this.socket.on('loginFail', function (response) {\n        alert('Tên đã có người sử dụng');\n      }); //login fail\n\n      this.socket.on('loginSuccess', function (response) {\n        _this2.setState({\n          user: {\n            id: _this2.socket.id,\n            name: response.data\n          },\n          messages: response.messages\n        });\n      }); //đăng nhập thành công \n\n      this.socket.on('updateUesrList', function (response) {\n        _this2.setState({\n          userOnline: response\n        });\n      }); //update lại danh sách người dùng online khi có người đăng nhập hoặc đăng xuất\n    } //Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\n\n  }, {\n    key: \"newMessage\",\n    value: function newMessage(m) {\n      var messages = this.state.messages;\n\n      var ids = _map(messages, 'id');\n\n      var max = Math.max.apply(Math, _toConsumableArray(ids));\n      messages.push({\n        id: max + 1,\n        userId: m.user.id,\n        message: m.data,\n        userName: m.user.name,\n        timeM: m.timeM\n      });\n      var objMessage = $('.messages');\n\n      if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight) {\n        this.setState({\n          messages\n        });\n        objMessage.animate({\n          scrollTop: objMessage.prop('scrollHeight')\n        }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n      } else {\n        this.setState({\n          messages\n        });\n\n        if (m.id === this.state.user) {\n          objMessage.animate({\n            scrollTop: objMessage.prop('scrollHeight')\n          }, 300);\n        }\n      }\n    } //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn và người gửi\n\n  }, {\n    key: \"sendnewMessage\",\n    value: function sendnewMessage(m) {\n      if (m.value) {\n        var today = new Date();\n        var timeM = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \" || \" + today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n        this.socket.emit(\"newMessage\", {\n          data: m.value,\n          user: this.state.user,\n          timeM\n        }); //gửi event về server\n\n        m.value = \"\";\n      }\n    } //login để định danh người dùng\n\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.socket.emit(\"login\", this.refs.name.value);\n    }\n  }, {\n    key: \"create_room\",\n    value: function create_room() {\n      this.socket.emit(\"createRoom\", {\n        room: this.refs.room_name.value,\n        user: this.state.user\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          marginLeft: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, \"chat box\"), this.state.user.id && this.state.user.name ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"create_room_form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"room_form\",\n        ref: \"room_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        name: \"\",\n        value: \"Create\",\n        onClick: this.create_room.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat_window\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"user-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, this.state.user.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, \"Online\"), this.state.userOnline.map(function (item) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 39\n          }\n        }, item.name));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        user: this.state.user,\n        messages: this.state.messages,\n        typing: this.state.typing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        sendMessage: this.sendnewMessage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container bootstrap snippet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Rooms, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(MessageList, {\n        messages: this.state.messages,\n        user: this.state.user,\n        typing: this.state.typing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        sendMessage: this.sendnewMessage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(OnlineList, {\n        userOnline: this.state.userOnline,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      })))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login_form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"userName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \"Enter user name.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ref: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        name: \"\",\n        value: \"Login\",\n        onClick: this.login.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return chat;\n}(Component);\n\nexport default chat;","map":{"version":3,"sources":["/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/Code/FrontEnd/baitaplon_frontend/src/Component/Chat/chat.js"],"names":["$","Messages","Input","_map","io","React","Component","MessageList","OnlineList","Rooms","chat","props","state","messages","user","id","name","userOnline","room","socket","console","log","on","response","newMessage","alert","setState","data","m","ids","max","Math","push","userId","message","userName","timeM","objMessage","scrollHeight","scrollTop","clientHeight","animate","prop","value","today","Date","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","emit","refs","room_name","marginLeft","create_room","bind","map","item","typing","sendnewMessage","login"],"mappings":"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","sourcesContent":["\nimport $ from 'jquery';\nimport Messages from './messageList';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport React, { Component } from 'react';\nimport MessageList from './messageList';\nimport OnlineList from './online-list';\nimport Rooms from './rooms';\nimport './chat.css';\n\nclass chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [], // danh sách tin nhắn\n      user: { id: '', name: '' },// người dùng hiện tại, nếu rỗng sẽ hiển thị form login, có sẽ hiển thị phòng chat\n      userOnline: [], // danh sách người dùng đang online\n      room: []\n\n    }\n    this.socket = null;\n  }\n  componentWillMount() {\n    console.log(this.state.user)\n    this.socket = io('localhost:3001');\n    this.socket.on('newMessage', (response) => { this.newMessage(response) }); //lắng nghe khi có tin nhắn mới\n    this.socket.on('loginFail', (response) => { alert('Tên đã có người sử dụng') }); //login fail\n    this.socket.on('loginSuccess', (response) => { this.setState({ user: { id: this.socket.id, name: response.data }, messages: response.messages }) }); //đăng nhập thành công \n    this.socket.on('updateUesrList', (response) => { this.setState({ userOnline: response }) }); //update lại danh sách người dùng online khi có người đăng nhập hoặc đăng xuất\n\n  }\n  //Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\n  newMessage(m) {\n    const messages = this.state.messages;\n    let ids = _map(messages, 'id');\n    let max = Math.max(...ids);\n\n    messages.push({\n      id: max + 1,\n      userId: m.user.id,\n      message: m.data,\n      userName: m.user.name,\n      timeM: m.timeM\n    });\n\n    let objMessage = $('.messages');\n    if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight) {\n      this.setState({ messages });\n      objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n\n    } else {\n      this.setState({ messages });\n      if (m.id === this.state.user) {\n        objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\n      }\n    }\n  }\n  //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn và người gửi\n  sendnewMessage(m) {\n    if (m.value) {\n      let today = new Date();\n      let timeM = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \" || \" + today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n      this.socket.emit(\"newMessage\", { data: m.value, user: this.state.user, timeM }); //gửi event về server\n      m.value = \"\";\n    }\n  }\n  //login để định danh người dùng\n  login() {\n\n    this.socket.emit(\"login\", this.refs.name.value);\n\n  }\n\n  create_room() {\n    this.socket.emit(\"createRoom\",{room: this.refs.room_name.value,user:this.state.user});\n  }\n\n  render() {\n    return (\n      <div className=\"app__content\">\n        <h1 style={{ marginLeft: 100 }} >chat box</h1>\n        {/* kiểm tra xem user đã tồn tại hay chưa, nếu tồn tại thì render form chat, chưa thì render form login */}\n        {this.state.user.id && this.state.user.name ?\n          <div>\n              {/* danh sach Room*/}\n            <div className=\"create_room_form\" >\n              <input type=\"text\" name=\"room_form\" ref=\"room_name\" ></input>\n              <input type=\"button\" name=\"\" value=\"Create\" onClick={this.create_room.bind(this)} ></input>\n            </div>\n            <div className=\"list_room\" >\n\n            </div>\n            {/*================================*/}\n            <div className=\"chat_window\">\n              {/* danh sách user online */}\n              <div className=\"menu\">\n                <ul className=\"user\">\n                  <span className=\"user-name\">{this.state.user.name}</span>\n                  <p>Online</p>\n                  {this.state.userOnline.map(item =>\n                    <li key={item.id}><span>{item.name}</span></li>\n                  )}\n                </ul>\n              </div>\n              {/* danh sách message */}\n              <div className=\"content\">\n                <Messages user={this.state.user} messages={this.state.messages} typing={this.state.typing} />\n                <Input sendMessage={this.sendnewMessage.bind(this)} />\n              </div>\n            </div>\n\n                <div className=\"container bootstrap snippet\" >\n\n                    <div className=\"row\"> \n                    {/* room list*/}\n                        <Rooms></Rooms>\n\n                    {/* selected chat*/}\n                         <div className=\"col-md-6 bg-white\">\n                             <MessageList messages ={this.state.messages} user={this.state.user} typing={this.state.typing} ></MessageList>\n                             <Input sendMessage={this.sendnewMessage.bind(this)} ></Input>\n                         </div>\n                    \n                    {/* Danh sach online*/}\n                        <OnlineList userOnline={this.state.userOnline} ></OnlineList>\n                    </div>\n                </div>\n\n          </div>\n          :\n          <div className=\"login_form\">{/* form login */}\n            <span className=\"userName\" >Enter user name.</span>\n            <input type=\"text\" name=\"name\" ref=\"name\"></input>\n            <input type=\"button\" name=\"\" value=\"Login\" onClick={this.login.bind(this)}></input>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default chat;"]},"metadata":{},"sourceType":"module"}