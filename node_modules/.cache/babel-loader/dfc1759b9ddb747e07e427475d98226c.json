{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar Event_1 = require(\"./Event\");\n\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Defines event `sessionDisconnected` dispatched by [[Session]] after the local user has left the session. This is the local version of the `connectionDestroyed` event, which is only dispatched by remote users\n */\n\nvar SessionDisconnectedEvent =\n/** @class */\nfunction (_super) {\n  __extends(SessionDisconnectedEvent, _super);\n  /**\n   * @hidden\n   */\n\n\n  function SessionDisconnectedEvent(target, reason) {\n    var _this = _super.call(this, true, target, 'sessionDisconnected') || this;\n\n    _this.reason = reason;\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  SessionDisconnectedEvent.prototype.callDefaultBehavior = function () {\n    logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n    var session = this.target; // Dispose and delete all remote Connections\n\n    for (var connectionId in session.remoteConnections) {\n      if (!!session.remoteConnections[connectionId].stream) {\n        session.remoteConnections[connectionId].stream.disposeWebRtcPeer();\n        session.remoteConnections[connectionId].stream.disposeMediaStream();\n\n        if (session.remoteConnections[connectionId].stream.streamManager) {\n          session.remoteConnections[connectionId].stream.streamManager.removeAllVideos();\n        }\n\n        delete session.remoteStreamsCreated[session.remoteConnections[connectionId].stream.streamId];\n        session.remoteConnections[connectionId].dispose();\n      }\n\n      delete session.remoteConnections[connectionId];\n    }\n  };\n\n  return SessionDisconnectedEvent;\n}(Event_1.Event);\n\nexports.SessionDisconnectedEvent = SessionDisconnectedEvent;","map":{"version":3,"sources":["../../../src/OpenViduInternal/Events/SessionDisconnectedEvent.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;AAEA;;;;;AAGA,IAAM,MAAM,GAAmB,gBAAA,CAAA,cAAA,CAAe,WAAf,EAA/B;AAGA;;;;AAGA,IAAA,wBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,wBAAA,EAAA,MAAA,CAAA;AAc1C;;;;;AAGA,WAAA,wBAAA,CAAY,MAAZ,EAA6B,MAA7B,EAA2C;AAA3C,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,MAAZ,EAAoB,qBAApB,KAA0C,IAD9C;;AAEI,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;;AACH;AAED;;;;;AAGA,EAAA,wBAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA;AAEI,IAAA,MAAM,CAAC,IAAP,CAAY,oCAAoC,KAAK,IAAzC,GAAgD,iCAA5D;AAEA,QAAM,OAAO,GAAY,KAAK,MAA9B,CAJJ,CAMI;;AACA,SAAK,IAAM,YAAX,IAA2B,OAAO,CAAC,iBAAnC,EAAsD;AAClD,UAAI,CAAC,CAAC,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAA9C,EAAsD;AAClD,QAAA,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAAxC,CAA+C,iBAA/C;AACA,QAAA,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAAxC,CAA+C,kBAA/C;;AACA,YAAI,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAAxC,CAA+C,aAAnD,EAAkE;AAC9D,UAAA,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAAxC,CAA+C,aAA/C,CAA6D,eAA7D;AACH;;AACD,eAAO,OAAO,CAAC,oBAAR,CAA6B,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,MAAxC,CAA+C,QAA5E,CAAP;AACA,QAAA,OAAO,CAAC,iBAAR,CAA0B,YAA1B,EAAwC,OAAxC;AACH;;AACD,aAAO,OAAO,CAAC,iBAAR,CAA0B,YAA1B,CAAP;AACH;AACJ,GAnBD;;AAqBJ,SAAA,wBAAA;AAAC,CA9CD,CAA8C,OAAA,CAAA,KAA9C,CAAA;;AAAa,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Event_1 = require(\"./Event\");\nvar OpenViduLogger_1 = require(\"../Logger/OpenViduLogger\");\n/**\n * @hidden\n */\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n/**\n * Defines event `sessionDisconnected` dispatched by [[Session]] after the local user has left the session. This is the local version of the `connectionDestroyed` event, which is only dispatched by remote users\n */\nvar SessionDisconnectedEvent = /** @class */ (function (_super) {\n    __extends(SessionDisconnectedEvent, _super);\n    /**\n     * @hidden\n     */\n    function SessionDisconnectedEvent(target, reason) {\n        var _this = _super.call(this, true, target, 'sessionDisconnected') || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    SessionDisconnectedEvent.prototype.callDefaultBehavior = function () {\n        logger.info(\"Calling default behavior upon '\" + this.type + \"' event dispatched by 'Session'\");\n        var session = this.target;\n        // Dispose and delete all remote Connections\n        for (var connectionId in session.remoteConnections) {\n            if (!!session.remoteConnections[connectionId].stream) {\n                session.remoteConnections[connectionId].stream.disposeWebRtcPeer();\n                session.remoteConnections[connectionId].stream.disposeMediaStream();\n                if (session.remoteConnections[connectionId].stream.streamManager) {\n                    session.remoteConnections[connectionId].stream.streamManager.removeAllVideos();\n                }\n                delete session.remoteStreamsCreated[session.remoteConnections[connectionId].stream.streamId];\n                session.remoteConnections[connectionId].dispose();\n            }\n            delete session.remoteConnections[connectionId];\n        }\n    };\n    return SessionDisconnectedEvent;\n}(Event_1.Event));\nexports.SessionDisconnectedEvent = SessionDisconnectedEvent;\n//# sourceMappingURL=SessionDisconnectedEvent.js.map"]},"metadata":{},"sourceType":"script"}