{"ast":null,"code":"var chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\nvar isFirefox = typeof window.InstallTrigger !== 'undefined';\nvar isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\nvar isChrome = !!window.chrome && !isOpera;\nwindow.addEventListener('message', function (event) {\n  if (event.origin != window.location.origin) {\n    return;\n  }\n\n  onMessageCallback(event.data);\n});\n\nfunction onMessageCallback(data) {\n  if (data == 'PermissionDeniedError') {\n    if (screenCallback) return screenCallback('PermissionDeniedError');else throw new Error('PermissionDeniedError');\n  }\n\n  if (data == 'rtcmulticonnection-extension-loaded') {\n    chromeMediaSource = 'desktop';\n  }\n\n  if (data.sourceId && screenCallback) {\n    screenCallback(sourceId = data.sourceId, data.canRequestAudioTrack === true);\n  }\n}\n\nfunction isChromeExtensionAvailable(callback) {\n  if (!callback) return;\n  if (chromeMediaSource == 'desktop') return callback(true);\n  window.postMessage('are-you-there', '*');\n  setTimeout(function () {\n    if (chromeMediaSource == 'screen') {\n      callback(false);\n    } else callback(true);\n  }, 2000);\n}\n\nfunction getSourceId(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('get-sourceId', '*');\n}\n\nfunction getCustomSourceId(arr, callback) {\n  if (!arr || !arr.forEach) throw '\"arr\" parameter is mandatory and it must be an array.';\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage({\n    'get-custom-sourceId': arr\n  }, '*');\n}\n\nfunction getSourceIdWithAudio(callback) {\n  if (!callback) throw '\"callback\" parameter is mandatory.';\n  if (sourceId) return callback(sourceId);\n  screenCallback = callback;\n  window.postMessage('audio-plus-tab', '*');\n}\n\nfunction getChromeExtensionStatus(extensionid, callback) {\n  if (isFirefox) return callback('not-chrome');\n\n  if (arguments.length != 2) {\n    callback = extensionid;\n    extensionid = 'lfcgfepafnobdloecchnfaclibenjold';\n  }\n\n  var image = document.createElement('img');\n  image.src = 'chrome-extension://' + extensionid + '/icon.png';\n\n  image.onload = function () {\n    chromeMediaSource = 'screen';\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n      if (chromeMediaSource == 'screen') {\n        callback('installed-disabled');\n      } else callback('installed-enabled');\n    }, 2000);\n  };\n\n  image.onerror = function () {\n    callback('not-installed');\n  };\n}\n\nfunction getScreenConstraintsWithAudio(callback) {\n  getScreenConstraints(callback, true);\n}\n\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n  sourceId = '';\n  var firefoxScreenConstraints = {\n    mozMediaSource: 'window',\n    mediaSource: 'window'\n  };\n  if (isFirefox) return callback(null, firefoxScreenConstraints);\n  var screen_constraints = {\n    mandatory: {\n      chromeMediaSource: chromeMediaSource,\n      maxWidth: screen.width > 1920 ? screen.width : 1920,\n      maxHeight: screen.height > 1080 ? screen.height : 1080\n    },\n    optional: []\n  };\n\n  if (chromeMediaSource == 'desktop' && !sourceId) {\n    if (captureSourceIdWithAudio) {\n      getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n\n        if (canRequestAudioTrack) {\n          screen_constraints.canRequestAudioTrack = true;\n        }\n\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    } else {\n      getSourceId(function (sourceId) {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n        callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n      });\n    }\n\n    return;\n  }\n\n  if (chromeMediaSource == 'desktop') {\n    screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n  }\n\n  callback(null, screen_constraints);\n}\n\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;","map":{"version":3,"sources":["../../../src/OpenViduInternal/ScreenSharing/Screen-Capturing.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var chromeMediaSource = 'screen';\nvar sourceId;\nvar screenCallback;\nvar isFirefox = typeof window.InstallTrigger !== 'undefined';\nvar isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\nvar isChrome = !!window.chrome && !isOpera;\nwindow.addEventListener('message', function (event) {\n    if (event.origin != window.location.origin) {\n        return;\n    }\n    onMessageCallback(event.data);\n});\nfunction onMessageCallback(data) {\n    if (data == 'PermissionDeniedError') {\n        if (screenCallback)\n            return screenCallback('PermissionDeniedError');\n        else\n            throw new Error('PermissionDeniedError');\n    }\n    if (data == 'rtcmulticonnection-extension-loaded') {\n        chromeMediaSource = 'desktop';\n    }\n    if (data.sourceId && screenCallback) {\n        screenCallback(sourceId = data.sourceId, data.canRequestAudioTrack === true);\n    }\n}\nfunction isChromeExtensionAvailable(callback) {\n    if (!callback)\n        return;\n    if (chromeMediaSource == 'desktop')\n        return callback(true);\n    window.postMessage('are-you-there', '*');\n    setTimeout(function () {\n        if (chromeMediaSource == 'screen') {\n            callback(false);\n        }\n        else\n            callback(true);\n    }, 2000);\n}\nfunction getSourceId(callback) {\n    if (!callback)\n        throw '\"callback\" parameter is mandatory.';\n    if (sourceId)\n        return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage('get-sourceId', '*');\n}\nfunction getCustomSourceId(arr, callback) {\n    if (!arr || !arr.forEach)\n        throw '\"arr\" parameter is mandatory and it must be an array.';\n    if (!callback)\n        throw '\"callback\" parameter is mandatory.';\n    if (sourceId)\n        return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage({\n        'get-custom-sourceId': arr\n    }, '*');\n}\nfunction getSourceIdWithAudio(callback) {\n    if (!callback)\n        throw '\"callback\" parameter is mandatory.';\n    if (sourceId)\n        return callback(sourceId);\n    screenCallback = callback;\n    window.postMessage('audio-plus-tab', '*');\n}\nfunction getChromeExtensionStatus(extensionid, callback) {\n    if (isFirefox)\n        return callback('not-chrome');\n    if (arguments.length != 2) {\n        callback = extensionid;\n        extensionid = 'lfcgfepafnobdloecchnfaclibenjold';\n    }\n    var image = document.createElement('img');\n    image.src = 'chrome-extension://' + extensionid + '/icon.png';\n    image.onload = function () {\n        chromeMediaSource = 'screen';\n        window.postMessage('are-you-there', '*');\n        setTimeout(function () {\n            if (chromeMediaSource == 'screen') {\n                callback('installed-disabled');\n            }\n            else\n                callback('installed-enabled');\n        }, 2000);\n    };\n    image.onerror = function () {\n        callback('not-installed');\n    };\n}\nfunction getScreenConstraintsWithAudio(callback) {\n    getScreenConstraints(callback, true);\n}\nfunction getScreenConstraints(callback, captureSourceIdWithAudio) {\n    sourceId = '';\n    var firefoxScreenConstraints = {\n        mozMediaSource: 'window',\n        mediaSource: 'window'\n    };\n    if (isFirefox)\n        return callback(null, firefoxScreenConstraints);\n    var screen_constraints = {\n        mandatory: {\n            chromeMediaSource: chromeMediaSource,\n            maxWidth: screen.width > 1920 ? screen.width : 1920,\n            maxHeight: screen.height > 1080 ? screen.height : 1080\n        },\n        optional: []\n    };\n    if (chromeMediaSource == 'desktop' && !sourceId) {\n        if (captureSourceIdWithAudio) {\n            getSourceIdWithAudio(function (sourceId, canRequestAudioTrack) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n                if (canRequestAudioTrack) {\n                    screen_constraints.canRequestAudioTrack = true;\n                }\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        else {\n            getSourceId(function (sourceId) {\n                screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n                callback(sourceId == 'PermissionDeniedError' ? sourceId : null, screen_constraints);\n            });\n        }\n        return;\n    }\n    if (chromeMediaSource == 'desktop') {\n        screen_constraints.mandatory.chromeMediaSourceId = sourceId;\n    }\n    callback(null, screen_constraints);\n}\nexports.getScreenConstraints = getScreenConstraints;\nexports.getScreenConstraintsWithAudio = getScreenConstraintsWithAudio;\nexports.isChromeExtensionAvailable = isChromeExtensionAvailable;\nexports.getChromeExtensionStatus = getChromeExtensionStatus;\nexports.getSourceId = getSourceId;\n//# sourceMappingURL=Screen-Capturing.js.map"]},"metadata":{},"sourceType":"script"}