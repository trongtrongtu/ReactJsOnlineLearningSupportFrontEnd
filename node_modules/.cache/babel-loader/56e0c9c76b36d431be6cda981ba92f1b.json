{"ast":null,"code":"import _toConsumableArray from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/src/Component/Chat/chat.js\";\nimport $ from 'jquery';\nimport Messages from './messageList';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport React, { Component } from 'react';\nimport './chat.css';\n\nvar chat = /*#__PURE__*/function (_Component) {\n  _inherits(chat, _Component);\n\n  var _super = _createSuper(chat);\n\n  function chat(props) {\n    var _this;\n\n    _classCallCheck(this, chat);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: [],\n      // danh sách tin nhắn\n      user: {\n        id: '',\n        name: ''\n      },\n      // người dùng hiện tại, nếu rỗng sẽ hiển thị form login, có sẽ hiển thị phòng chat\n      userOnline: [] // danh sách người dùng đang online\n\n    };\n    _this.socket = null;\n    return _this;\n  }\n\n  _createClass(chat, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      console.log(this.state.user);\n      this.socket = io('localhost:3001');\n      this.socket.on('newMessage', function (response) {\n        _this2.newMessage(response);\n      }); //lắng nghe khi có tin nhắn mới\n\n      this.socket.on('loginFail', function (response) {\n        alert('Tên đã có người sử dụng');\n      }); //login fail\n\n      this.socket.on('loginSuccess', function (response) {\n        _this2.setState({\n          user: {\n            id: _this2.socket.id,\n            name: response.data\n          },\n          messages: response.messages\n        });\n      }); //đăng nhập thành công \n\n      this.socket.on('updateUesrList', function (response) {\n        _this2.setState({\n          userOnline: response\n        });\n      }); //update lại danh sách người dùng online khi có người đăng nhập hoặc đăng xuất\n    } //Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\n\n  }, {\n    key: \"newMessage\",\n    value: function newMessage(m) {\n      var messages = this.state.messages;\n\n      var ids = _map(messages, 'id');\n\n      var max = Math.max.apply(Math, _toConsumableArray(ids));\n      messages.push({\n        id: max + 1,\n        userId: m.user.id,\n        message: m.data,\n        userName: m.user.name\n      });\n      var objMessage = $('.messages');\n\n      if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight) {\n        this.setState({\n          messages\n        });\n        objMessage.animate({\n          scrollTop: objMessage.prop('scrollHeight')\n        }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n      } else {\n        this.setState({\n          messages\n        });\n\n        if (m.id === this.state.user) {\n          objMessage.animate({\n            scrollTop: objMessage.prop('scrollHeight')\n          }, 300);\n        }\n      }\n    } //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn và người gửi\n\n  }, {\n    key: \"sendnewMessage\",\n    value: function sendnewMessage(m) {\n      if (m.value) {\n        this.socket.emit(\"newMessage\", {\n          data: m.value,\n          user: this.state.user\n        }); //gửi event về server\n\n        m.value = \"\";\n      }\n    } //login để định danh người dùng\n\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.socket.emit(\"login\", this.refs.name.value);\n    }\n  }, {\n    key: \"create_room\",\n    value: function create_room() {\n      this.socket.emit(\"createRoom\", [{\n        room: this.refs.create_room,\n        user: this.state.user\n      }]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          marginLeft: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, \"chat box\"), this.state.user.id && this.state.user.name ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"create_room_form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"room_form\",\n        ref: \"room_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        name: \"\",\n        value: \"Create\",\n        onClick: this.create_room.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list_room\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat_window\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"user-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, this.state.user.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, \"Online\"), this.state.userOnline.map(function (item) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 43\n          }\n        }, item.name));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Messages, {\n        user: this.state.user,\n        messages: this.state.messages,\n        typing: this.state.typing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        sendMessage: this.sendnewMessage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      })))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login_form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"userName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Enter user name.\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        ref: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"button\",\n        name: \"\",\n        value: \"Login\",\n        onClick: this.login.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      })));\n    }\n  }]);\n\n  return chat;\n}(Component);\n\nexport default chat;","map":{"version":3,"sources":["/media/tuanla/WORK_1/2019_2/CongNgheWeb/BTL/baitaplon/src/Component/Chat/chat.js"],"names":["$","Messages","Input","_map","io","React","Component","chat","props","state","messages","user","id","name","userOnline","socket","console","log","on","response","newMessage","alert","setState","data","m","ids","max","Math","push","userId","message","userName","objMessage","scrollHeight","scrollTop","clientHeight","animate","prop","value","emit","refs","room","create_room","marginLeft","bind","map","item","typing","sendnewMessage","login"],"mappings":";;;;;;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,YAAP;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,EADD;AACK;AACdC,MAAAA,IAAI,EAAE;AAACC,QAAAA,EAAE,EAAE,EAAL;AAASC,QAAAA,IAAI,EAAE;AAAf,OAFG;AAEgB;AACzBC,MAAAA,UAAU,EAAC,EAHF,CAGK;;AAHL,KAAX;AAMA,UAAKC,MAAL,GAAa,IAAb;AARgB;AASjB;;;;yCACoB;AAAA;;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,IAAvB;AACA,WAAKI,MAAL,GAAcX,EAAE,CAAC,gBAAD,CAAhB;AACA,WAAKW,MAAL,CAAYG,EAAZ,CAAe,YAAf,EAA6B,UAACC,QAAD,EAAc;AAAC,QAAA,MAAI,CAACC,UAAL,CAAgBD,QAAhB;AAA0B,OAAtE,EAHmB,CAGsD;;AACzE,WAAKJ,MAAL,CAAYG,EAAZ,CAAe,WAAf,EAA4B,UAACC,QAAD,EAAc;AAACE,QAAAA,KAAK,CAAC,yBAAD,CAAL;AAAiC,OAA5E,EAJmB,CAI4D;;AAC/E,WAAKN,MAAL,CAAYG,EAAZ,CAAe,cAAf,EAA+B,UAACC,QAAD,EAAc;AAAC,QAAA,MAAI,CAACG,QAAL,CAAc;AAACX,UAAAA,IAAI,EAAE;AAACC,YAAAA,EAAE,EAAE,MAAI,CAACG,MAAL,CAAYH,EAAjB;AAAqBC,YAAAA,IAAI,EAAEM,QAAQ,CAACI;AAApC,WAAP;AAAiDb,UAAAA,QAAQ,EAACS,QAAQ,CAACT;AAAnE,SAAd;AAA4F,OAA1I,EALmB,CAK0H;;AAC5I,WAAKK,MAAL,CAAYG,EAAZ,CAAe,gBAAf,EAAiC,UAACC,QAAD,EAAc;AAAC,QAAA,MAAI,CAACG,QAAL,CAAc;AAACR,UAAAA,UAAU,EAAEK;AAAb,SAAd;AAAsC,OAAtF,EANkB,CAMuE;AAE7F,K,CACD;;;;+BACWK,C,EAAG;AACZ,UAAMd,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;;AACA,UAAIe,GAAG,GAAGtB,IAAI,CAACO,QAAD,EAAW,IAAX,CAAd;;AACA,UAAIgB,GAAG,GAAGC,IAAI,CAACD,GAAL,OAAAC,IAAI,qBAAQF,GAAR,EAAd;AACAf,MAAAA,QAAQ,CAACkB,IAAT,CAAc;AACVhB,QAAAA,EAAE,EAAEc,GAAG,GAAC,CADE;AAEVG,QAAAA,MAAM,EAAEL,CAAC,CAACb,IAAF,CAAOC,EAFL;AAGVkB,QAAAA,OAAO,EAAEN,CAAC,CAACD,IAHD;AAIVQ,QAAAA,QAAQ,EAAEP,CAAC,CAACb,IAAF,CAAOE;AAJP,OAAd;AAOE,UAAImB,UAAU,GAAGhC,CAAC,CAAC,WAAD,CAAlB;;AACA,UAAIgC,UAAU,CAAC,CAAD,CAAV,CAAcC,YAAd,GAA6BD,UAAU,CAAC,CAAD,CAAV,CAAcE,SAA3C,KAAyDF,UAAU,CAAC,CAAD,CAAV,CAAcG,YAA3E,EAA0F;AACtF,aAAKb,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AACAsB,QAAAA,UAAU,CAACI,OAAX,CAAmB;AAAEF,UAAAA,SAAS,EAAEF,UAAU,CAACK,IAAX,CAAgB,cAAhB;AAAb,SAAnB,EAAmE,GAAnE,EAFsF,CAEb;AAE5E,OAJD,MAIO;AACH,aAAKf,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;;AACA,YAAIc,CAAC,CAACZ,EAAF,KAAS,KAAKH,KAAL,CAAWE,IAAxB,EAA8B;AAC1BqB,UAAAA,UAAU,CAACI,OAAX,CAAmB;AAAEF,YAAAA,SAAS,EAAEF,UAAU,CAACK,IAAX,CAAgB,cAAhB;AAAb,WAAnB,EAAmE,GAAnE;AACH;AACJ;AACJ,K,CACD;;;;mCACeb,C,EAAG;AACd,UAAIA,CAAC,CAACc,KAAN,EAAa;AACT,aAAKvB,MAAL,CAAYwB,IAAZ,CAAiB,YAAjB,EAA+B;AAAChB,UAAAA,IAAI,EAACC,CAAC,CAACc,KAAR;AAAe3B,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAhC,SAA/B,EADS,CAC8D;;AACvEa,QAAAA,CAAC,CAACc,KAAF,GAAU,EAAV;AACH;AACJ,K,CACD;;;;4BACQ;AAEJ,WAAKvB,MAAL,CAAYwB,IAAZ,CAAiB,OAAjB,EAA0B,KAAKC,IAAL,CAAU3B,IAAV,CAAeyB,KAAzC;AAEH;;;kCAEY;AACX,WAAKvB,MAAL,CAAYwB,IAAZ,CAAiB,YAAjB,EAA8B,CAAC;AAACE,QAAAA,IAAI,EAAE,KAAKD,IAAL,CAAUE,WAAjB;AAA6B/B,QAAAA,IAAI,EAAC,KAAKF,KAAL,CAAWE;AAA7C,OAAD,CAA9B;AACD;;;6BAEU;AAAA;;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,KAAK,EAAE;AAACgC,UAAAA,UAAU,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAGE,KAAKlC,KAAL,CAAWE,IAAX,CAAgBC,EAAhB,IAAsB,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,IAAtC,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,GAAG,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,EAA1B;AAA6B,QAAA,KAAK,EAAC,QAAnC;AAA4C,QAAA,OAAO,EAAE,KAAK6B,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKnC,KAAL,CAAWE,IAAX,CAAgBE,IAA7C,CADA,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGK,KAAKJ,KAAL,CAAWK,UAAX,CAAsB+B,GAAtB,CAA0B,UAAAC,IAAI;AAAA,4BAC3B;AAAI,UAAA,GAAG,EAAEA,IAAI,CAAClC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOkC,IAAI,CAACjC,IAAZ,CAAlB,CAD2B;AAAA,OAA9B,CAHL,CADJ,CAFJ,eAYI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWE,IAA3B;AAAiC,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAAtD;AAAgE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWsC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKC,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,CARF,CADE,gBA4BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,EAA1B;AAA6B,QAAA,KAAK,EAAC,OAAnC;AAA2C,QAAA,OAAO,EAAE,KAAKK,KAAL,CAAWL,IAAX,CAAgB,IAAhB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CA/BJ,CADF;AAwCD;;;;EAvGgBtC,S;;AA0GnB,eAAeC,IAAf","sourcesContent":["\nimport $ from 'jquery';\nimport Messages from './messageList';\nimport Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport React, { Component } from 'react';\n\nimport './chat.css' ;\n\nclass chat extends Component {\n  constructor(props){\n    super(props) ;\n    this.state={\n      messages: [], // danh sách tin nhắn\n      user: {id: '', name: ''},// người dùng hiện tại, nếu rỗng sẽ hiển thị form login, có sẽ hiển thị phòng chat\n      userOnline:[] // danh sách người dùng đang online\n      \n    }\n    this.socket =null ;\n  }\n  componentWillMount() {\n    console.log(this.state.user)\n    this.socket = io('localhost:3001');\n    this.socket.on('newMessage', (response) => {this.newMessage(response)}); //lắng nghe khi có tin nhắn mới\n    this.socket.on('loginFail', (response) => {alert('Tên đã có người sử dụng')}); //login fail\n    this.socket.on('loginSuccess', (response) => {this.setState({user: {id: this.socket.id, name: response.data},messages:response.messages})}); //đăng nhập thành công \n     this.socket.on('updateUesrList', (response) => {this.setState({userOnline: response})}); //update lại danh sách người dùng online khi có người đăng nhập hoặc đăng xuất\n\n}\n//Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\nnewMessage(m) {\n  const messages = this.state.messages;\n  let ids = _map(messages, 'id');\n  let max = Math.max(...ids);\n  messages.push({\n      id: max+1,\n      userId: m.user.id,\n      message: m.data,\n      userName: m.user.name\n  });\n    \n    let objMessage = $('.messages');\n    if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight ) {\n        this.setState({messages});\n        objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n\n    } else {\n        this.setState({messages});\n        if (m.id === this.state.user) {\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\n        }\n    }\n}\n//Gửi event socket newMessage với dữ liệu là nội dung tin nhắn và người gửi\nsendnewMessage(m) {\n    if (m.value) {\n        this.socket.emit(\"newMessage\", {data:m.value, user: this.state.user}); //gửi event về server\n        m.value = \"\"; \n    }\n}\n//login để định danh người dùng\nlogin() {\n    \n    this.socket.emit(\"login\", this.refs.name.value); \n    \n}\n\ncreate_room(){\n  this.socket.emit(\"createRoom\",[{room: this.refs.create_room,user:this.state.user}]);\n}\n\n  render() {\n    return (\n      <div className=\"app__content\">\n      <h1 style={{marginLeft: 100}} >chat box</h1>\n  {/* kiểm tra xem user đã tồn tại hay chưa, nếu tồn tại thì render form chat, chưa thì render form login */}\n      { this.state.user.id && this.state.user.name ? \n      <div>\n        <div className=\"create_room_form\" >\n          <input type=\"text\" name=\"room_form\" ref=\"room_name\" ></input>\n          <input type=\"button\" name=\"\" value=\"Create\" onClick={this.create_room.bind(this)} ></input>\n        </div>\n        <div className=\"list_room\" >\n\n        </div>\n        <div className=\"chat_window\">\n            {/* danh sách user online */}\n            <div className=\"menu\">\n                <ul className=\"user\">\n                <span className=\"user-name\">{this.state.user.name}</span>\n                    <p>Online</p>\n                    {this.state.userOnline.map(item =>\n                        <li key={item.id}><span>{item.name}</span></li>\n                    )}\n                </ul>\n            </div>\n        {/* danh sách message */}\n            <div className=\"content\">\n                <Messages user={this.state.user} messages={this.state.messages} typing={this.state.typing}/>\n                <Input sendMessage={this.sendnewMessage.bind(this)}/>\n            </div>\n          </div>\n        </div> \n        :\n          <div className=\"login_form\">{/* form login */}\n              <span className=\"userName\" >Enter user name.</span>\n              <input type=\"text\" name=\"name\" ref=\"name\"></input>\n              <input type=\"button\" name=\"\" value=\"Login\" onClick={this.login.bind(this)}></input>\n          </div>\n      }\n    </div>\n)\n  }\n}\n\nexport default chat;"]},"metadata":{},"sourceType":"module"}