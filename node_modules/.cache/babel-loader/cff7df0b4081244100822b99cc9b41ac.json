{"ast":null,"code":"function pack(message, id) {\n  var result = {\n    jsonrpc: \"2.0\"\n  };\n\n  if (message.method) {\n    result.method = message.method;\n    if (message.params) result.params = message.params;\n    if (id != undefined) result.id = id;\n  } else if (id != undefined) {\n    if (message.error) {\n      if (message.result !== undefined) throw new TypeError(\"Both result and error are defined\");\n      result.error = message.error;\n    } else if (message.result !== undefined) result.result = message.result;else throw new TypeError(\"No result or error is defined\");\n\n    result.id = id;\n  }\n\n  ;\n  return JSON.stringify(result);\n}\n\n;\n\nfunction unpack(message) {\n  var result = message;\n\n  if (typeof message === 'string' || message instanceof String) {\n    result = JSON.parse(message);\n  }\n\n  var version = result.jsonrpc;\n  if (version !== '2.0') throw new TypeError(\"Invalid JsonRPC version '\" + version + \"': \" + message);\n\n  if (result.method == undefined) {\n    if (result.id == undefined) throw new TypeError(\"Invalid message: \" + message);\n    var result_defined = result.result !== undefined;\n    var error_defined = result.error !== undefined;\n    if (result_defined && error_defined) throw new TypeError(\"Both result and error are defined: \" + message);\n    if (!result_defined && !error_defined) throw new TypeError(\"No result or error is defined: \" + message);\n    result.ack = result.id;\n    delete result.id;\n  }\n\n  return result;\n}\n\n;\nexports.pack = pack;\nexports.unpack = unpack;","map":{"version":3,"sources":["../../../../../src/OpenViduInternal/KurentoUtils/kurento-jsonrpc/packers/JsonRPC.js"],"names":[],"mappings":"AAYA,SAAS,IAAT,CAAc,OAAd,EAAuB,EAAvB,EAAyB;AAEvB,MAAI,MAAM,GACV;AACE,IAAA,OAAO,EAAE;AADX,GADA;;AAMA,MAAG,OAAO,CAAC,MAAX,EACA;AACE,IAAA,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAxB;AAEA,QAAG,OAAO,CAAC,MAAX,EACE,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAxB;AAGF,QAAG,EAAE,IAAI,SAAT,EACE,MAAM,CAAC,EAAP,GAAY,EAAZ;AACH,GAVD,MAaK,IAAG,EAAE,IAAI,SAAT,EACL;AACE,QAAG,OAAO,CAAC,KAAX,EACA;AACE,UAAG,OAAO,CAAC,MAAR,KAAmB,SAAtB,EACE,MAAM,IAAI,SAAJ,CAAc,mCAAd,CAAN;AAEF,MAAA,MAAM,CAAC,KAAP,GAAe,OAAO,CAAC,KAAvB;AACD,KAND,MAOK,IAAG,OAAO,CAAC,MAAR,KAAmB,SAAtB,EACH,MAAM,CAAC,MAAP,GAAgB,OAAO,CAAC,MAAxB,CADG,KAGH,MAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;;AAEF,IAAA,MAAM,CAAC,EAAP,GAAY,EAAZ;AACD;;AAAA;AAED,SAAO,IAAI,CAAC,SAAL,CAAe,MAAf,CAAP;AACD;;AAAA;;AAWD,SAAS,MAAT,CAAgB,OAAhB,EAAuB;AAErB,MAAI,MAAM,GAAG,OAAb;;AAEA,MAAG,OAAO,OAAP,KAAmB,QAAnB,IAA+B,OAAO,YAAY,MAArD,EAA6D;AAC3D,IAAA,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,OAAX,CAAT;AACD;;AAID,MAAI,OAAO,GAAG,MAAM,CAAC,OAArB;AACA,MAAG,OAAO,KAAK,KAAf,EACE,MAAM,IAAI,SAAJ,CAAc,8BAA8B,OAA9B,GAAwC,KAAxC,GAAgD,OAA9D,CAAN;;AAGF,MAAG,MAAM,CAAC,MAAP,IAAiB,SAApB,EACA;AACE,QAAG,MAAM,CAAC,EAAP,IAAa,SAAhB,EACE,MAAM,IAAI,SAAJ,CAAc,sBAAoB,OAAlC,CAAN;AAEF,QAAI,cAAc,GAAG,MAAM,CAAC,MAAP,KAAkB,SAAvC;AACA,QAAI,aAAa,GAAI,MAAM,CAAC,KAAP,KAAkB,SAAvC;AAGA,QAAG,cAAc,IAAI,aAArB,EACE,MAAM,IAAI,SAAJ,CAAc,wCAAsC,OAApD,CAAN;AAEF,QAAG,CAAC,cAAD,IAAmB,CAAC,aAAvB,EACE,MAAM,IAAI,SAAJ,CAAc,oCAAkC,OAAhD,CAAN;AAEF,IAAA,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,EAApB;AACA,WAAO,MAAM,CAAC,EAAd;AACD;;AAGD,SAAO,MAAP;AACD;;AAAA;AAGD,OAAO,CAAC,IAAR,GAAiB,IAAjB;AACA,OAAO,CAAC,MAAR,GAAiB,MAAjB","sourceRoot":"","sourcesContent":["function pack(message, id) {\n    var result = {\n        jsonrpc: \"2.0\"\n    };\n    if (message.method) {\n        result.method = message.method;\n        if (message.params)\n            result.params = message.params;\n        if (id != undefined)\n            result.id = id;\n    }\n    else if (id != undefined) {\n        if (message.error) {\n            if (message.result !== undefined)\n                throw new TypeError(\"Both result and error are defined\");\n            result.error = message.error;\n        }\n        else if (message.result !== undefined)\n            result.result = message.result;\n        else\n            throw new TypeError(\"No result or error is defined\");\n        result.id = id;\n    }\n    ;\n    return JSON.stringify(result);\n}\n;\nfunction unpack(message) {\n    var result = message;\n    if (typeof message === 'string' || message instanceof String) {\n        result = JSON.parse(message);\n    }\n    var version = result.jsonrpc;\n    if (version !== '2.0')\n        throw new TypeError(\"Invalid JsonRPC version '\" + version + \"': \" + message);\n    if (result.method == undefined) {\n        if (result.id == undefined)\n            throw new TypeError(\"Invalid message: \" + message);\n        var result_defined = result.result !== undefined;\n        var error_defined = result.error !== undefined;\n        if (result_defined && error_defined)\n            throw new TypeError(\"Both result and error are defined: \" + message);\n        if (!result_defined && !error_defined)\n            throw new TypeError(\"No result or error is defined: \" + message);\n        result.ack = result.id;\n        delete result.id;\n    }\n    return result;\n}\n;\nexports.pack = pack;\nexports.unpack = unpack;\n//# sourceMappingURL=JsonRPC.js.map"]},"metadata":{},"sourceType":"script"}