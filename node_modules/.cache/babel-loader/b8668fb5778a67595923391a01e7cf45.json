{"ast":null,"code":"\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexports.__esModule = true;\n\nvar EventEmitter = require(\"wolfy87-eventemitter\");\n\nvar OpenViduLogger_1 = require(\"../OpenViduInternal/Logger/OpenViduLogger\");\n/**\n * @hidden\n */\n\n\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\n\nvar EventDispatcher =\n/** @class */\nfunction () {\n  function EventDispatcher() {\n    /**\n     * @hidden\n     */\n    this.userHandlerArrowHandler = new WeakMap();\n    /**\n     * @hidden\n     */\n\n    this.ee = new EventEmitter();\n  }\n  /**\n   * Removes a `handler` from event `type`. If no handler is provided, all handlers will be removed from the event\n   *\n   * @returns The object that dispatched the event\n   */\n\n\n  EventDispatcher.prototype.off = function (type, handler) {\n    if (!handler) {\n      this.ee.removeAllListeners(type);\n    } else {\n      // Must remove internal arrow function handler paired with user handler\n      var arrowHandler = this.userHandlerArrowHandler.get(handler);\n\n      if (!!arrowHandler) {\n        this.ee.off(type, arrowHandler);\n      }\n\n      this.userHandlerArrowHandler[\"delete\"](handler);\n    }\n\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  EventDispatcher.prototype.onAux = function (type, message, handler) {\n    var arrowHandler = function arrowHandler(event) {\n      if (event) {\n        logger.info(message, event);\n      } else {\n        logger.info(message);\n      }\n\n      handler(event);\n    };\n\n    this.userHandlerArrowHandler.set(handler, arrowHandler);\n    this.ee.on(type, arrowHandler);\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  EventDispatcher.prototype.onceAux = function (type, message, handler) {\n    var _this = this;\n\n    var arrowHandler = function arrowHandler(event) {\n      if (event) {\n        logger.info(message, event);\n      } else {\n        logger.info(message);\n      }\n\n      handler(event); // Remove handler from map after first and only execution\n\n      _this.userHandlerArrowHandler[\"delete\"](handler);\n    };\n\n    this.userHandlerArrowHandler.set(handler, arrowHandler);\n    this.ee.once(type, arrowHandler);\n    return this;\n  };\n\n  return EventDispatcher;\n}();\n\nexports.EventDispatcher = EventDispatcher;","map":{"version":3,"sources":["../../src/OpenVidu/EventDispatcher.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;AAkBA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,2CAAA,CAAA;AAEA;;;;;AAGA,IAAM,MAAM,GAAmB,gBAAA,CAAA,cAAA,CAAe,WAAf,EAA/B;;AAEA,IAAA,eAAA;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA;AAEI;;;AAGA,SAAA,uBAAA,GAAmF,IAAI,OAAJ,EAAnF;AACA;;;;AAGA,SAAA,EAAA,GAAK,IAAI,YAAJ,EAAL;AAuEH;AAvDG;;;;;;;AAKA,EAAA,eAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,IAAJ,EAAkB,OAAlB,EAAkD;AAC9C,QAAI,CAAC,OAAL,EAAc;AACV,WAAK,EAAL,CAAQ,kBAAR,CAA2B,IAA3B;AACH,KAFD,MAEO;AACH;AACA,UAAM,YAAY,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,CAArB;;AACA,UAAI,CAAC,CAAC,YAAN,EAAoB;AAChB,aAAK,EAAL,CAAQ,GAAR,CAAY,IAAZ,EAAkB,YAAlB;AACH;;AACD,WAAK,uBAAL,CAA6B,QAA7B,EAAoC,OAApC;AACH;;AACD,WAAO,IAAP;AACH,GAZD;AAcA;;;;;AAGA,EAAA,eAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,IAAN,EAAoB,OAApB,EAAqC,OAArC,EAAoE;AAChE,QAAM,YAAY,GAAG,SAAf,YAAe,CAAA,KAAA,EAAK;AACtB,UAAI,KAAJ,EAAW;AACP,QAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,KAArB;AACH,OAFD,MAEO;AACH,QAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACH;;AACD,MAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAPD;;AAQA,SAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,EAA0C,YAA1C;AACA,SAAK,EAAL,CAAQ,EAAR,CAAW,IAAX,EAAiB,YAAjB;AACA,WAAO,IAAP;AACH,GAZD;AAcA;;;;;AAGA,EAAA,eAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAsB,OAAtB,EAAuC,OAAvC,EAAsE;AAAtE,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,YAAY,GAAG,SAAf,YAAe,CAAA,KAAA,EAAK;AACtB,UAAI,KAAJ,EAAW;AACP,QAAA,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,KAArB;AACH,OAFD,MAEO;AACH,QAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACH;;AACD,MAAA,OAAO,CAAC,KAAD,CAAP,CANsB,CAOtB;;AACA,MAAA,KAAI,CAAC,uBAAL,CAA6B,QAA7B,EAAoC,OAApC;AACH,KATD;;AAUA,SAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,EAA0C,YAA1C;AACA,SAAK,EAAL,CAAQ,IAAR,CAAa,IAAb,EAAmB,YAAnB;AACA,WAAO,IAAP;AACH,GAdD;;AAgBJ,SAAA,eAAA;AAAC,CAhFD,EAAA;;AAAsB,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * (C) Copyright 2017-2020 OpenVidu (https://openvidu.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexports.__esModule = true;\nvar EventEmitter = require(\"wolfy87-eventemitter\");\nvar OpenViduLogger_1 = require(\"../OpenViduInternal/Logger/OpenViduLogger\");\n/**\n * @hidden\n */\nvar logger = OpenViduLogger_1.OpenViduLogger.getInstance();\nvar EventDispatcher = /** @class */ (function () {\n    function EventDispatcher() {\n        /**\n         * @hidden\n         */\n        this.userHandlerArrowHandler = new WeakMap();\n        /**\n         * @hidden\n         */\n        this.ee = new EventEmitter();\n    }\n    /**\n     * Removes a `handler` from event `type`. If no handler is provided, all handlers will be removed from the event\n     *\n     * @returns The object that dispatched the event\n     */\n    EventDispatcher.prototype.off = function (type, handler) {\n        if (!handler) {\n            this.ee.removeAllListeners(type);\n        }\n        else {\n            // Must remove internal arrow function handler paired with user handler\n            var arrowHandler = this.userHandlerArrowHandler.get(handler);\n            if (!!arrowHandler) {\n                this.ee.off(type, arrowHandler);\n            }\n            this.userHandlerArrowHandler[\"delete\"](handler);\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    EventDispatcher.prototype.onAux = function (type, message, handler) {\n        var arrowHandler = function (event) {\n            if (event) {\n                logger.info(message, event);\n            }\n            else {\n                logger.info(message);\n            }\n            handler(event);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.on(type, arrowHandler);\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    EventDispatcher.prototype.onceAux = function (type, message, handler) {\n        var _this = this;\n        var arrowHandler = function (event) {\n            if (event) {\n                logger.info(message, event);\n            }\n            else {\n                logger.info(message);\n            }\n            handler(event);\n            // Remove handler from map after first and only execution\n            _this.userHandlerArrowHandler[\"delete\"](handler);\n        };\n        this.userHandlerArrowHandler.set(handler, arrowHandler);\n        this.ee.once(type, arrowHandler);\n        return this;\n    };\n    return EventDispatcher;\n}());\nexports.EventDispatcher = EventDispatcher;\n//# sourceMappingURL=EventDispatcher.js.map"]},"metadata":{},"sourceType":"script"}