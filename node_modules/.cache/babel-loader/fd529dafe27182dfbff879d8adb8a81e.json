{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport $ from 'jquery';\n\nvar OpenViduLayout = function () {\n  function OpenViduLayout() {\n    _classCallCheck(this, OpenViduLayout);\n  }\n\n  _createClass(OpenViduLayout, [{\n    key: 'fixAspectRatio',\n    value: function fixAspectRatio(elem, width) {\n      var sub = elem.querySelector('.OT_root');\n\n      if (sub) {\n        // If this is the parent of a subscriber or publisher then we need\n        // to force the mutation observer on the publisher or subscriber to\n        // trigger to get it to fix it's layout\n        var oldWidth = sub.style.width;\n        sub.style.width = width + 'px'; // sub.style.height = height + 'px';\n\n        sub.style.width = oldWidth || '';\n      }\n    }\n  }, {\n    key: 'positionElement',\n    value: function positionElement(elem, x, y, width, height, animate) {\n      var _this = this;\n\n      var targetPosition = {\n        left: x + 'px',\n        top: y + 'px',\n        width: width + 'px',\n        height: height + 'px'\n      };\n      this.fixAspectRatio(elem, width);\n\n      if (animate && $) {\n        $(elem).stop();\n        $(elem).animate(targetPosition, animate.duration || 200, animate.easing || 'swing', function () {\n          _this.fixAspectRatio(elem, width);\n\n          if (animate.complete) {\n            animate.complete.call(_this);\n          }\n        });\n      } else {\n        $(elem).css(targetPosition);\n      }\n\n      this.fixAspectRatio(elem, width);\n    }\n  }, {\n    key: 'getVideoRatio',\n    value: function getVideoRatio(elem) {\n      if (!elem) {\n        return 3 / 4;\n      }\n\n      var video = elem.querySelector('video');\n\n      if (video && video.videoHeight && video.videoWidth) {\n        return video.videoHeight / video.videoWidth;\n      } else if (elem.videoHeight && elem.videoWidth) {\n        return elem.videoHeight / elem.videoWidth;\n      }\n\n      return 3 / 4;\n    }\n  }, {\n    key: 'getCSSNumber',\n    value: function getCSSNumber(elem, prop) {\n      var cssStr = $(elem).css(prop);\n      return cssStr ? parseInt(cssStr, 10) : 0;\n    } // Really cheap UUID function\n\n  }, {\n    key: 'cheapUUID',\n    value: function cheapUUID() {\n      return (Math.random() * 100000000).toFixed(0);\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(elem) {\n      var heightStr = $(elem).css('height');\n      return heightStr ? parseInt(heightStr, 10) : 0;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(elem) {\n      var widthStr = $(elem).css('width');\n      return widthStr ? parseInt(widthStr, 10) : 0;\n    }\n  }, {\n    key: 'getBestDimensions',\n    value: function getBestDimensions(minR, maxR, count, WIDTH, HEIGHT, targetHeight) {\n      var maxArea = void 0,\n          targetCols = void 0,\n          targetRows = void 0,\n          targetWidth = void 0,\n          tWidth = void 0,\n          tHeight = void 0,\n          tRatio = void 0; // Iterate through every possible combination of rows and columns\n      // and see which one has the least amount of whitespace\n\n      for (var i = 1; i <= count; i++) {\n        var colsAux = i;\n        var rowsAux = Math.ceil(count / colsAux); // Try taking up the whole height and width\n\n        tHeight = Math.floor(HEIGHT / rowsAux);\n        tWidth = Math.floor(WIDTH / colsAux);\n        tRatio = tHeight / tWidth;\n\n        if (tRatio > maxR) {\n          // We went over decrease the height\n          tRatio = maxR;\n          tHeight = tWidth * tRatio;\n        } else if (tRatio < minR) {\n          // We went under decrease the width\n          tRatio = minR;\n          tWidth = tHeight / tRatio;\n        }\n\n        var area = tWidth * tHeight * count; // If this width and height takes up the most space then we're going with that\n\n        if (maxArea === undefined || area > maxArea) {\n          maxArea = area;\n          targetHeight = tHeight;\n          targetWidth = tWidth;\n          targetCols = colsAux;\n          targetRows = rowsAux;\n        }\n      }\n\n      return {\n        maxArea: maxArea,\n        targetCols: targetCols,\n        targetRows: targetRows,\n        targetHeight: targetHeight,\n        targetWidth: targetWidth,\n        ratio: targetHeight / targetWidth\n      };\n    }\n  }, {\n    key: 'arrange',\n    value: function arrange(children, WIDTH, HEIGHT, offsetLeft, offsetTop, fixedRatio, minRatio, maxRatio, animate) {\n      var targetHeight = void 0;\n      var count = children.length;\n      var dimensions = void 0;\n\n      if (!fixedRatio) {\n        dimensions = this.getBestDimensions(minRatio, maxRatio, count, WIDTH, HEIGHT, targetHeight);\n      } else {\n        // Use the ratio of the first video element we find to approximate\n        var ratio = this.getVideoRatio(children.length > 0 ? children[0] : null);\n        dimensions = this.getBestDimensions(ratio, ratio, count, WIDTH, HEIGHT, targetHeight);\n      } // Loop through each stream in the container and place it inside\n\n\n      var x = 0,\n          y = 0;\n      var rows = [];\n      var row = void 0; // Iterate through the children and create an array with a new item for each row\n      // and calculate the width of each row so that we know if we go over the size and need\n      // to adjust\n\n      for (var i = 0; i < children.length; i++) {\n        if (i % dimensions.targetCols === 0) {\n          // This is a new row\n          row = {\n            children: [],\n            width: 0,\n            height: 0\n          };\n          rows.push(row);\n        }\n\n        var elem = children[i];\n        row.children.push(elem);\n        var targetWidth = dimensions.targetWidth;\n        targetHeight = dimensions.targetHeight; // If we're using a fixedRatio then we need to set the correct ratio for this element\n\n        if (fixedRatio) {\n          targetWidth = targetHeight / this.getVideoRatio(elem);\n        }\n\n        row.width += targetWidth;\n        row.height = targetHeight;\n      } // Calculate total row height adjusting if we go too wide\n\n\n      var totalRowHeight = 0;\n      var remainingShortRows = 0;\n\n      for (var _i = 0; _i < rows.length; _i++) {\n        row = rows[_i];\n\n        if (row.width > WIDTH) {\n          // Went over on the width, need to adjust the height proportionally\n          row.height = Math.floor(row.height * (WIDTH / row.width));\n          row.width = WIDTH;\n        } else if (row.width < WIDTH) {\n          remainingShortRows += 1;\n        }\n\n        totalRowHeight += row.height;\n      }\n\n      if (totalRowHeight < HEIGHT && remainingShortRows > 0) {\n        // We can grow some of the rows, we're not taking up the whole height\n        var remainingHeightDiff = HEIGHT - totalRowHeight;\n        totalRowHeight = 0;\n\n        for (var _i2 = 0; _i2 < rows.length; _i2++) {\n          row = rows[_i2];\n\n          if (row.width < WIDTH) {\n            // Evenly distribute the extra height between the short rows\n            var extraHeight = remainingHeightDiff / remainingShortRows;\n\n            if (extraHeight / row.height > (WIDTH - row.width) / row.width) {\n              // We can't go that big or we'll go too wide\n              extraHeight = Math.floor((WIDTH - row.width) / row.width * row.height);\n            }\n\n            row.width += Math.floor(extraHeight / row.height * row.width);\n            row.height += extraHeight;\n            remainingHeightDiff -= extraHeight;\n            remainingShortRows -= 1;\n          }\n\n          totalRowHeight += row.height;\n        }\n      } // vertical centering\n\n\n      y = (HEIGHT - totalRowHeight) / 2; // Iterate through each row and place each child\n\n      for (var _i3 = 0; _i3 < rows.length; _i3++) {\n        row = rows[_i3]; // center the row\n\n        var rowMarginLeft = (WIDTH - row.width) / 2;\n        x = rowMarginLeft;\n\n        for (var j = 0; j < row.children.length; j++) {\n          var _elem = row.children[j];\n          var _targetWidth = dimensions.targetWidth;\n          targetHeight = row.height; // If we're using a fixedRatio then we need to set the correct ratio for this element\n\n          if (fixedRatio) {\n            _targetWidth = Math.floor(targetHeight / this.getVideoRatio(_elem));\n          }\n\n          _elem.style.position = 'absolute'; // $(elem).css('position', 'absolute');\n\n          var actualWidth = _targetWidth - this.getCSSNumber(_elem, 'paddingLeft') - this.getCSSNumber(_elem, 'paddingRight') - this.getCSSNumber(_elem, 'marginLeft') - this.getCSSNumber(_elem, 'marginRight') - this.getCSSNumber(_elem, 'borderLeft') - this.getCSSNumber(_elem, 'borderRight');\n          var actualHeight = targetHeight - this.getCSSNumber(_elem, 'paddingTop') - this.getCSSNumber(_elem, 'paddingBottom') - this.getCSSNumber(_elem, 'marginTop') - this.getCSSNumber(_elem, 'marginBottom') - this.getCSSNumber(_elem, 'borderTop') - this.getCSSNumber(_elem, 'borderBottom');\n          this.positionElement(_elem, x + offsetLeft, y + offsetTop, actualWidth, actualHeight, animate);\n          x += _targetWidth;\n        }\n\n        y += targetHeight;\n      }\n    }\n  }, {\n    key: 'filterDisplayNone',\n    value: function filterDisplayNone(element) {\n      return element.style.display !== 'none';\n    }\n  }, {\n    key: 'updateLayout',\n    value: function updateLayout() {\n      if (this.layoutContainer.style.display === 'none') {\n        return;\n      }\n\n      var id = this.layoutContainer.id;\n\n      if (!id) {\n        id = 'OT_' + this.cheapUUID();\n        this.layoutContainer.id = id;\n      }\n\n      var HEIGHT = this.getHeight(this.layoutContainer) - this.getCSSNumber(this.layoutContainer, 'borderTop') - this.getCSSNumber(this.layoutContainer, 'borderBottom');\n      var WIDTH = this.getWidth(this.layoutContainer) - this.getCSSNumber(this.layoutContainer, 'borderLeft') - this.getCSSNumber(this.layoutContainer, 'borderRight');\n      var availableRatio = HEIGHT / WIDTH;\n      var offsetLeft = 0;\n      var offsetTop = 0;\n      var bigOffsetTop = 0;\n      var bigOffsetLeft = 0;\n      var bigOnes = Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#' + id + '>.' + this.opts.bigClass), this.filterDisplayNone);\n      var smallOnes = Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#' + id + '>*:not(.' + this.opts.bigClass + ')'), this.filterDisplayNone);\n\n      if (bigOnes.length > 0 && smallOnes.length > 0) {\n        var bigWidth = void 0,\n            bigHeight = void 0;\n\n        if (availableRatio > this.getVideoRatio(bigOnes[0])) {\n          // We are tall, going to take up the whole width and arrange small\n          // guys at the bottom\n          bigWidth = WIDTH;\n          bigHeight = Math.floor(HEIGHT * this.opts.bigPercentage);\n          offsetTop = bigHeight;\n          bigOffsetTop = HEIGHT - offsetTop;\n        } else {\n          // We are wide, going to take up the whole height and arrange the small\n          // guys on the right\n          bigHeight = HEIGHT;\n          bigWidth = Math.floor(WIDTH * this.opts.bigPercentage);\n          offsetLeft = bigWidth;\n          bigOffsetLeft = WIDTH - offsetLeft;\n        }\n\n        if (this.opts.bigFirst) {\n          this.arrange(bigOnes, bigWidth, bigHeight, 0, 0, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n          this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, offsetLeft, offsetTop, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n        } else {\n          this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, 0, 0, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n          this.arrange(bigOnes, bigWidth, bigHeight, bigOffsetLeft, bigOffsetTop, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n        }\n      } else if (bigOnes.length > 0 && smallOnes.length === 0) {\n        this // We only have one bigOne just center it\n        .arrange(bigOnes, WIDTH, HEIGHT, 0, 0, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n      } else {\n        this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, offsetLeft, offsetTop, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n      }\n    }\n  }, {\n    key: 'initLayoutContainer',\n    value: function initLayoutContainer(container, opts) {\n      this.opts = {\n        maxRatio: opts.maxRatio != null ? opts.maxRatio : 3 / 2,\n        minRatio: opts.minRatio != null ? opts.minRatio : 9 / 16,\n        fixedRatio: opts.fixedRatio != null ? opts.fixedRatio : false,\n        animate: opts.animate != null ? opts.animate : false,\n        bigClass: opts.bigClass != null ? opts.bigClass : 'OT_big',\n        bigPercentage: opts.bigPercentage != null ? opts.bigPercentage : 0.8,\n        bigFixedRatio: opts.bigFixedRatio != null ? opts.bigFixedRatio : false,\n        bigMaxRatio: opts.bigMaxRatio != null ? opts.bigMaxRatio : 3 / 2,\n        bigMinRatio: opts.bigMinRatio != null ? opts.bigMinRatio : 9 / 16,\n        bigFirst: opts.bigFirst != null ? opts.bigFirst : true\n      };\n      this.layoutContainer = typeof container === 'string' ? $(container) : container;\n    }\n  }, {\n    key: 'setLayoutOptions',\n    value: function setLayoutOptions(options) {\n      this.opts = options;\n    }\n  }]);\n\n  return OpenViduLayout;\n}();\n\nexport default OpenViduLayout;","map":{"version":3,"sources":["/home/trongtu/Documents/ki 2 nam 3/CongNgheWeb/baitaplon/baitaplon_frontend/node_modules/openvidu-react/dist/layout/openvidu-layout.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","$","OpenViduLayout","value","fixAspectRatio","elem","width","sub","querySelector","oldWidth","style","positionElement","x","y","height","animate","_this","targetPosition","left","top","stop","duration","easing","complete","call","css","getVideoRatio","video","videoHeight","videoWidth","getCSSNumber","prop","cssStr","parseInt","cheapUUID","Math","random","toFixed","getHeight","heightStr","getWidth","widthStr","getBestDimensions","minR","maxR","count","WIDTH","HEIGHT","targetHeight","maxArea","targetCols","targetRows","targetWidth","tWidth","tHeight","tRatio","colsAux","rowsAux","ceil","floor","area","undefined","ratio","arrange","children","offsetLeft","offsetTop","fixedRatio","minRatio","maxRatio","dimensions","rows","row","push","totalRowHeight","remainingShortRows","_i","remainingHeightDiff","_i2","extraHeight","_i3","rowMarginLeft","j","_elem","_targetWidth","position","actualWidth","actualHeight","filterDisplayNone","element","display","updateLayout","layoutContainer","id","availableRatio","bigOffsetTop","bigOffsetLeft","bigOnes","Array","filter","querySelectorAll","opts","bigClass","smallOnes","bigWidth","bigHeight","bigPercentage","bigFirst","bigFixedRatio","bigMinRatio","bigMaxRatio","initLayoutContainer","container","setLayoutOptions","options"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport $ from 'jquery';\n\nvar OpenViduLayout = function () {\n  function OpenViduLayout() {\n    _classCallCheck(this, OpenViduLayout);\n  }\n\n  _createClass(OpenViduLayout, [{\n    key: 'fixAspectRatio',\n    value: function fixAspectRatio(elem, width) {\n      var sub = elem.querySelector('.OT_root');\n      if (sub) {\n        // If this is the parent of a subscriber or publisher then we need\n        // to force the mutation observer on the publisher or subscriber to\n        // trigger to get it to fix it's layout\n        var oldWidth = sub.style.width;\n        sub.style.width = width + 'px';\n        // sub.style.height = height + 'px';\n        sub.style.width = oldWidth || '';\n      }\n    }\n  }, {\n    key: 'positionElement',\n    value: function positionElement(elem, x, y, width, height, animate) {\n      var _this = this;\n\n      var targetPosition = {\n        left: x + 'px',\n        top: y + 'px',\n        width: width + 'px',\n        height: height + 'px'\n      };\n\n      this.fixAspectRatio(elem, width);\n\n      if (animate && $) {\n        $(elem).stop();\n        $(elem).animate(targetPosition, animate.duration || 200, animate.easing || 'swing', function () {\n          _this.fixAspectRatio(elem, width);\n          if (animate.complete) {\n            animate.complete.call(_this);\n          }\n        });\n      } else {\n        $(elem).css(targetPosition);\n      }\n      this.fixAspectRatio(elem, width);\n    }\n  }, {\n    key: 'getVideoRatio',\n    value: function getVideoRatio(elem) {\n      if (!elem) {\n        return 3 / 4;\n      }\n      var video = elem.querySelector('video');\n      if (video && video.videoHeight && video.videoWidth) {\n        return video.videoHeight / video.videoWidth;\n      } else if (elem.videoHeight && elem.videoWidth) {\n        return elem.videoHeight / elem.videoWidth;\n      }\n      return 3 / 4;\n    }\n  }, {\n    key: 'getCSSNumber',\n    value: function getCSSNumber(elem, prop) {\n      var cssStr = $(elem).css(prop);\n      return cssStr ? parseInt(cssStr, 10) : 0;\n    }\n\n    // Really cheap UUID function\n\n  }, {\n    key: 'cheapUUID',\n    value: function cheapUUID() {\n      return (Math.random() * 100000000).toFixed(0);\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(elem) {\n      var heightStr = $(elem).css('height');\n      return heightStr ? parseInt(heightStr, 10) : 0;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(elem) {\n      var widthStr = $(elem).css('width');\n      return widthStr ? parseInt(widthStr, 10) : 0;\n    }\n  }, {\n    key: 'getBestDimensions',\n    value: function getBestDimensions(minR, maxR, count, WIDTH, HEIGHT, targetHeight) {\n      var maxArea = void 0,\n          targetCols = void 0,\n          targetRows = void 0,\n          targetWidth = void 0,\n          tWidth = void 0,\n          tHeight = void 0,\n          tRatio = void 0;\n\n      // Iterate through every possible combination of rows and columns\n      // and see which one has the least amount of whitespace\n      for (var i = 1; i <= count; i++) {\n        var colsAux = i;\n        var rowsAux = Math.ceil(count / colsAux);\n\n        // Try taking up the whole height and width\n        tHeight = Math.floor(HEIGHT / rowsAux);\n        tWidth = Math.floor(WIDTH / colsAux);\n\n        tRatio = tHeight / tWidth;\n        if (tRatio > maxR) {\n          // We went over decrease the height\n          tRatio = maxR;\n          tHeight = tWidth * tRatio;\n        } else if (tRatio < minR) {\n          // We went under decrease the width\n          tRatio = minR;\n          tWidth = tHeight / tRatio;\n        }\n\n        var area = tWidth * tHeight * count;\n\n        // If this width and height takes up the most space then we're going with that\n        if (maxArea === undefined || area > maxArea) {\n          maxArea = area;\n          targetHeight = tHeight;\n          targetWidth = tWidth;\n          targetCols = colsAux;\n          targetRows = rowsAux;\n        }\n      }\n      return {\n        maxArea: maxArea,\n        targetCols: targetCols,\n        targetRows: targetRows,\n        targetHeight: targetHeight,\n        targetWidth: targetWidth,\n        ratio: targetHeight / targetWidth\n      };\n    }\n  }, {\n    key: 'arrange',\n    value: function arrange(children, WIDTH, HEIGHT, offsetLeft, offsetTop, fixedRatio, minRatio, maxRatio, animate) {\n      var targetHeight = void 0;\n\n      var count = children.length;\n      var dimensions = void 0;\n\n      if (!fixedRatio) {\n        dimensions = this.getBestDimensions(minRatio, maxRatio, count, WIDTH, HEIGHT, targetHeight);\n      } else {\n        // Use the ratio of the first video element we find to approximate\n        var ratio = this.getVideoRatio(children.length > 0 ? children[0] : null);\n        dimensions = this.getBestDimensions(ratio, ratio, count, WIDTH, HEIGHT, targetHeight);\n      }\n\n      // Loop through each stream in the container and place it inside\n      var x = 0,\n          y = 0;\n      var rows = [];\n      var row = void 0;\n      // Iterate through the children and create an array with a new item for each row\n      // and calculate the width of each row so that we know if we go over the size and need\n      // to adjust\n      for (var i = 0; i < children.length; i++) {\n        if (i % dimensions.targetCols === 0) {\n          // This is a new row\n          row = {\n            children: [],\n            width: 0,\n            height: 0\n          };\n          rows.push(row);\n        }\n        var elem = children[i];\n        row.children.push(elem);\n        var targetWidth = dimensions.targetWidth;\n        targetHeight = dimensions.targetHeight;\n        // If we're using a fixedRatio then we need to set the correct ratio for this element\n        if (fixedRatio) {\n          targetWidth = targetHeight / this.getVideoRatio(elem);\n        }\n        row.width += targetWidth;\n        row.height = targetHeight;\n      }\n      // Calculate total row height adjusting if we go too wide\n      var totalRowHeight = 0;\n      var remainingShortRows = 0;\n      for (var _i = 0; _i < rows.length; _i++) {\n        row = rows[_i];\n        if (row.width > WIDTH) {\n          // Went over on the width, need to adjust the height proportionally\n          row.height = Math.floor(row.height * (WIDTH / row.width));\n          row.width = WIDTH;\n        } else if (row.width < WIDTH) {\n          remainingShortRows += 1;\n        }\n        totalRowHeight += row.height;\n      }\n      if (totalRowHeight < HEIGHT && remainingShortRows > 0) {\n        // We can grow some of the rows, we're not taking up the whole height\n        var remainingHeightDiff = HEIGHT - totalRowHeight;\n        totalRowHeight = 0;\n        for (var _i2 = 0; _i2 < rows.length; _i2++) {\n          row = rows[_i2];\n          if (row.width < WIDTH) {\n            // Evenly distribute the extra height between the short rows\n            var extraHeight = remainingHeightDiff / remainingShortRows;\n            if (extraHeight / row.height > (WIDTH - row.width) / row.width) {\n              // We can't go that big or we'll go too wide\n              extraHeight = Math.floor((WIDTH - row.width) / row.width * row.height);\n            }\n            row.width += Math.floor(extraHeight / row.height * row.width);\n            row.height += extraHeight;\n            remainingHeightDiff -= extraHeight;\n            remainingShortRows -= 1;\n          }\n          totalRowHeight += row.height;\n        }\n      }\n      // vertical centering\n      y = (HEIGHT - totalRowHeight) / 2;\n      // Iterate through each row and place each child\n      for (var _i3 = 0; _i3 < rows.length; _i3++) {\n        row = rows[_i3];\n        // center the row\n        var rowMarginLeft = (WIDTH - row.width) / 2;\n        x = rowMarginLeft;\n        for (var j = 0; j < row.children.length; j++) {\n          var _elem = row.children[j];\n\n          var _targetWidth = dimensions.targetWidth;\n          targetHeight = row.height;\n          // If we're using a fixedRatio then we need to set the correct ratio for this element\n          if (fixedRatio) {\n            _targetWidth = Math.floor(targetHeight / this.getVideoRatio(_elem));\n          }\n          _elem.style.position = 'absolute';\n          // $(elem).css('position', 'absolute');\n          var actualWidth = _targetWidth - this.getCSSNumber(_elem, 'paddingLeft') - this.getCSSNumber(_elem, 'paddingRight') - this.getCSSNumber(_elem, 'marginLeft') - this.getCSSNumber(_elem, 'marginRight') - this.getCSSNumber(_elem, 'borderLeft') - this.getCSSNumber(_elem, 'borderRight');\n\n          var actualHeight = targetHeight - this.getCSSNumber(_elem, 'paddingTop') - this.getCSSNumber(_elem, 'paddingBottom') - this.getCSSNumber(_elem, 'marginTop') - this.getCSSNumber(_elem, 'marginBottom') - this.getCSSNumber(_elem, 'borderTop') - this.getCSSNumber(_elem, 'borderBottom');\n\n          this.positionElement(_elem, x + offsetLeft, y + offsetTop, actualWidth, actualHeight, animate);\n          x += _targetWidth;\n        }\n        y += targetHeight;\n      }\n    }\n  }, {\n    key: 'filterDisplayNone',\n    value: function filterDisplayNone(element) {\n      return element.style.display !== 'none';\n    }\n  }, {\n    key: 'updateLayout',\n    value: function updateLayout() {\n      if (this.layoutContainer.style.display === 'none') {\n        return;\n      }\n      var id = this.layoutContainer.id;\n      if (!id) {\n        id = 'OT_' + this.cheapUUID();\n        this.layoutContainer.id = id;\n      }\n\n      var HEIGHT = this.getHeight(this.layoutContainer) - this.getCSSNumber(this.layoutContainer, 'borderTop') - this.getCSSNumber(this.layoutContainer, 'borderBottom');\n      var WIDTH = this.getWidth(this.layoutContainer) - this.getCSSNumber(this.layoutContainer, 'borderLeft') - this.getCSSNumber(this.layoutContainer, 'borderRight');\n\n      var availableRatio = HEIGHT / WIDTH;\n\n      var offsetLeft = 0;\n      var offsetTop = 0;\n      var bigOffsetTop = 0;\n      var bigOffsetLeft = 0;\n\n      var bigOnes = Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#' + id + '>.' + this.opts.bigClass), this.filterDisplayNone);\n      var smallOnes = Array.prototype.filter.call(this.layoutContainer.querySelectorAll('#' + id + '>*:not(.' + this.opts.bigClass + ')'), this.filterDisplayNone);\n\n      if (bigOnes.length > 0 && smallOnes.length > 0) {\n        var bigWidth = void 0,\n            bigHeight = void 0;\n\n        if (availableRatio > this.getVideoRatio(bigOnes[0])) {\n          // We are tall, going to take up the whole width and arrange small\n          // guys at the bottom\n          bigWidth = WIDTH;\n          bigHeight = Math.floor(HEIGHT * this.opts.bigPercentage);\n          offsetTop = bigHeight;\n          bigOffsetTop = HEIGHT - offsetTop;\n        } else {\n          // We are wide, going to take up the whole height and arrange the small\n          // guys on the right\n          bigHeight = HEIGHT;\n          bigWidth = Math.floor(WIDTH * this.opts.bigPercentage);\n          offsetLeft = bigWidth;\n          bigOffsetLeft = WIDTH - offsetLeft;\n        }\n        if (this.opts.bigFirst) {\n          this.arrange(bigOnes, bigWidth, bigHeight, 0, 0, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n          this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, offsetLeft, offsetTop, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n        } else {\n          this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, 0, 0, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n          this.arrange(bigOnes, bigWidth, bigHeight, bigOffsetLeft, bigOffsetTop, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n        }\n      } else if (bigOnes.length > 0 && smallOnes.length === 0) {\n        this\n        // We only have one bigOne just center it\n        .arrange(bigOnes, WIDTH, HEIGHT, 0, 0, this.opts.bigFixedRatio, this.opts.bigMinRatio, this.opts.bigMaxRatio, this.opts.animate);\n      } else {\n        this.arrange(smallOnes, WIDTH - offsetLeft, HEIGHT - offsetTop, offsetLeft, offsetTop, this.opts.fixedRatio, this.opts.minRatio, this.opts.maxRatio, this.opts.animate);\n      }\n    }\n  }, {\n    key: 'initLayoutContainer',\n    value: function initLayoutContainer(container, opts) {\n      this.opts = {\n        maxRatio: opts.maxRatio != null ? opts.maxRatio : 3 / 2,\n        minRatio: opts.minRatio != null ? opts.minRatio : 9 / 16,\n        fixedRatio: opts.fixedRatio != null ? opts.fixedRatio : false,\n        animate: opts.animate != null ? opts.animate : false,\n        bigClass: opts.bigClass != null ? opts.bigClass : 'OT_big',\n        bigPercentage: opts.bigPercentage != null ? opts.bigPercentage : 0.8,\n        bigFixedRatio: opts.bigFixedRatio != null ? opts.bigFixedRatio : false,\n        bigMaxRatio: opts.bigMaxRatio != null ? opts.bigMaxRatio : 3 / 2,\n        bigMinRatio: opts.bigMinRatio != null ? opts.bigMinRatio : 9 / 16,\n        bigFirst: opts.bigFirst != null ? opts.bigFirst : true\n      };\n      this.layoutContainer = typeof container === 'string' ? $(container) : container;\n    }\n  }, {\n    key: 'setLayoutOptions',\n    value: function setLayoutOptions(options) {\n      this.opts = options;\n    }\n  }]);\n\n  return OpenViduLayout;\n}();\n\nexport default OpenViduLayout;"]},"metadata":{},"sourceType":"module"}